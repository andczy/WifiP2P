android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.a:
    void invalidateOptionsMenu(android.app.Activity) -> a
android.support.v4.app.BackStackRecord -> android.support.v4.app.b:
    android.support.v4.app.FragmentManagerImpl mManager -> a
    android.support.v4.app.BackStackRecord$Op mHead -> b
    android.support.v4.app.BackStackRecord$Op mTail -> c
    int mNumOp -> d
    int mEnterAnim -> e
    int mExitAnim -> f
    int mPopEnterAnim -> g
    int mPopExitAnim -> h
    int mTransition -> i
    int mTransitionStyle -> j
    boolean mAddToBackStack -> k
    boolean mAllowAddToBackStack -> l
    java.lang.String mName -> m
    boolean mCommitted -> n
    int mIndex -> o
    int mBreadCrumbTitleRes -> p
    java.lang.CharSequence mBreadCrumbTitleText -> q
    int mBreadCrumbShortTitleRes -> r
    java.lang.CharSequence mBreadCrumbShortTitleText -> s
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> a
    void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    void bumpBackStackNesting(int) -> a
    int commit() -> a
    int commitInternal(boolean) -> a
    void run() -> run
    void popFromBackStack(boolean) -> b
    java.lang.String getName() -> b
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.c:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.d:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.BackStackState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    android.support.v4.util.SimpleArrayMap sClassMap -> P
    int mState -> a
    android.view.View mAnimatingAway -> b
    int mStateAfterAnimating -> c
    android.os.Bundle mSavedFragmentState -> d
    android.util.SparseArray mSavedViewState -> e
    int mIndex -> f
    java.lang.String mWho -> g
    android.os.Bundle mArguments -> h
    android.support.v4.app.Fragment mTarget -> i
    int mTargetIndex -> j
    int mTargetRequestCode -> k
    boolean mAdded -> l
    boolean mRemoving -> m
    boolean mResumed -> n
    boolean mFromLayout -> o
    boolean mInLayout -> p
    boolean mRestored -> q
    int mBackStackNesting -> r
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> s
    android.support.v4.app.FragmentActivity mActivity -> t
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> u
    android.support.v4.app.Fragment mParentFragment -> v
    int mFragmentId -> w
    int mContainerId -> x
    java.lang.String mTag -> y
    boolean mHidden -> z
    boolean mDetached -> A
    boolean mRetainInstance -> B
    boolean mRetaining -> C
    boolean mHasMenu -> D
    boolean mMenuVisible -> E
    boolean mCalled -> F
    int mNextAnim -> G
    android.view.ViewGroup mContainer -> H
    android.view.View mView -> I
    android.view.View mInnerView -> J
    boolean mDeferStart -> K
    boolean mUserVisibleHint -> L
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> M
    boolean mLoadersStarted -> N
    boolean mCheckedForLoaderManager -> O
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> a
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> a
    boolean isSupportFragmentClass(android.content.Context,java.lang.String) -> b
    void restoreViewState(android.os.Bundle) -> a
    void setIndex(int,android.support.v4.app.Fragment) -> a
    boolean isInBackStack() -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    android.support.v4.app.FragmentActivity getActivity() -> b
    android.content.res.Resources getResources() -> c
    boolean isDetached() -> d
    void onHiddenChanged(boolean) -> a
    void onActivityResult(int,int,android.content.Intent) -> a
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> b
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> a
    void onAttach(android.app.Activity) -> a
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> a
    void onCreate(android.os.Bundle) -> c
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    void onActivityCreated(android.os.Bundle) -> d
    void onViewStateRestored(android.os.Bundle) -> e
    void onStart() -> e
    void onResume() -> f
    void onSaveInstanceState(android.os.Bundle) -> f
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> g
    void onStop() -> h
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> i
    void onDestroy() -> j
    void initState() -> k
    void onDetach() -> l
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    void onPrepareOptionsMenu(android.view.Menu) -> a
    void onDestroyOptionsMenu() -> m
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    void onOptionsMenuClosed(android.view.Menu) -> b
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> b
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void instantiateChildFragmentManager() -> n
    void performCreate(android.os.Bundle) -> g
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> b
    void performActivityCreated(android.os.Bundle) -> h
    void performStart() -> o
    void performResume() -> p
    void performConfigurationChanged(android.content.res.Configuration) -> a
    void performLowMemory() -> q
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> b
    boolean performPrepareOptionsMenu(android.view.Menu) -> c
    boolean performOptionsItemSelected(android.view.MenuItem) -> c
    boolean performContextItemSelected(android.view.MenuItem) -> d
    void performOptionsMenuClosed(android.view.Menu) -> d
    void performSaveInstanceState(android.os.Bundle) -> i
    void performPause() -> r
    void performStop() -> s
    void performReallyStop() -> t
    void performDestroyView() -> u
    void performDestroy() -> v
android.support.v4.app.Fragment$1 -> android.support.v4.app.e:
    android.support.v4.app.Fragment this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.f:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.g:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.h:
    android.os.Handler mHandler -> a
    android.support.v4.app.FragmentManagerImpl mFragments -> b
    android.support.v4.app.FragmentContainer mContainer -> c
    boolean mCreated -> d
    boolean mResumed -> e
    boolean mStopped -> f
    boolean mReallyStopped -> g
    boolean mRetaining -> h
    boolean mOptionsMenuInvalidated -> i
    boolean mCheckedForLoaderManager -> j
    boolean mLoadersStarted -> k
    android.support.v4.util.SimpleArrayMap mAllLoaderManagers -> l
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> m
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> a
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsPanel(android.view.View,android.view.Menu) -> a
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> b
    void supportInvalidateOptionsMenu() -> c
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> a
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> a
    void doReallyStop(boolean) -> a
    void onReallyStop() -> d
    void onAttachFragment(android.support.v4.app.Fragment) -> a
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void invalidateSupportFragment(java.lang.String) -> a
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> a
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.i:
    int[] Fragment -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.j:
    java.lang.Object activity -> a
    java.lang.Object custom -> b
    android.support.v4.util.SimpleArrayMap children -> c
    java.util.ArrayList fragments -> d
    android.support.v4.util.SimpleArrayMap loaders -> e
android.support.v4.app.FragmentContainer -> android.support.v4.app.k:
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentManager -> android.support.v4.app.l:
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.m:
    void onBackStackChanged() -> a
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.n:
    boolean DEBUG -> a
    boolean HONEYCOMB -> b
    java.util.ArrayList mPendingActions -> c
    java.lang.Runnable[] mTmpActions -> d
    boolean mExecutingActions -> e
    java.util.ArrayList mActive -> f
    java.util.ArrayList mAdded -> g
    java.util.ArrayList mAvailIndices -> h
    java.util.ArrayList mBackStack -> i
    java.util.ArrayList mCreatedMenus -> j
    java.util.ArrayList mBackStackIndices -> k
    java.util.ArrayList mAvailBackStackIndices -> l
    java.util.ArrayList mBackStackChangeListeners -> m
    int mCurState -> n
    android.support.v4.app.FragmentActivity mActivity -> o
    android.support.v4.app.FragmentContainer mContainer -> p
    android.support.v4.app.Fragment mParent -> q
    boolean mNeedMenuInvalidate -> r
    boolean mStateSaved -> s
    boolean mDestroyed -> t
    java.lang.String mNoTransactionsBecause -> u
    boolean mHavePendingDeferredStart -> v
    android.os.Bundle mStateBundle -> w
    android.util.SparseArray mStateArray -> x
    java.lang.Runnable mExecCommit -> y
    android.view.animation.Interpolator DECELERATE_QUINT -> z
    android.view.animation.Interpolator DECELERATE_CUBIC -> A
    android.view.animation.Interpolator ACCELERATE_QUINT -> B
    android.view.animation.Interpolator ACCELERATE_CUBIC -> C
    void throwException(java.lang.RuntimeException) -> a
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    boolean popBackStackImmediate() -> c
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> a
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> a
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> a
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> a
    void moveToState(android.support.v4.app.Fragment) -> b
    void moveToState(int,boolean) -> a
    void moveToState(int,int,int,boolean) -> a
    void startPendingDeferredFragments() -> d
    void makeActive(android.support.v4.app.Fragment) -> c
    void makeInactive(android.support.v4.app.Fragment) -> d
    void addFragment(android.support.v4.app.Fragment,boolean) -> a
    void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    void showFragment(android.support.v4.app.Fragment,int,int) -> c
    void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    android.support.v4.app.Fragment findFragmentById(int) -> a
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void checkStateLoss() -> t
    void enqueueAction(java.lang.Runnable,boolean) -> a
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> a
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    void freeBackStackIndex(int) -> b
    boolean execPendingActions() -> e
    void reportBackStackChanged() -> f
    void addBackStackState(android.support.v4.app.BackStackRecord) -> b
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> a
    java.util.ArrayList retainNonConfig() -> g
    void saveFragmentViewState(android.support.v4.app.Fragment) -> e
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> f
    android.os.Parcelable saveAllState() -> h
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> a
    void noteStateNotSaved() -> i
    void dispatchCreate() -> j
    void dispatchActivityCreated() -> k
    void dispatchStart() -> l
    void dispatchResume() -> m
    void dispatchPause() -> n
    void dispatchStop() -> o
    void dispatchReallyStop() -> p
    void dispatchDestroyView() -> q
    void dispatchDestroy() -> r
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchLowMemory() -> s
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> a
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchContextItemSelected(android.view.MenuItem) -> b
    void dispatchOptionsMenuClosed(android.view.Menu) -> b
    int reverseTransit(int) -> c
    int transitToStyleIndex(int,boolean) -> b
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.o:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.p:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.q:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentManagerState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> a
    int mIndex -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mDetached -> h
    android.os.Bundle mArguments -> i
    android.os.Bundle mSavedFragmentState -> j
    android.support.v4.app.Fragment mInstance -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.r:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> a
    android.content.Context mContext -> b
    android.support.v4.app.FragmentManager mFragmentManager -> c
    int mContainerId -> d
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> e
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> f
    boolean mAttached -> g
    void setup() -> setup
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> a
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.s:
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.t:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.u:
    java.lang.String tag -> a
    java.lang.Class clss -> b
    android.os.Bundle args -> c
    android.support.v4.app.Fragment fragment -> d
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> a
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> b
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> c
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> d
android.support.v4.app.FragmentTransaction -> android.support.v4.app.v:
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    int commit() -> a
android.support.v4.app.LoaderManager -> android.support.v4.app.w:
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.x:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.y:
    boolean DEBUG -> a
    android.support.v4.util.SparseArrayCompat mLoaders -> b
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> c
    java.lang.String mWho -> d
    android.support.v4.app.FragmentActivity mActivity -> e
    boolean mStarted -> f
    boolean mRetaining -> g
    void updateActivity(android.support.v4.app.FragmentActivity) -> a
    void doStart() -> b
    void doStop() -> c
    void doRetain() -> d
    void finishRetain() -> e
    void doReportNextStart() -> f
    void doReportStart() -> g
    void doDestroy() -> h
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.z:
    int mId -> a
    android.os.Bundle mArgs -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> c
    android.support.v4.content.Loader mLoader -> d
    boolean mHaveData -> e
    boolean mDeliveredData -> f
    java.lang.Object mData -> g
    boolean mStarted -> h
    boolean mRetaining -> i
    boolean mRetainingStarted -> j
    boolean mReportNextStart -> k
    boolean mDestroyed -> l
    boolean mListenerRegistered -> m
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    void start() -> a
    void retain() -> b
    void finishRetain() -> c
    void reportStart() -> d
    void stop() -> e
    void destroy() -> f
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.aa:
    android.view.ViewGroup wrap(android.view.View) -> a
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.NotificationCompat -> android.support.v4.app.ab:
    android.support.v4.app.NotificationCompat$NotificationCompatImpl IMPL -> a
    android.support.v4.app.NotificationCompat$NotificationCompatImpl access$000() -> a
android.support.v4.app.NotificationCompat$Action -> android.support.v4.app.ac:
    int icon -> a
    java.lang.CharSequence title -> b
    android.app.PendingIntent actionIntent -> c
android.support.v4.app.NotificationCompat$BigPictureStyle -> android.support.v4.app.ad:
    android.graphics.Bitmap mPicture -> a
    android.graphics.Bitmap mBigLargeIcon -> b
    boolean mBigLargeIconSet -> c
android.support.v4.app.NotificationCompat$BigTextStyle -> android.support.v4.app.ae:
    java.lang.CharSequence mBigText -> a
android.support.v4.app.NotificationCompat$Builder -> android.support.v4.app.af:
    android.content.Context mContext -> a
    java.lang.CharSequence mContentTitle -> b
    java.lang.CharSequence mContentText -> c
    android.app.PendingIntent mContentIntent -> d
    android.app.PendingIntent mFullScreenIntent -> e
    android.widget.RemoteViews mTickerView -> f
    android.graphics.Bitmap mLargeIcon -> g
    java.lang.CharSequence mContentInfo -> h
    int mNumber -> i
    int mPriority -> j
    boolean mUseChronometer -> k
    android.support.v4.app.NotificationCompat$Style mStyle -> l
    java.lang.CharSequence mSubText -> m
    int mProgressMax -> n
    int mProgress -> o
    boolean mProgressIndeterminate -> p
    java.util.ArrayList mActions -> q
    android.app.Notification mNotification -> r
    android.support.v4.app.NotificationCompat$Builder setWhen(long) -> a
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int) -> a
    android.support.v4.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence) -> a
    android.support.v4.app.NotificationCompat$Builder setContentText(java.lang.CharSequence) -> b
    android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent) -> a
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence) -> c
    android.support.v4.app.NotificationCompat$Builder setAutoCancel(boolean) -> a
    void setFlag(int,boolean) -> a
    android.app.Notification build() -> a
android.support.v4.app.NotificationCompat$InboxStyle -> android.support.v4.app.ag:
    java.util.ArrayList mTexts -> a
android.support.v4.app.NotificationCompat$NotificationCompatImpl -> android.support.v4.app.ah:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplBase -> android.support.v4.app.ai:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplGingerbread -> android.support.v4.app.aj:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb -> android.support.v4.app.ak:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich -> android.support.v4.app.al:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean -> android.support.v4.app.am:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$Style -> android.support.v4.app.an:
    java.lang.CharSequence mBigContentTitle -> d
    java.lang.CharSequence mSummaryText -> e
    boolean mSummaryTextSet -> f
android.support.v4.app.NotificationCompatGingerbread -> android.support.v4.app.ao:
    android.app.Notification add(android.app.Notification,android.content.Context,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent,android.app.PendingIntent) -> a
android.support.v4.app.NotificationCompatHoneycomb -> android.support.v4.app.ap:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap) -> a
android.support.v4.app.NotificationCompatIceCreamSandwich -> android.support.v4.app.aq:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean) -> a
android.support.v4.app.NotificationCompatJellybean -> android.support.v4.app.ar:
    android.app.Notification$Builder b -> a
    void addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> a
    void addBigTextStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.lang.CharSequence) -> a
    void addBigPictureStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,android.graphics.Bitmap,android.graphics.Bitmap,boolean) -> a
    void addInboxStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.util.ArrayList) -> a
    android.app.Notification build() -> a
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.as:
android.support.v4.content.Loader -> android.support.v4.a.a:
    int mId -> a
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> b
    boolean mStarted -> c
    boolean mAbandoned -> d
    boolean mReset -> e
    boolean mContentChanged -> f
    boolean mProcessingChange -> g
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void startLoading() -> a
    void onStartLoading() -> b
    void stopLoading() -> c
    void onStopLoading() -> d
    void reset() -> e
    void onReset() -> f
    java.lang.String dataToString(java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.a.b:
android.support.v4.os.ParcelableCompat -> android.support.v4.b.a:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.b.b:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.b.c:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.b.d:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.b.e:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.util.ArrayMap -> android.support.v4.c.a:
    android.support.v4.util.MapCollections mCollections -> a
    android.support.v4.util.MapCollections getCollection() -> b
    void putAll(java.util.Map) -> putAll
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
android.support.v4.util.ArrayMap$1 -> android.support.v4.c.b:
    android.support.v4.util.ArrayMap this$0 -> a
    int colGetSize() -> a
    java.lang.Object colGetEntry(int,int) -> a
    int colIndexOfKey(java.lang.Object) -> a
    int colIndexOfValue(java.lang.Object) -> b
    java.util.Map colGetMap() -> b
    void colPut(java.lang.Object,java.lang.Object) -> a
    java.lang.Object colSetValue(int,java.lang.Object) -> a
    void colRemoveAt(int) -> a
    void colClear() -> c
android.support.v4.util.ContainerHelpers -> android.support.v4.c.c:
    int[] EMPTY_INTS -> a
    long[] EMPTY_LONGS -> b
    java.lang.Object[] EMPTY_OBJECTS -> c
    int idealIntArraySize(int) -> a
    int idealByteArraySize(int) -> b
    boolean equal(java.lang.Object,java.lang.Object) -> a
    int binarySearch(int[],int,int) -> a
android.support.v4.util.DebugUtils -> android.support.v4.c.d:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
android.support.v4.util.LogWriter -> android.support.v4.c.e:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.util.MapCollections -> android.support.v4.c.f:
    android.support.v4.util.MapCollections$EntrySet mEntrySet -> b
    android.support.v4.util.MapCollections$KeySet mKeySet -> c
    android.support.v4.util.MapCollections$ValuesCollection mValues -> d
    boolean containsAllHelper(java.util.Map,java.util.Collection) -> a
    boolean removeAllHelper(java.util.Map,java.util.Collection) -> b
    boolean retainAllHelper(java.util.Map,java.util.Collection) -> c
    java.lang.Object[] toArrayHelper(int) -> b
    java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> a
    boolean equalsSetHelper(java.util.Set,java.lang.Object) -> a
    java.util.Set getEntrySet() -> d
    java.util.Set getKeySet() -> e
    java.util.Collection getValues() -> f
    int colGetSize() -> a
    java.lang.Object colGetEntry(int,int) -> a
    int colIndexOfKey(java.lang.Object) -> a
    int colIndexOfValue(java.lang.Object) -> b
    java.util.Map colGetMap() -> b
    void colPut(java.lang.Object,java.lang.Object) -> a
    java.lang.Object colSetValue(int,java.lang.Object) -> a
    void colRemoveAt(int) -> a
    void colClear() -> c
android.support.v4.util.MapCollections$ArrayIterator -> android.support.v4.c.g:
    int mOffset -> a
    int mSize -> b
    int mIndex -> c
    boolean mCanRemove -> d
    android.support.v4.util.MapCollections this$0 -> e
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
android.support.v4.util.MapCollections$EntrySet -> android.support.v4.c.h:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.util.Map$Entry) -> a
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean add(java.lang.Object) -> add
android.support.v4.util.MapCollections$KeySet -> android.support.v4.c.i:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
android.support.v4.util.MapCollections$MapIterator -> android.support.v4.c.j:
    int mEnd -> a
    int mIndex -> b
    boolean mEntryValid -> c
    android.support.v4.util.MapCollections this$0 -> d
    boolean hasNext() -> hasNext
    java.util.Map$Entry next() -> a
    void remove() -> remove
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object next() -> next
android.support.v4.util.MapCollections$ValuesCollection -> android.support.v4.c.k:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
android.support.v4.util.SimpleArrayMap -> android.support.v4.c.l:
    java.lang.Object[] mBaseCache -> b
    int mBaseCacheSize -> c
    java.lang.Object[] mTwiceBaseCache -> d
    int mTwiceBaseCacheSize -> e
    int[] mHashes -> f
    java.lang.Object[] mArray -> g
    int mSize -> h
    int indexOf(java.lang.Object,int) -> a
    int indexOfNull() -> a
    void allocArrays(int) -> e
    void freeArrays(int[],java.lang.Object[],int) -> a
    void clear() -> clear
    void ensureCapacity(int) -> a
    boolean containsKey(java.lang.Object) -> containsKey
    int indexOfValue(java.lang.Object) -> a
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object keyAt(int) -> b
    java.lang.Object valueAt(int) -> c
    java.lang.Object setValueAt(int,java.lang.Object) -> a
    boolean isEmpty() -> isEmpty
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object removeAt(int) -> d
    int size() -> size
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
android.support.v4.util.SparseArrayCompat -> android.support.v4.c.m:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    android.support.v4.util.SparseArrayCompat clone() -> a
    void gc() -> d
    int size() -> b
    int keyAt(int) -> a
    java.lang.Object valueAt(int) -> b
    void clear() -> c
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
android.support.v4.view.GravityCompat -> android.support.v4.view.a:
    android.support.v4.view.GravityCompat$GravityCompatImpl IMPL -> a
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImpl -> android.support.v4.view.b:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplBase -> android.support.v4.view.c:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1 -> android.support.v4.view.d:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompatJellybeanMr1 -> android.support.v4.view.e:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.KeyEventCompat -> android.support.v4.view.f:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    boolean hasModifiers(android.view.KeyEvent,int) -> a
    boolean hasNoModifiers(android.view.KeyEvent) -> a
    void startTracking(android.view.KeyEvent) -> b
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.g:
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> a
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl -> android.support.v4.view.h:
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.i:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.j:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompatEclair -> android.support.v4.view.k:
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.l:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.MotionEventCompat -> android.support.v4.view.m:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int getActionMasked(android.view.MotionEvent) -> a
    int getActionIndex(android.view.MotionEvent) -> b
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> c
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.n:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.o:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.p:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.q:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.PagerAdapter -> android.support.v4.view.r:
    android.database.DataSetObservable mObservable -> a
    int getCount() -> a
    void startUpdate(android.view.ViewGroup) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> b
    void startUpdate(android.view.View) -> a
    java.lang.Object instantiateItem(android.view.View,int) -> a
    void destroyItem(android.view.View,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> b
    void finishUpdate(android.view.View) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> b
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    int getItemPosition(java.lang.Object) -> a
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
    float getPageWidth(int) -> a
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.s:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.t:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.u:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.v:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.w:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.ViewCompat -> android.support.v4.view.x:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> c
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> d
    boolean isOpaque(android.view.View) -> e
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.y:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> c
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> d
    boolean isOpaque(android.view.View) -> e
android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl -> android.support.v4.view.z:
    boolean isOpaque(android.view.View) -> e
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.aa:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.ab:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> c
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.ac:
    boolean canScrollHorizontally(android.view.View,int) -> a
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.ad:
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.ae:
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> d
android.support.v4.view.ViewCompat$KitKatViewCompatImpl -> android.support.v4.view.af:
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.ag:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> c
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> d
    boolean isOpaque(android.view.View) -> e
android.support.v4.view.ViewCompatEclairMr1 -> android.support.v4.view.ah:
    boolean isOpaque(android.view.View) -> a
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.ai:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompatHC -> android.support.v4.view.aj:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> a
android.support.v4.view.ViewCompatICS -> android.support.v4.view.ak:
    boolean canScrollHorizontally(android.view.View,int) -> a
android.support.v4.view.ViewCompatJB -> android.support.v4.view.al:
    void postInvalidateOnAnimation(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
android.support.v4.view.ViewCompatJellybeanMr1 -> android.support.v4.view.am:
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> a
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    int mExpectedAdapterCount -> b
    java.util.Comparator COMPARATOR -> c
    android.view.animation.Interpolator sInterpolator -> d
    java.util.ArrayList mItems -> e
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> f
    android.graphics.Rect mTempRect -> g
    android.support.v4.view.PagerAdapter mAdapter -> h
    int mCurItem -> i
    int mRestoredCurItem -> j
    android.os.Parcelable mRestoredAdapterState -> k
    java.lang.ClassLoader mRestoredClassLoader -> l
    android.widget.Scroller mScroller -> m
    android.support.v4.view.ViewPager$PagerObserver mObserver -> n
    int mPageMargin -> o
    android.graphics.drawable.Drawable mMarginDrawable -> p
    int mTopPageBounds -> q
    int mBottomPageBounds -> r
    float mFirstOffset -> s
    float mLastOffset -> t
    int mChildWidthMeasureSpec -> u
    int mChildHeightMeasureSpec -> v
    boolean mInLayout -> w
    boolean mScrollingCacheEnabled -> x
    boolean mPopulatePending -> y
    int mOffscreenPageLimit -> z
    boolean mIsBeingDragged -> A
    boolean mIsUnableToDrag -> B
    int mDefaultGutterSize -> C
    int mGutterSize -> D
    int mTouchSlop -> E
    float mLastMotionX -> F
    float mLastMotionY -> G
    float mInitialMotionX -> H
    float mInitialMotionY -> I
    int mActivePointerId -> J
    android.view.VelocityTracker mVelocityTracker -> K
    int mMinimumVelocity -> L
    int mMaximumVelocity -> M
    int mFlingDistance -> N
    int mCloseEnough -> O
    boolean mFakeDragging -> P
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> Q
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> R
    boolean mFirstLayout -> S
    boolean mNeedCalculatePageOffsets -> T
    boolean mCalledSuper -> U
    int mDecorChildCount -> V
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> W
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> Z
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> aa
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> ab
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> ac
    int mDrawingOrder -> ad
    java.util.ArrayList mDrawingOrderedChildren -> ae
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> af
    java.lang.Runnable mEndScrollRunnable -> ag
    int mScrollState -> ah
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> f
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    int getClientWidth() -> getClientWidth
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> a
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void scrollToItem(int,boolean,int,boolean) -> a
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> a
    void smoothScrollTo(int,int,int) -> a
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> a
    void dataSetChanged() -> a
    void populate() -> b
    void populate(int) -> a
    void sortChildDrawingOrder() -> g
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> b
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> d
    void onPageScrolled(int,float,int) -> a
    void completeScroll(boolean) -> a
    boolean isGutterDrag(float,float) -> a
    void enableLayers(boolean) -> b
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestParentDisallowInterceptTouchEvent(boolean) -> c
    boolean performDrag(float) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> h
    int determineTargetPage(int,float,int,int) -> a
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> i
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScrollHorizontally(int) -> canScrollHorizontally
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> a
    boolean arrowScroll(int) -> c
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    boolean pageLeft() -> c
    boolean pageRight() -> d
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    int[] access$400() -> e
android.support.v4.view.ViewPager$1 -> android.support.v4.view.an:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.ao:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.ap:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.aq:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ar:
    boolean isDecor -> a
    int gravity -> b
    float widthFactor -> c
    boolean needsMeasure -> d
    int position -> e
    int childIndex -> f
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.as:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.at:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.au:
    void transformPage(android.view.View,float) -> a
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.av:
    android.support.v4.view.ViewPager this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.aw:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> b
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> b
    java.lang.Object[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.ax:
    int compare(android.view.View,android.view.View) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.widget.DrawerLayout -> android.support.v4.widget.DrawerLayout:
    int[] LAYOUT_ATTRS -> a
    int mMinDrawerMargin -> b
    int mScrimColor -> c
    float mScrimOpacity -> d
    android.graphics.Paint mScrimPaint -> e
    android.support.v4.widget.ViewDragHelper mLeftDragger -> f
    android.support.v4.widget.ViewDragHelper mRightDragger -> g
    android.support.v4.widget.DrawerLayout$ViewDragCallback mLeftCallback -> h
    android.support.v4.widget.DrawerLayout$ViewDragCallback mRightCallback -> i
    int mDrawerState -> j
    boolean mInLayout -> k
    boolean mFirstLayout -> l
    int mLockModeLeft -> m
    int mLockModeRight -> n
    boolean mDisallowInterceptRequested -> o
    boolean mChildrenCanceledTouch -> p
    android.support.v4.widget.DrawerLayout$DrawerListener mListener -> q
    float mInitialMotionX -> r
    float mInitialMotionY -> s
    android.graphics.drawable.Drawable mShadowLeft -> t
    android.graphics.drawable.Drawable mShadowRight -> u
    void setScrimColor(int) -> setScrimColor
    void setDrawerListener(android.support.v4.widget.DrawerLayout$DrawerListener) -> setDrawerListener
    void setDrawerLockMode(int) -> setDrawerLockMode
    void setDrawerLockMode(int,int) -> a
    int getDrawerLockMode(android.view.View) -> a
    void updateDrawerState(int,int,android.view.View) -> a
    void dispatchOnDrawerClosed(android.view.View) -> b
    void dispatchOnDrawerOpened(android.view.View) -> c
    void dispatchOnDrawerSlide(android.view.View,float) -> a
    void setDrawerViewOffset(android.view.View,float) -> b
    float getDrawerViewOffset(android.view.View) -> d
    int getDrawerViewAbsoluteGravity(android.view.View) -> e
    boolean checkDrawerViewAbsoluteGravity(android.view.View,int) -> a
    android.view.View findOpenDrawer() -> a
    android.view.View findDrawerWithGravity(int) -> a
    java.lang.String gravityToString(int) -> b
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void requestLayout() -> requestLayout
    void computeScroll() -> computeScroll
    boolean hasOpaqueBackground(android.view.View) -> k
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    boolean isContentView(android.view.View) -> f
    boolean isDrawerView(android.view.View) -> g
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    void closeDrawers() -> b
    void closeDrawers(boolean) -> a
    void openDrawer(android.view.View) -> h
    void closeDrawer(android.view.View) -> i
    boolean isDrawerVisible(android.view.View) -> j
    boolean hasPeekingDrawer() -> d
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    boolean hasVisibleDrawer() -> e
    android.view.View findVisibleDrawer() -> f
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    int[] access$100() -> c
android.support.v4.widget.DrawerLayout$DrawerListener -> android.support.v4.widget.a:
    void onDrawerSlide(android.view.View,float) -> a
    void onDrawerOpened(android.view.View) -> a
    void onDrawerClosed(android.view.View) -> b
    void onDrawerStateChanged(int) -> a
android.support.v4.widget.DrawerLayout$LayoutParams -> android.support.v4.widget.b:
    int gravity -> a
    float onScreen -> b
    boolean isPeeking -> c
    boolean knownOpen -> d
android.support.v4.widget.DrawerLayout$SavedState -> android.support.v4.widget.DrawerLayout$SavedState:
    int openDrawerGravity -> a
    int lockModeLeft -> b
    int lockModeRight -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.DrawerLayout$SavedState$1 -> android.support.v4.widget.c:
    android.support.v4.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.DrawerLayout$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.DrawerLayout$ViewDragCallback -> android.support.v4.widget.d:
    int mAbsGravity -> b
    android.support.v4.widget.ViewDragHelper mDragger -> c
    java.lang.Runnable mPeekRunnable -> d
    android.support.v4.widget.DrawerLayout this$0 -> a
    void removeCallbacks() -> a
    boolean tryCaptureView(android.view.View,int) -> a
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void closeOtherDrawer() -> b
    void onViewReleased(android.view.View,float,float) -> a
    void onEdgeTouched(int,int) -> a
    boolean onEdgeLock(int) -> b
    void onEdgeDragStarted(int,int) -> b
    int getViewHorizontalDragRange(android.view.View) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.widget.e:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> a
    boolean isFinished() -> a
    void finish() -> b
    boolean onPull(float) -> a
    boolean onRelease() -> c
    boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.widget.f:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.widget.g:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.widget.h:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.widget.i:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.ScrollerCompat -> android.support.v4.widget.j:
    java.lang.Object mScroller -> a
    android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl IMPL -> b
    boolean isFinished() -> a
    int getCurrX() -> b
    int getCurrY() -> c
    int getFinalX() -> d
    int getFinalY() -> e
    boolean computeScrollOffset() -> f
    void startScroll(int,int,int,int,int) -> a
    void abortAnimation() -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl -> android.support.v4.widget.k:
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase -> android.support.v4.widget.l:
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread -> android.support.v4.widget.m:
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs -> android.support.v4.widget.n:
android.support.v4.widget.ScrollerCompatGingerbread -> android.support.v4.widget.o:
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.SlidingPaneLayout -> android.support.v4.widget.SlidingPaneLayout:
    int mSliderFadeColor -> b
    int mCoveredFadeColor -> c
    android.graphics.drawable.Drawable mShadowDrawable -> d
    int mOverhangSize -> e
    boolean mCanSlide -> f
    android.view.View mSlideableView -> g
    float mSlideOffset -> h
    float mParallaxOffset -> i
    int mSlideRange -> j
    boolean mIsUnableToDrag -> k
    int mParallaxBy -> l
    float mInitialMotionX -> m
    float mInitialMotionY -> n
    android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener -> o
    android.support.v4.widget.ViewDragHelper mDragHelper -> p
    boolean mPreservedOpenState -> q
    boolean mFirstLayout -> r
    android.graphics.Rect mTmpRect -> s
    java.util.ArrayList mPostedRunnables -> t
    android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl IMPL -> a
    void setParallaxDistance(int) -> setParallaxDistance
    int getParallaxDistance() -> getParallaxDistance
    void setSliderFadeColor(int) -> setSliderFadeColor
    int getSliderFadeColor() -> getSliderFadeColor
    void setCoveredFadeColor(int) -> setCoveredFadeColor
    int getCoveredFadeColor() -> getCoveredFadeColor
    void setPanelSlideListener(android.support.v4.widget.SlidingPaneLayout$PanelSlideListener) -> setPanelSlideListener
    void updateObscuredViewsVisibility(android.view.View) -> a
    void setAllChildrenVisible() -> a
    boolean viewIsOpaque(android.view.View) -> c
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean closePane(android.view.View,int) -> a
    boolean openPane(android.view.View,int) -> b
    boolean openPane() -> b
    boolean closePane() -> c
    boolean isOpen() -> d
    boolean isSlideable() -> e
    void dimChildView(android.view.View,float,int) -> a
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void invalidateChildRegion(android.view.View) -> d
    boolean smoothSlideTo(float,int) -> a
    void computeScroll() -> computeScroll
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setShadowResource(int) -> setShadowResource
    void draw(android.graphics.Canvas) -> draw
    void parallaxOtherViews(float) -> a
    boolean isDimmed(android.view.View) -> b
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void access$900(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
    java.util.ArrayList access$1000(android.support.v4.widget.SlidingPaneLayout) -> a
android.support.v4.widget.SlidingPaneLayout$1 -> android.support.v4.widget.p:
android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable -> android.support.v4.widget.q:
    android.view.View mChildView -> a
    android.support.v4.widget.SlidingPaneLayout this$0 -> b
    void run() -> run
android.support.v4.widget.SlidingPaneLayout$LayoutParams -> android.support.v4.widget.r:
    int[] ATTRS -> e
    float weight -> a
    boolean slideable -> b
    boolean dimWhenOffset -> c
    android.graphics.Paint dimPaint -> d
android.support.v4.widget.SlidingPaneLayout$PanelSlideListener -> android.support.v4.widget.s:
android.support.v4.widget.SlidingPaneLayout$SavedState -> android.support.v4.widget.SlidingPaneLayout$SavedState:
    boolean isOpen -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.SlidingPaneLayout$SavedState$1 -> android.support.v4.widget.t:
    android.support.v4.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.SlidingPaneLayout$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl -> android.support.v4.widget.u:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase -> android.support.v4.widget.v:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB -> android.support.v4.widget.w:
    java.lang.reflect.Method mGetDisplayList -> a
    java.lang.reflect.Field mRecreateDisplayList -> b
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1 -> android.support.v4.widget.x:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.ViewDragHelper -> android.support.v4.widget.y:
    int mDragState -> a
    int mTouchSlop -> b
    int mActivePointerId -> c
    float[] mInitialMotionX -> d
    float[] mInitialMotionY -> e
    float[] mLastMotionX -> f
    float[] mLastMotionY -> g
    int[] mInitialEdgesTouched -> h
    int[] mEdgeDragsInProgress -> i
    int[] mEdgeDragsLocked -> j
    int mPointersDown -> k
    android.view.VelocityTracker mVelocityTracker -> l
    float mMaxVelocity -> m
    float mMinVelocity -> n
    int mEdgeSize -> o
    int mTrackingEdges -> p
    android.support.v4.widget.ScrollerCompat mScroller -> q
    android.support.v4.widget.ViewDragHelper$Callback mCallback -> r
    android.view.View mCapturedView -> s
    boolean mReleaseInProgress -> t
    android.view.ViewGroup mParentView -> u
    android.view.animation.Interpolator sInterpolator -> v
    java.lang.Runnable mSetIdleRunnable -> w
    int getViewDragState() -> a
    int getEdgeSize() -> b
    void captureChildView(android.view.View,int) -> a
    android.view.View getCapturedView() -> c
    int getTouchSlop() -> d
    void cancel() -> e
    void abort() -> f
    boolean smoothSlideViewTo(android.view.View,int,int) -> a
    boolean settleCapturedViewAt(int,int) -> a
    boolean forceSettleCapturedViewAt(int,int,int,int) -> a
    int computeSettleDuration(android.view.View,int,int,int,int) -> a
    int computeAxisDuration(int,int,int) -> a
    int clampMag(int,int,int) -> b
    float clampMag(float,float,float) -> a
    float distanceInfluenceForSnapDuration(float) -> a
    boolean continueSettling(boolean) -> a
    void dispatchViewReleased(float,float) -> a
    void clearMotionHistory() -> g
    void clearMotionHistory(int) -> d
    void ensureMotionHistorySizeForId(int) -> e
    void saveInitialMotion(float,float,int) -> a
    void saveLastMotion(android.view.MotionEvent) -> c
    boolean isPointerDown(int) -> a
    void setDragState(int) -> b
    boolean tryCaptureViewForDrag(android.view.View,int) -> b
    boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> a
    void processTouchEvent(android.view.MotionEvent) -> b
    void reportNewEdgeDrags(float,float,int) -> b
    boolean checkNewEdgeDrag(float,float,int,int) -> a
    boolean checkTouchSlop(android.view.View,float,float) -> a
    boolean checkTouchSlop(int) -> c
    boolean checkTouchSlop(int,int) -> b
    void releaseViewForPointerUp() -> h
    void dragTo(int,int,int,int) -> b
    boolean isCapturedViewUnder(int,int) -> c
    boolean isViewUnder(android.view.View,int,int) -> b
    android.view.View findTopChildUnder(int,int) -> d
    int getEdgesTouched(int,int) -> e
android.support.v4.widget.ViewDragHelper$1 -> android.support.v4.widget.z:
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ViewDragHelper$Callback -> android.support.v4.widget.aa:
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void onViewReleased(android.view.View,float,float) -> a
    void onEdgeTouched(int,int) -> a
    boolean onEdgeLock(int) -> b
    void onEdgeDragStarted(int,int) -> b
    int getOrderedChildIndex(int) -> c
    int getViewHorizontalDragRange(android.view.View) -> a
    int getViewVerticalDragRange(android.view.View) -> b
    boolean tryCaptureView(android.view.View,int) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
com.alibaba.fastjson.JSON -> com.a.a.a:
    java.lang.String DEFAULT_TYPE_KEY -> a
    int DEFAULT_PARSER_FEATURE -> b
    java.lang.String DEFFAULT_DATE_FORMAT -> c
    int DEFAULT_GENERATE_FEATURE -> d
    java.lang.Object parse(java.lang.String) -> a
    java.lang.Object parse(java.lang.String,int) -> a
    com.alibaba.fastjson.JSONObject parseObject(java.lang.String) -> b
    java.lang.Object parseObject(java.lang.String,java.lang.Class,com.alibaba.fastjson.parser.Feature[]) -> a
    java.lang.Object parseObject(java.lang.String,java.lang.reflect.Type,com.alibaba.fastjson.parser.ParserConfig,int,com.alibaba.fastjson.parser.Feature[]) -> a
    int handleResovleTask(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Object) -> a
    java.lang.Object parseObject(java.lang.String,java.lang.Class) -> a
    java.lang.String toJSONString(java.lang.Object) -> a
    java.lang.String toJSONString(java.lang.Object,com.alibaba.fastjson.serializer.SerializerFeature[]) -> a
    java.lang.String toJSONString(java.lang.Object,com.alibaba.fastjson.serializer.SerializeFilter,com.alibaba.fastjson.serializer.SerializerFeature[]) -> a
    java.lang.String toString() -> toString
    java.lang.String toJSONString() -> a
    void writeJSONString(java.lang.Appendable) -> a
    java.lang.Object toJSON(java.lang.Object) -> b
    java.lang.Object toJSON(java.lang.Object,com.alibaba.fastjson.parser.ParserConfig) -> a
com.alibaba.fastjson.JSONArray -> com.a.a.b:
    java.util.List list -> g
    java.lang.Object relatedArray -> e
    java.lang.reflect.Type componentType -> f
    java.lang.Object getRelatedArray() -> b
    void setRelatedArray(java.lang.Object) -> c
    java.lang.reflect.Type getComponentType() -> c
    void setComponentType(java.lang.reflect.Type) -> a
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    java.util.Iterator iterator() -> iterator
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean add(java.lang.Object) -> add
    boolean remove(java.lang.Object) -> remove
    boolean containsAll(java.util.Collection) -> containsAll
    boolean addAll(java.util.Collection) -> addAll
    boolean addAll(int,java.util.Collection) -> addAll
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    void clear() -> clear
    java.lang.Object set(int,java.lang.Object) -> set
    void add(int,java.lang.Object) -> add
    java.lang.Object remove(int) -> remove
    int indexOf(java.lang.Object) -> indexOf
    int lastIndexOf(java.lang.Object) -> lastIndexOf
    java.util.ListIterator listIterator() -> listIterator
    java.util.ListIterator listIterator(int) -> listIterator
    java.util.List subList(int,int) -> subList
    java.lang.Object get(int) -> get
    java.lang.Integer getInteger(int) -> a
    java.lang.Long getLong(int) -> b
    java.lang.Object clone() -> clone
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.alibaba.fastjson.JSONAware -> com.a.a.c:
    java.lang.String toJSONString() -> a
com.alibaba.fastjson.JSONException -> com.a.a.d:
com.alibaba.fastjson.JSONObject -> com.a.a.e:
    java.util.Map map -> e
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    com.alibaba.fastjson.JSONArray getJSONArray(java.lang.String) -> c
    java.lang.Boolean getBoolean(java.lang.String) -> d
    java.lang.Integer getInteger(java.lang.String) -> e
    java.lang.String getString(java.lang.String) -> f
    java.lang.Object put(java.lang.String,java.lang.Object) -> a
    void putAll(java.util.Map) -> putAll
    void clear() -> clear
    java.lang.Object remove(java.lang.Object) -> remove
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
    java.util.Set entrySet() -> entrySet
    java.lang.Object clone() -> clone
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
com.alibaba.fastjson.JSONStreamAware -> com.a.a.f:
    void writeJSONString(java.lang.Appendable) -> a
com.alibaba.fastjson.annotation.JSONCreator -> com.a.a.a.a:
com.alibaba.fastjson.annotation.JSONField -> com.a.a.a.b:
    java.lang.String name() -> a
    java.lang.String format() -> b
    boolean serialize() -> c
    boolean deserialize() -> d
    com.alibaba.fastjson.serializer.SerializerFeature[] serialzeFeatures() -> e
com.alibaba.fastjson.annotation.JSONType -> com.a.a.a.c:
    java.lang.String[] orders() -> a
    java.lang.String[] ignores() -> b
    java.lang.Class mappingTo() -> c
com.alibaba.fastjson.parser.AbstractJSONParser -> com.a.a.b.a:
com.alibaba.fastjson.parser.CharTypes -> com.a.a.b.b:
    char[] digits -> a
    boolean[] firstIdentifierFlags -> b
    boolean[] identifierFlags -> c
    boolean[] specicalFlags_doubleQuotes -> d
    boolean[] specicalFlags_singleQuotes -> e
    char[] replaceChars -> f
    char[] ASCII_CHARS -> g
com.alibaba.fastjson.parser.DefaultJSONParser -> com.a.a.b.c:
    java.lang.Object input -> a
    com.alibaba.fastjson.parser.SymbolTable symbolTable -> b
    com.alibaba.fastjson.parser.ParserConfig config -> c
    java.util.Set primitiveClasses -> f
    java.lang.String dateFormatPattern -> g
    java.text.DateFormat dateFormat -> h
    com.alibaba.fastjson.parser.JSONLexer lexer -> d
    com.alibaba.fastjson.parser.ParseContext context -> e
    com.alibaba.fastjson.parser.ParseContext[] contextArray -> i
    int contextArrayIndex -> j
    java.util.List resolveTaskList -> k
    int resolveStatus -> l
    java.text.DateFormat getDateFormat() -> a
    com.alibaba.fastjson.parser.SymbolTable getSymbolTable() -> b
    java.lang.Object parseObject(java.util.Map,java.lang.Object) -> a
    com.alibaba.fastjson.parser.ParserConfig getConfig() -> c
    java.lang.Object parseObject(java.lang.Class) -> a
    java.lang.Object parseObject(java.lang.reflect.Type) -> a
    void parseArray(java.lang.reflect.Type,java.util.Collection) -> a
    void parseArray(java.lang.reflect.Type,java.util.Collection,java.lang.Object) -> a
    int getResolveStatus() -> d
    void setResolveStatus(int) -> a
    java.lang.Object getObject(java.lang.String) -> a
    void checkListResolve(java.util.Collection) -> a
    void checkMapResolve(java.util.Map,java.lang.String) -> a
    java.lang.Object parseObject(java.util.Map) -> a
    com.alibaba.fastjson.JSONObject parseObject() -> e
    void parseArray(java.util.Collection) -> b
    void parseArray(java.util.Collection,java.lang.Object) -> a
    com.alibaba.fastjson.parser.ParseContext getContext() -> f
    java.util.List getResolveTaskList() -> g
    void addResolveTask(com.alibaba.fastjson.parser.DefaultJSONParser$ResolveTask) -> a
    com.alibaba.fastjson.parser.DefaultJSONParser$ResolveTask getLastResolveTask() -> h
    void setContext(com.alibaba.fastjson.parser.ParseContext) -> a
    void popContext() -> i
    com.alibaba.fastjson.parser.ParseContext setContext(java.lang.Object,java.lang.Object) -> a
    com.alibaba.fastjson.parser.ParseContext setContext(com.alibaba.fastjson.parser.ParseContext,java.lang.Object,java.lang.Object) -> a
    void addContext(com.alibaba.fastjson.parser.ParseContext) -> b
    java.lang.Object parse() -> j
    java.lang.Object parse(java.lang.Object) -> a
    boolean isEnabled(com.alibaba.fastjson.parser.Feature) -> a
    com.alibaba.fastjson.parser.JSONLexer getLexer() -> k
    void accept(int) -> b
    void close() -> close
com.alibaba.fastjson.parser.DefaultJSONParser$ResolveTask -> com.a.a.b.d:
    com.alibaba.fastjson.parser.ParseContext context -> a
    java.lang.String referenceValue -> b
    com.alibaba.fastjson.parser.deserializer.FieldDeserializer fieldDeserializer -> c
    com.alibaba.fastjson.parser.ParseContext ownerContext -> d
    com.alibaba.fastjson.parser.ParseContext getContext() -> a
    java.lang.String getReferenceValue() -> b
    com.alibaba.fastjson.parser.deserializer.FieldDeserializer getFieldDeserializer() -> c
    void setFieldDeserializer(com.alibaba.fastjson.parser.deserializer.FieldDeserializer) -> a
    com.alibaba.fastjson.parser.ParseContext getOwnerContext() -> d
    void setOwnerContext(com.alibaba.fastjson.parser.ParseContext) -> a
com.alibaba.fastjson.parser.Feature -> com.a.a.b.e:
    com.alibaba.fastjson.parser.Feature AutoCloseSource -> a
    com.alibaba.fastjson.parser.Feature AllowComment -> b
    com.alibaba.fastjson.parser.Feature AllowUnQuotedFieldNames -> c
    com.alibaba.fastjson.parser.Feature AllowSingleQuotes -> d
    com.alibaba.fastjson.parser.Feature InternFieldNames -> e
    com.alibaba.fastjson.parser.Feature AllowISO8601DateFormat -> f
    com.alibaba.fastjson.parser.Feature AllowArbitraryCommas -> g
    com.alibaba.fastjson.parser.Feature UseBigDecimal -> h
    com.alibaba.fastjson.parser.Feature IgnoreNotMatch -> i
    com.alibaba.fastjson.parser.Feature SortFeidFastMatch -> j
    com.alibaba.fastjson.parser.Feature DisableASM -> k
    com.alibaba.fastjson.parser.Feature DisableCircularReferenceDetect -> l
    com.alibaba.fastjson.parser.Feature InitStringFieldAsEmpty -> m
    int mask -> n
    com.alibaba.fastjson.parser.Feature[] $VALUES -> o
    com.alibaba.fastjson.parser.Feature[] values() -> values
    com.alibaba.fastjson.parser.Feature valueOf(java.lang.String) -> valueOf
    int getMask() -> a
    boolean isEnabled(int,com.alibaba.fastjson.parser.Feature) -> a
    int config(int,com.alibaba.fastjson.parser.Feature,boolean) -> a
com.alibaba.fastjson.parser.JSONLexer -> com.a.a.b.f:
    int token -> a
    int pos -> b
    int features -> c
    char ch -> d
    int bp -> e
    int eofPos -> f
    char[] sbuf -> g
    int sp -> h
    int np -> i
    boolean hasSpecial -> j
    java.util.Calendar calendar -> k
    java.lang.ThreadLocal SBUF_REF_LOCAL -> p
    com.alibaba.fastjson.parser.Keywords keywods -> l
    char[] typeFieldName -> m
    boolean[] whitespaceFlags -> n
    int[] digits -> o
    void nextToken() -> a
    void nextToken(int) -> a
    void nextIdent() -> b
    void nextTokenWithColon() -> c
    int token() -> d
    java.lang.String tokenName() -> e
    int pos() -> f
    int getBufferPosition() -> g
    java.lang.Number integerValue() -> h
    void nextTokenWithColon(int) -> b
    float floatValue() -> i
    double doubleValue() -> j
    boolean isEnabled(com.alibaba.fastjson.parser.Feature) -> a
    java.lang.String numberString() -> k
    boolean isEOF() -> l
    char getCurrent() -> m
    char charAt(int) -> c
    char next() -> n
    java.lang.String scanSymbol(com.alibaba.fastjson.parser.SymbolTable) -> a
    void arrayCopy(int,char[],int,int) -> a
    java.lang.String scanSymbol(com.alibaba.fastjson.parser.SymbolTable,char) -> a
    void resetStringPosition() -> o
    java.lang.String scanSymbolUnQuoted(com.alibaba.fastjson.parser.SymbolTable) -> b
    void copyTo(int,int,char[]) -> a
    void scanString() -> p
    java.util.Calendar getCalendar() -> q
    int intValue() -> r
    byte[] bytesValue() -> s
    void close() -> close
    boolean isRef() -> t
    java.lang.String addSymbol(int,int,int,com.alibaba.fastjson.parser.SymbolTable) -> a
    void scanTrue() -> u
    void scanTreeSet() -> v
    void scanNullOrNew() -> w
    void scanFalse() -> x
    void scanIdent() -> y
    java.lang.String stringVal() -> z
    boolean isBlankInput() -> A
    void skipWhitespace() -> B
    void scanStringSingleQuote() -> C
    void scanSet() -> D
    void putChar(char) -> a
    void scanNumber() -> E
    long longValue() -> F
    java.lang.Number decimalValue(boolean) -> a
    java.math.BigDecimal decimalValue() -> G
    java.lang.Number numberValue() -> H
    boolean isWhitespace(char) -> b
com.alibaba.fastjson.parser.JSONScanner -> com.a.a.b.g:
    java.lang.String text -> s
    int ISO8601_LEN_0 -> p
    int ISO8601_LEN_1 -> q
    int ISO8601_LEN_2 -> r
    char charAt(int) -> c
    char next() -> n
    void copyTo(int,int,char[]) -> a
    java.lang.String addSymbol(int,int,int,com.alibaba.fastjson.parser.SymbolTable) -> a
    byte[] bytesValue() -> s
    void arrayCopy(int,char[],int,int) -> a
    java.lang.String stringVal() -> z
    java.lang.String subString(int,int) -> a
    java.lang.String numberString() -> k
    boolean scanISO8601DateIfMatch() -> I
    boolean scanISO8601DateIfMatch(boolean) -> b
    boolean checkTime(char,char,char,char,char,char) -> a
    void setCalendar(char,char,char,char,char,char,char,char) -> a
    boolean checkDate(char,char,char,char,char,char,int,int) -> a
    boolean isEOF() -> l
com.alibaba.fastjson.parser.JSONToken -> com.a.a.b.h:
    java.lang.String name(int) -> a
com.alibaba.fastjson.parser.Keywords -> com.a.a.b.i:
    java.util.Map keywords -> b
    com.alibaba.fastjson.parser.Keywords DEFAULT_KEYWORDS -> a
    java.lang.Integer getKeyword(java.lang.String) -> a
com.alibaba.fastjson.parser.ParseContext -> com.a.a.b.j:
    java.lang.Object object -> a
    com.alibaba.fastjson.parser.ParseContext parent -> b
    java.lang.Object fieldName -> c
    java.lang.reflect.Type type -> d
    java.lang.reflect.Type getType() -> a
    void setType(java.lang.reflect.Type) -> a
    java.lang.Object getObject() -> b
    void setObject(java.lang.Object) -> a
    com.alibaba.fastjson.parser.ParseContext getParentContext() -> c
    java.lang.String getPath() -> d
    java.lang.String toString() -> toString
com.alibaba.fastjson.parser.ParserConfig -> com.a.a.b.k:
    java.util.Set primitiveClasses -> b
    com.alibaba.fastjson.parser.ParserConfig global -> c
    com.alibaba.fastjson.util.IdentityHashMap derializers -> d
    com.alibaba.fastjson.parser.SymbolTable symbolTable -> a
    com.alibaba.fastjson.parser.ParserConfig getGlobalInstance() -> a
    com.alibaba.fastjson.parser.SymbolTable getSymbolTable() -> b
    com.alibaba.fastjson.parser.deserializer.ObjectDeserializer getDeserializer(java.lang.reflect.Type) -> a
    com.alibaba.fastjson.parser.deserializer.ObjectDeserializer getDeserializer(java.lang.Class,java.lang.reflect.Type) -> a
    com.alibaba.fastjson.parser.deserializer.ObjectDeserializer createJavaBeanDeserializer(java.lang.Class,java.lang.reflect.Type) -> b
    com.alibaba.fastjson.parser.deserializer.FieldDeserializer createFieldDeserializer(com.alibaba.fastjson.parser.ParserConfig,java.lang.Class,com.alibaba.fastjson.util.FieldInfo) -> a
    void putDeserializer(java.lang.reflect.Type,com.alibaba.fastjson.parser.deserializer.ObjectDeserializer) -> a
    com.alibaba.fastjson.parser.deserializer.ObjectDeserializer getDeserializer(com.alibaba.fastjson.util.FieldInfo) -> a
    boolean isPrimitive(java.lang.Class) -> a
    java.lang.reflect.Field getField(java.lang.Class,java.lang.String) -> a
    java.lang.reflect.Field getField0(java.lang.Class,java.lang.String) -> b
    java.util.Map getFieldDeserializers(java.lang.Class) -> b
com.alibaba.fastjson.parser.SymbolTable -> com.a.a.b.l:
    com.alibaba.fastjson.parser.SymbolTable$Entry[] buckets -> a
    java.lang.String[] symbols -> b
    char[][] symbols_char -> c
    int indexMask -> d
    int size -> e
    java.lang.String addSymbol(char[],int,int,int) -> a
    java.lang.String addSymbol(java.lang.String,int,int,int) -> a
com.alibaba.fastjson.parser.SymbolTable$Entry -> com.a.a.b.m:
    java.lang.String symbol -> a
    int hashCode -> b
    char[] characters -> c
    byte[] bytes -> d
    com.alibaba.fastjson.parser.SymbolTable$Entry next -> e
com.alibaba.fastjson.parser.deserializer.AbstractDateDeserializer -> com.a.a.b.a.a:
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> a
    java.lang.Object cast(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object,java.lang.Object) -> a
com.alibaba.fastjson.parser.deserializer.ArrayDeserializer -> com.a.a.b.a.b:
    com.alibaba.fastjson.parser.deserializer.ArrayDeserializer instance -> a
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> a
    java.lang.Object toObjectArray(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Class,com.alibaba.fastjson.JSONArray) -> a
    int getFastMatchToken() -> a
com.alibaba.fastjson.parser.deserializer.ArrayListTypeFieldDeserializer -> com.a.a.b.a.c:
    java.lang.reflect.Type itemType -> c
    int itemFastMatchToken -> d
    com.alibaba.fastjson.parser.deserializer.ObjectDeserializer deserializer -> e
    int getFastMatchToken() -> a
    void parseField(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Object,java.lang.reflect.Type,java.util.Map) -> a
    void parseArray(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.util.Collection) -> a
com.alibaba.fastjson.parser.deserializer.BigDecimalDeserializer -> com.a.a.b.a.d:
    com.alibaba.fastjson.parser.deserializer.BigDecimalDeserializer instance -> a
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> a
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser) -> a
    int getFastMatchToken() -> a
com.alibaba.fastjson.parser.deserializer.BigIntegerDeserializer -> com.a.a.b.a.e:
    com.alibaba.fastjson.parser.deserializer.BigIntegerDeserializer instance -> a
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> a
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser) -> a
    int getFastMatchToken() -> a
com.alibaba.fastjson.parser.deserializer.BooleanDeserializer -> com.a.a.b.a.f:
    com.alibaba.fastjson.parser.deserializer.BooleanDeserializer instance -> a
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> a
    int getFastMatchToken() -> a
com.alibaba.fastjson.parser.deserializer.BooleanFieldDeserializer -> com.a.a.b.a.g:
    void parseField(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Object,java.lang.reflect.Type,java.util.Map) -> a
    int getFastMatchToken() -> a
com.alibaba.fastjson.parser.deserializer.CalendarDeserializer -> com.a.a.b.a.h:
    com.alibaba.fastjson.parser.deserializer.CalendarDeserializer instance -> a
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> a
    int getFastMatchToken() -> a
com.alibaba.fastjson.parser.deserializer.CharArrayDeserializer -> com.a.a.b.a.i:
    com.alibaba.fastjson.parser.deserializer.CharArrayDeserializer instance -> a
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> a
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser) -> a
    int getFastMatchToken() -> a
com.alibaba.fastjson.parser.deserializer.CharacterDeserializer -> com.a.a.b.a.j:
    com.alibaba.fastjson.parser.deserializer.CharacterDeserializer instance -> a
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> a
    int getFastMatchToken() -> a
com.alibaba.fastjson.parser.deserializer.CharsetDeserializer -> com.a.a.b.a.k:
    com.alibaba.fastjson.parser.deserializer.CharsetDeserializer instance -> a
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> a
    int getFastMatchToken() -> a
com.alibaba.fastjson.parser.deserializer.ClassDerializer -> com.a.a.b.a.l:
    com.alibaba.fastjson.parser.deserializer.ClassDerializer instance -> a
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> a
    int getFastMatchToken() -> a
com.alibaba.fastjson.parser.deserializer.CollectionDeserializer -> com.a.a.b.a.m:
    com.alibaba.fastjson.parser.deserializer.CollectionDeserializer instance -> a
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> a
    java.lang.Class getRawClass(java.lang.reflect.Type) -> a
    int getFastMatchToken() -> a
com.alibaba.fastjson.parser.deserializer.CollectionResolveFieldDeserializer -> com.a.a.b.a.n:
    java.util.Collection collection -> c
    void setValue(java.lang.Object,java.lang.Object) -> a
    void parseField(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Object,java.lang.reflect.Type,java.util.Map) -> a
com.alibaba.fastjson.parser.deserializer.DateDeserializer -> com.a.a.b.a.o:
    com.alibaba.fastjson.parser.deserializer.DateDeserializer instance -> a
    java.lang.Object cast(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object,java.lang.Object) -> a
    int getFastMatchToken() -> a
com.alibaba.fastjson.parser.deserializer.DateFormatDeserializer -> com.a.a.b.a.p:
    com.alibaba.fastjson.parser.deserializer.DateFormatDeserializer instance -> a
    java.lang.Object cast(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object,java.lang.Object) -> a
    int getFastMatchToken() -> a
com.alibaba.fastjson.parser.deserializer.DefaultFieldDeserializer -> com.a.a.b.a.q:
    com.alibaba.fastjson.parser.deserializer.ObjectDeserializer fieldValueDeserilizer -> c
    void parseField(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Object,java.lang.reflect.Type,java.util.Map) -> a
    int getFastMatchToken() -> a
com.alibaba.fastjson.parser.deserializer.EnumDeserializer -> com.a.a.b.a.r:
    java.lang.Class enumClass -> a
    java.util.Map ordinalMap -> b
    java.util.Map nameMap -> c
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> a
    int getFastMatchToken() -> a
com.alibaba.fastjson.parser.deserializer.FieldDeserializer -> com.a.a.b.a.s:
    com.alibaba.fastjson.util.FieldInfo fieldInfo -> a
    java.lang.Class clazz -> b
    java.lang.reflect.Method getMethod() -> b
    java.lang.reflect.Field getField() -> c
    java.lang.Class getFieldClass() -> d
    java.lang.reflect.Type getFieldType() -> e
    void parseField(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Object,java.lang.reflect.Type,java.util.Map) -> a
    int getFastMatchToken() -> a
    void setValue(java.lang.Object,boolean) -> a
    void setValue(java.lang.Object,int) -> a
    void setValue(java.lang.Object,long) -> a
    void setValue(java.lang.Object,java.lang.String) -> a
    void setValue(java.lang.Object,java.lang.Object) -> a
com.alibaba.fastjson.parser.deserializer.FileDeserializer -> com.a.a.b.a.t:
    com.alibaba.fastjson.parser.deserializer.FileDeserializer instance -> a
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> a
    int getFastMatchToken() -> a
com.alibaba.fastjson.parser.deserializer.FloatDeserializer -> com.a.a.b.a.u:
    com.alibaba.fastjson.parser.deserializer.FloatDeserializer instance -> a
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> a
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser) -> a
    int getFastMatchToken() -> a
com.alibaba.fastjson.parser.deserializer.InetAddressDeserializer -> com.a.a.b.a.v:
    com.alibaba.fastjson.parser.deserializer.InetAddressDeserializer instance -> a
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> a
    int getFastMatchToken() -> a
com.alibaba.fastjson.parser.deserializer.InetSocketAddressDeserializer -> com.a.a.b.a.w:
    com.alibaba.fastjson.parser.deserializer.InetSocketAddressDeserializer instance -> a
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> a
    int getFastMatchToken() -> a
com.alibaba.fastjson.parser.deserializer.IntegerDeserializer -> com.a.a.b.a.x:
    com.alibaba.fastjson.parser.deserializer.IntegerDeserializer instance -> a
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> a
    int getFastMatchToken() -> a
com.alibaba.fastjson.parser.deserializer.IntegerFieldDeserializer -> com.a.a.b.a.y:
    void parseField(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Object,java.lang.reflect.Type,java.util.Map) -> a
    int getFastMatchToken() -> a
com.alibaba.fastjson.parser.deserializer.JSONArrayDeserializer -> com.a.a.b.a.z:
    com.alibaba.fastjson.parser.deserializer.JSONArrayDeserializer instance -> a
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> a
    int getFastMatchToken() -> a
com.alibaba.fastjson.parser.deserializer.JSONObjectDeserializer -> com.a.a.b.a.aa:
    com.alibaba.fastjson.parser.deserializer.JSONObjectDeserializer instance -> a
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> a
    int getFastMatchToken() -> a
com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer -> com.a.a.b.a.ab:
    java.util.Map feildDeserializerMap -> a
    java.util.List fieldDeserializers -> b
    java.lang.Class clazz -> c
    com.alibaba.fastjson.util.DeserializeBeanInfo beanInfo -> d
    java.util.Map getFieldDeserializerMap() -> b
    void addFieldDeserializer(com.alibaba.fastjson.parser.ParserConfig,java.lang.Class,com.alibaba.fastjson.util.FieldInfo) -> b
    com.alibaba.fastjson.parser.deserializer.FieldDeserializer createFieldDeserializer(com.alibaba.fastjson.parser.ParserConfig,java.lang.Class,com.alibaba.fastjson.util.FieldInfo) -> a
    java.lang.Object createInstance(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type) -> a
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> a
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object,java.lang.Object) -> a
    boolean parseField(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.String,java.lang.Object,java.lang.reflect.Type,java.util.Map) -> a
    int getFastMatchToken() -> a
com.alibaba.fastjson.parser.deserializer.JavaObjectDeserializer -> com.a.a.b.a.ac:
    com.alibaba.fastjson.parser.deserializer.JavaObjectDeserializer instance -> a
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> a
    int getFastMatchToken() -> a
com.alibaba.fastjson.parser.deserializer.ListResolveFieldDeserializer -> com.a.a.b.a.ad:
    int index -> c
    java.util.List list -> d
    com.alibaba.fastjson.parser.DefaultJSONParser parser -> e
    void setValue(java.lang.Object,java.lang.Object) -> a
    void parseField(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Object,java.lang.reflect.Type,java.util.Map) -> a
com.alibaba.fastjson.parser.deserializer.LocaleDeserializer -> com.a.a.b.a.ae:
    com.alibaba.fastjson.parser.deserializer.LocaleDeserializer instance -> a
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> a
    int getFastMatchToken() -> a
com.alibaba.fastjson.parser.deserializer.LongDeserializer -> com.a.a.b.a.af:
    com.alibaba.fastjson.parser.deserializer.LongDeserializer instance -> a
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> a
    int getFastMatchToken() -> a
com.alibaba.fastjson.parser.deserializer.LongFieldDeserializer -> com.a.a.b.a.ag:
    com.alibaba.fastjson.parser.deserializer.ObjectDeserializer fieldValueDeserilizer -> c
    void parseField(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Object,java.lang.reflect.Type,java.util.Map) -> a
    int getFastMatchToken() -> a
com.alibaba.fastjson.parser.deserializer.MapDeserializer -> com.a.a.b.a.ah:
    com.alibaba.fastjson.parser.deserializer.MapDeserializer instance -> a
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> a
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object,java.util.Map) -> a
    java.util.Map parseMap(com.alibaba.fastjson.parser.DefaultJSONParser,java.util.Map,java.lang.reflect.Type,java.lang.Object) -> a
    java.lang.Object parseMap(com.alibaba.fastjson.parser.DefaultJSONParser,java.util.Map,java.lang.reflect.Type,java.lang.reflect.Type,java.lang.Object) -> a
    java.util.Map createMap(java.lang.reflect.Type) -> a
    int getFastMatchToken() -> a
com.alibaba.fastjson.parser.deserializer.MapResolveFieldDeserializer -> com.a.a.b.a.ai:
    java.lang.String key -> c
    java.util.Map map -> d
    void setValue(java.lang.Object,java.lang.Object) -> a
    void parseField(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Object,java.lang.reflect.Type,java.util.Map) -> a
com.alibaba.fastjson.parser.deserializer.NumberDeserializer -> com.a.a.b.a.aj:
    com.alibaba.fastjson.parser.deserializer.NumberDeserializer instance -> a
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> a
    int getFastMatchToken() -> a
com.alibaba.fastjson.parser.deserializer.ObjectDeserializer -> com.a.a.b.a.ak:
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> a
    int getFastMatchToken() -> a
com.alibaba.fastjson.parser.deserializer.PatternDeserializer -> com.a.a.b.a.al:
    com.alibaba.fastjson.parser.deserializer.PatternDeserializer instance -> a
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> a
    int getFastMatchToken() -> a
com.alibaba.fastjson.parser.deserializer.ReferenceDeserializer -> com.a.a.b.a.am:
    com.alibaba.fastjson.parser.deserializer.ReferenceDeserializer instance -> a
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> a
    int getFastMatchToken() -> a
com.alibaba.fastjson.parser.deserializer.SqlDateDeserializer -> com.a.a.b.a.an:
    com.alibaba.fastjson.parser.deserializer.SqlDateDeserializer instance -> a
    java.lang.Object cast(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object,java.lang.Object) -> a
    int getFastMatchToken() -> a
com.alibaba.fastjson.parser.deserializer.StackTraceElementDeserializer -> com.a.a.b.a.ao:
    com.alibaba.fastjson.parser.deserializer.StackTraceElementDeserializer instance -> a
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> a
    int getFastMatchToken() -> a
com.alibaba.fastjson.parser.deserializer.StringDeserializer -> com.a.a.b.a.ap:
    com.alibaba.fastjson.parser.deserializer.StringDeserializer instance -> a
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> a
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser) -> a
    int getFastMatchToken() -> a
com.alibaba.fastjson.parser.deserializer.StringFieldDeserializer -> com.a.a.b.a.aq:
    com.alibaba.fastjson.parser.deserializer.ObjectDeserializer fieldValueDeserilizer -> c
    void parseField(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Object,java.lang.reflect.Type,java.util.Map) -> a
    int getFastMatchToken() -> a
com.alibaba.fastjson.parser.deserializer.ThrowableDeserializer -> com.a.a.b.a.ar:
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> a
    java.lang.Throwable createException(java.lang.String,java.lang.Throwable,java.lang.Class) -> a
    int getFastMatchToken() -> a
com.alibaba.fastjson.parser.deserializer.TimeDeserializer -> com.a.a.b.a.as:
    com.alibaba.fastjson.parser.deserializer.TimeDeserializer instance -> a
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> a
    int getFastMatchToken() -> a
com.alibaba.fastjson.parser.deserializer.TimeZoneDeserializer -> com.a.a.b.a.at:
    com.alibaba.fastjson.parser.deserializer.TimeZoneDeserializer instance -> a
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> a
    int getFastMatchToken() -> a
com.alibaba.fastjson.parser.deserializer.TimestampDeserializer -> com.a.a.b.a.au:
    com.alibaba.fastjson.parser.deserializer.TimestampDeserializer instance -> a
    java.lang.Object cast(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object,java.lang.Object) -> a
    int getFastMatchToken() -> a
com.alibaba.fastjson.parser.deserializer.URIDeserializer -> com.a.a.b.a.av:
    com.alibaba.fastjson.parser.deserializer.URIDeserializer instance -> a
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> a
    int getFastMatchToken() -> a
com.alibaba.fastjson.parser.deserializer.URLDeserializer -> com.a.a.b.a.aw:
    com.alibaba.fastjson.parser.deserializer.URLDeserializer instance -> a
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> a
    int getFastMatchToken() -> a
com.alibaba.fastjson.parser.deserializer.UUIDDeserializer -> com.a.a.b.a.ax:
    com.alibaba.fastjson.parser.deserializer.UUIDDeserializer instance -> a
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> a
    int getFastMatchToken() -> a
com.alibaba.fastjson.serializer.AppendableSerializer -> com.a.a.c.a:
    com.alibaba.fastjson.serializer.AppendableSerializer instance -> a
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> a
com.alibaba.fastjson.serializer.ArraySerializer -> com.a.a.c.b:
    java.lang.Class componentType -> a
    com.alibaba.fastjson.serializer.ObjectSerializer compObjectSerializer -> b
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> a
com.alibaba.fastjson.serializer.AtomicBooleanSerializer -> com.a.a.c.c:
    com.alibaba.fastjson.serializer.AtomicBooleanSerializer instance -> a
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> a
com.alibaba.fastjson.serializer.AtomicIntegerArraySerializer -> com.a.a.c.d:
    com.alibaba.fastjson.serializer.AtomicIntegerArraySerializer instance -> a
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> a
com.alibaba.fastjson.serializer.AtomicIntegerSerializer -> com.a.a.c.e:
    com.alibaba.fastjson.serializer.AtomicIntegerSerializer instance -> a
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> a
com.alibaba.fastjson.serializer.AtomicLongArraySerializer -> com.a.a.c.f:
    com.alibaba.fastjson.serializer.AtomicLongArraySerializer instance -> a
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> a
com.alibaba.fastjson.serializer.AtomicLongSerializer -> com.a.a.c.g:
    com.alibaba.fastjson.serializer.AtomicLongSerializer instance -> a
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> a
com.alibaba.fastjson.serializer.BigDecimalSerializer -> com.a.a.c.h:
    com.alibaba.fastjson.serializer.BigDecimalSerializer instance -> a
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> a
com.alibaba.fastjson.serializer.BigIntegerSerializer -> com.a.a.c.i:
    com.alibaba.fastjson.serializer.BigIntegerSerializer instance -> a
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> a
com.alibaba.fastjson.serializer.BooleanArraySerializer -> com.a.a.c.j:
    com.alibaba.fastjson.serializer.BooleanArraySerializer instance -> a
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> a
com.alibaba.fastjson.serializer.BooleanSerializer -> com.a.a.c.k:
    com.alibaba.fastjson.serializer.BooleanSerializer instance -> a
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> a
com.alibaba.fastjson.serializer.ByteArraySerializer -> com.a.a.c.l:
    com.alibaba.fastjson.serializer.ByteArraySerializer instance -> a
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> a
com.alibaba.fastjson.serializer.ByteSerializer -> com.a.a.c.m:
    com.alibaba.fastjson.serializer.ByteSerializer instance -> a
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> a
com.alibaba.fastjson.serializer.CalendarSerializer -> com.a.a.c.n:
    com.alibaba.fastjson.serializer.CalendarSerializer instance -> a
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> a
com.alibaba.fastjson.serializer.CharArraySerializer -> com.a.a.c.o:
    com.alibaba.fastjson.serializer.CharArraySerializer instance -> a
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> a
com.alibaba.fastjson.serializer.CharacterSerializer -> com.a.a.c.p:
    com.alibaba.fastjson.serializer.CharacterSerializer instance -> a
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> a
com.alibaba.fastjson.serializer.ClassSerializer -> com.a.a.c.q:
    com.alibaba.fastjson.serializer.ClassSerializer instance -> a
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> a
com.alibaba.fastjson.serializer.CollectionSerializer -> com.a.a.c.r:
    com.alibaba.fastjson.serializer.CollectionSerializer instance -> a
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> a
com.alibaba.fastjson.serializer.DateFormatSerializer -> com.a.a.c.s:
    com.alibaba.fastjson.serializer.DateFormatSerializer instance -> a
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> a
com.alibaba.fastjson.serializer.DateSerializer -> com.a.a.c.t:
    com.alibaba.fastjson.serializer.DateSerializer instance -> a
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> a
com.alibaba.fastjson.serializer.DoubleArraySerializer -> com.a.a.c.u:
    com.alibaba.fastjson.serializer.DoubleArraySerializer instance -> a
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> a
com.alibaba.fastjson.serializer.DoubleSerializer -> com.a.a.c.v:
    com.alibaba.fastjson.serializer.DoubleSerializer instance -> a
    java.text.DecimalFormat decimalFormat -> b
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> a
com.alibaba.fastjson.serializer.EnumSerializer -> com.a.a.c.w:
    com.alibaba.fastjson.serializer.EnumSerializer instance -> a
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> a
com.alibaba.fastjson.serializer.EnumerationSeriliazer -> com.a.a.c.x:
    com.alibaba.fastjson.serializer.EnumerationSeriliazer instance -> a
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> a
com.alibaba.fastjson.serializer.ExceptionSerializer -> com.a.a.c.y:
    boolean isWriteClassName(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.reflect.Type,java.lang.Object) -> a
com.alibaba.fastjson.serializer.FieldSerializer -> com.a.a.c.z:
    com.alibaba.fastjson.util.FieldInfo fieldInfo -> a
    java.lang.String double_quoted_fieldPrefix -> b
    java.lang.String single_quoted_fieldPrefix -> c
    java.lang.String un_quoted_fieldPrefix -> d
    boolean writeNull -> e
    boolean isWriteNull() -> a
    java.lang.reflect.Field getField() -> b
    java.lang.String getName() -> c
    void writePrefix(com.alibaba.fastjson.serializer.JSONSerializer) -> a
    java.lang.Object getPropertyValue(java.lang.Object) -> a
    void writeProperty(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object) -> a
com.alibaba.fastjson.serializer.FileSerializer -> com.a.a.c.aa:
    com.alibaba.fastjson.serializer.FileSerializer instance -> a
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> a
com.alibaba.fastjson.serializer.FilterUtils -> com.a.a.c.ab:
    java.lang.Object processValue(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.String,java.lang.Object) -> a
    java.lang.String processKey(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.String,java.lang.Object) -> b
    boolean applyName(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.String) -> a
    boolean apply(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.String,java.lang.Object) -> c
com.alibaba.fastjson.serializer.FloatArraySerializer -> com.a.a.c.ac:
    com.alibaba.fastjson.serializer.FloatArraySerializer instance -> a
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> a
com.alibaba.fastjson.serializer.FloatSerializer -> com.a.a.c.ad:
    com.alibaba.fastjson.serializer.FloatSerializer instance -> a
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> a
com.alibaba.fastjson.serializer.InetAddressSerializer -> com.a.a.c.ae:
    com.alibaba.fastjson.serializer.InetAddressSerializer instance -> a
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> a
com.alibaba.fastjson.serializer.InetSocketAddressSerializer -> com.a.a.c.af:
    com.alibaba.fastjson.serializer.InetSocketAddressSerializer instance -> a
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> a
com.alibaba.fastjson.serializer.IntArraySerializer -> com.a.a.c.ag:
    com.alibaba.fastjson.serializer.IntArraySerializer instance -> a
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> a
com.alibaba.fastjson.serializer.IntegerSerializer -> com.a.a.c.ah:
    com.alibaba.fastjson.serializer.IntegerSerializer instance -> a
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> a
com.alibaba.fastjson.serializer.JSONAwareSerializer -> com.a.a.c.ai:
    com.alibaba.fastjson.serializer.JSONAwareSerializer instance -> a
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> a
com.alibaba.fastjson.serializer.JSONSerializer -> com.a.a.c.aj:
    com.alibaba.fastjson.serializer.SerializeConfig config -> a
    com.alibaba.fastjson.serializer.SerializeWriter out -> b
    java.util.List propertyFilters -> c
    java.util.List valueFilters -> d
    java.util.List nameFilters -> e
    java.util.List propertyPreFilters -> f
    int indentCount -> g
    java.lang.String indent -> h
    java.lang.String dateFormatPattern -> i
    java.text.DateFormat dateFormat -> j
    java.util.IdentityHashMap references -> k
    com.alibaba.fastjson.serializer.SerialContext context -> l
    java.text.DateFormat getDateFormat() -> a
    com.alibaba.fastjson.serializer.SerialContext getContext() -> b
    void setContext(com.alibaba.fastjson.serializer.SerialContext) -> a
    void setContext(com.alibaba.fastjson.serializer.SerialContext,java.lang.Object,java.lang.Object) -> a
    boolean isWriteClassName(java.lang.reflect.Type,java.lang.Object) -> a
    com.alibaba.fastjson.serializer.SerialContext getSerialContext(java.lang.Object) -> a
    boolean containsReference(java.lang.Object) -> b
    void writeReference(java.lang.Object) -> c
    java.util.List getValueFilters() -> c
    java.util.List getValueFiltersDirect() -> d
    void incrementIndent() -> e
    void decrementIdent() -> f
    void println() -> g
    java.util.List getNameFilters() -> h
    java.util.List getNameFiltersDirect() -> i
    java.util.List getPropertyPreFilters() -> j
    java.util.List getPropertyPreFiltersDirect() -> k
    java.util.List getPropertyFilters() -> l
    java.util.List getPropertyFiltersDirect() -> m
    com.alibaba.fastjson.serializer.SerializeWriter getWriter() -> n
    java.lang.String toString() -> toString
    void config(com.alibaba.fastjson.serializer.SerializerFeature,boolean) -> a
    boolean isEnabled(com.alibaba.fastjson.serializer.SerializerFeature) -> a
    void writeNull() -> o
    void write(java.lang.Object) -> d
    void writeWithFormat(java.lang.Object,java.lang.String) -> a
    void write(java.lang.String) -> a
    com.alibaba.fastjson.serializer.ObjectSerializer getObjectWriter(java.lang.Class) -> a
com.alibaba.fastjson.serializer.JSONStreamAwareSerializer -> com.a.a.c.ak:
    com.alibaba.fastjson.serializer.JSONStreamAwareSerializer instance -> a
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> a
com.alibaba.fastjson.serializer.JavaBeanSerializer -> com.a.a.c.al:
    com.alibaba.fastjson.serializer.FieldSerializer[] getters -> a
    com.alibaba.fastjson.serializer.FieldSerializer[] sortedGetters -> b
    boolean isWriteClassName(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.reflect.Type,java.lang.Object) -> a
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> a
    void writeReference(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object) -> a
    com.alibaba.fastjson.serializer.FieldSerializer createFieldSerializer(com.alibaba.fastjson.util.FieldInfo) -> a
com.alibaba.fastjson.serializer.ListSerializer -> com.a.a.c.am:
    com.alibaba.fastjson.serializer.ListSerializer instance -> a
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> a
com.alibaba.fastjson.serializer.LongArraySerializer -> com.a.a.c.an:
    com.alibaba.fastjson.serializer.LongArraySerializer instance -> a
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> a
com.alibaba.fastjson.serializer.LongSerializer -> com.a.a.c.ao:
    com.alibaba.fastjson.serializer.LongSerializer instance -> a
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> a
com.alibaba.fastjson.serializer.MapSerializer -> com.a.a.c.ap:
    com.alibaba.fastjson.serializer.MapSerializer instance -> a
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> a
com.alibaba.fastjson.serializer.NameFilter -> com.a.a.c.aq:
    java.lang.String process(java.lang.Object,java.lang.String,java.lang.Object) -> a
com.alibaba.fastjson.serializer.NumberFieldSerializer -> com.a.a.c.ar:
    void writeProperty(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object) -> a
com.alibaba.fastjson.serializer.ObjectArraySerializer -> com.a.a.c.as:
    com.alibaba.fastjson.serializer.ObjectArraySerializer instance -> a
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> a
com.alibaba.fastjson.serializer.ObjectFieldSerializer -> com.a.a.c.at:
    com.alibaba.fastjson.serializer.ObjectSerializer fieldSerializer -> f
    java.lang.Class runtimeFieldClass -> g
    java.lang.String format -> h
    boolean writeNumberAsZero -> i
    boolean writeNullStringAsEmpty -> b
    boolean writeNullBooleanAsFalse -> c
    boolean writeNullListAsEmpty -> d
    boolean writeEnumUsingToString -> e
    void writeProperty(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object) -> a
com.alibaba.fastjson.serializer.ObjectSerializer -> com.a.a.c.au:
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> a
com.alibaba.fastjson.serializer.PatternSerializer -> com.a.a.c.av:
    com.alibaba.fastjson.serializer.PatternSerializer instance -> a
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> a
com.alibaba.fastjson.serializer.PropertyFilter -> com.a.a.c.aw:
    boolean apply(java.lang.Object,java.lang.String,java.lang.Object) -> a
com.alibaba.fastjson.serializer.PropertyPreFilter -> com.a.a.c.ax:
    boolean apply(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.String) -> a
com.alibaba.fastjson.serializer.ReferenceSerializer -> com.a.a.c.ay:
    com.alibaba.fastjson.serializer.ReferenceSerializer instance -> a
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> a
com.alibaba.fastjson.serializer.SerialContext -> com.a.a.c.az:
    com.alibaba.fastjson.serializer.SerialContext parent -> a
    java.lang.Object object -> b
    java.lang.Object fieldName -> c
    com.alibaba.fastjson.serializer.SerialContext getParent() -> a
    java.lang.Object getObject() -> b
    java.lang.String getPath() -> c
    java.lang.String toString() -> toString
com.alibaba.fastjson.serializer.SerializeConfig -> com.a.a.c.ba:
    com.alibaba.fastjson.serializer.SerializeConfig globalInstance -> a
    com.alibaba.fastjson.serializer.ObjectSerializer createJavaBeanSerializer(java.lang.Class) -> a
    com.alibaba.fastjson.serializer.SerializeConfig getGlobalInstance() -> a
com.alibaba.fastjson.serializer.SerializeFilter -> com.a.a.c.bb:
com.alibaba.fastjson.serializer.SerializeWriter -> com.a.a.c.bc:
    char[] buf -> a
    int count -> b
    java.lang.ThreadLocal bufLocal -> c
    int features -> d
    java.io.Writer writer -> e
    void config(com.alibaba.fastjson.serializer.SerializerFeature,boolean) -> a
    boolean isEnabled(com.alibaba.fastjson.serializer.SerializerFeature) -> a
    void write(int) -> write
    void write(char) -> a
    void write(char[],int,int) -> write
    void expandCapacity(int) -> a
    void write(java.lang.String,int,int) -> write
    com.alibaba.fastjson.serializer.SerializeWriter append(java.lang.CharSequence) -> a
    com.alibaba.fastjson.serializer.SerializeWriter append(java.lang.CharSequence,int,int) -> a
    com.alibaba.fastjson.serializer.SerializeWriter append(char) -> b
    java.lang.String toString() -> toString
    void close() -> close
    void write(java.lang.String) -> write
    void writeInt(int) -> b
    void writeByteArray(byte[]) -> a
    void writeIntAndChar(int,char) -> a
    void writeLongAndChar(long,char) -> a
    void writeLong(long) -> a
    void writeNull() -> a
    void writeStringWithDoubleQuote(java.lang.String,char) -> a
    void writeStringWithDoubleQuote(java.lang.String,char,boolean) -> a
    void write(boolean) -> a
    void writeString(java.lang.String) -> a
    void writeStringWithSingleQuote(java.lang.String) -> c
    void writeFieldName(java.lang.String) -> b
    void writeFieldName(java.lang.String,boolean) -> a
    void writeKeyWithDoubleQuoteIfHasSpecial(java.lang.String) -> d
    void writeKeyWithSingleQuoteIfHasSpecial(java.lang.String) -> e
    void flush() -> flush
    java.io.Writer append(char) -> append
    java.io.Writer append(java.lang.CharSequence,int,int) -> append
    java.io.Writer append(java.lang.CharSequence) -> append
    java.lang.Appendable append(char) -> append
    java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    java.lang.Appendable append(java.lang.CharSequence) -> append
com.alibaba.fastjson.serializer.SerializerFeature -> com.a.a.c.bd:
    com.alibaba.fastjson.serializer.SerializerFeature QuoteFieldNames -> a
    com.alibaba.fastjson.serializer.SerializerFeature UseSingleQuotes -> b
    com.alibaba.fastjson.serializer.SerializerFeature WriteMapNullValue -> c
    com.alibaba.fastjson.serializer.SerializerFeature WriteEnumUsingToString -> d
    com.alibaba.fastjson.serializer.SerializerFeature UseISO8601DateFormat -> e
    com.alibaba.fastjson.serializer.SerializerFeature WriteNullListAsEmpty -> f
    com.alibaba.fastjson.serializer.SerializerFeature WriteNullStringAsEmpty -> g
    com.alibaba.fastjson.serializer.SerializerFeature WriteNullNumberAsZero -> h
    com.alibaba.fastjson.serializer.SerializerFeature WriteNullBooleanAsFalse -> i
    com.alibaba.fastjson.serializer.SerializerFeature SkipTransientField -> j
    com.alibaba.fastjson.serializer.SerializerFeature SortField -> k
    com.alibaba.fastjson.serializer.SerializerFeature WriteTabAsSpecial -> l
    com.alibaba.fastjson.serializer.SerializerFeature PrettyFormat -> m
    com.alibaba.fastjson.serializer.SerializerFeature WriteClassName -> n
    com.alibaba.fastjson.serializer.SerializerFeature DisableCircularReferenceDetect -> o
    com.alibaba.fastjson.serializer.SerializerFeature WriteSlashAsSpecial -> p
    com.alibaba.fastjson.serializer.SerializerFeature BrowserCompatible -> q
    com.alibaba.fastjson.serializer.SerializerFeature WriteDateUseDateFormat -> r
    com.alibaba.fastjson.serializer.SerializerFeature NotWriteRootClassName -> s
    com.alibaba.fastjson.serializer.SerializerFeature DisableCheckSpecialChar -> t
    int mask -> u
    com.alibaba.fastjson.serializer.SerializerFeature[] $VALUES -> v
    com.alibaba.fastjson.serializer.SerializerFeature[] values() -> values
    com.alibaba.fastjson.serializer.SerializerFeature valueOf(java.lang.String) -> valueOf
    int getMask() -> a
    boolean isEnabled(int,com.alibaba.fastjson.serializer.SerializerFeature) -> a
com.alibaba.fastjson.serializer.ShortArraySerializer -> com.a.a.c.be:
    com.alibaba.fastjson.serializer.ShortArraySerializer instance -> a
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> a
com.alibaba.fastjson.serializer.ShortSerializer -> com.a.a.c.bf:
    com.alibaba.fastjson.serializer.ShortSerializer instance -> a
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> a
com.alibaba.fastjson.serializer.StringSerializer -> com.a.a.c.bg:
    com.alibaba.fastjson.serializer.StringSerializer instance -> a
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> a
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.String) -> a
com.alibaba.fastjson.serializer.TimeZoneSerializer -> com.a.a.c.bh:
    com.alibaba.fastjson.serializer.TimeZoneSerializer instance -> a
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> a
com.alibaba.fastjson.serializer.ToStringSerializer -> com.a.a.c.bi:
    com.alibaba.fastjson.serializer.ToStringSerializer instance -> a
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> a
com.alibaba.fastjson.serializer.ValueFilter -> com.a.a.c.bj:
    java.lang.Object process(java.lang.Object,java.lang.String,java.lang.Object) -> process
com.alibaba.fastjson.util.Base64 -> com.a.a.d.a:
    char[] CA -> a
    int[] IA -> b
    byte[] decodeFast(java.lang.String,int,int) -> a
com.alibaba.fastjson.util.DeserializeBeanInfo -> com.a.a.d.b:
    java.lang.Class clazz -> a
    java.lang.reflect.Constructor defaultConstructor -> b
    java.lang.reflect.Constructor creatorConstructor -> c
    java.lang.reflect.Method factoryMethod -> d
    java.util.List fieldList -> e
    java.lang.reflect.Constructor getDefaultConstructor() -> a
    void setDefaultConstructor(java.lang.reflect.Constructor) -> a
    java.lang.reflect.Constructor getCreatorConstructor() -> b
    void setCreatorConstructor(java.lang.reflect.Constructor) -> b
    java.lang.reflect.Method getFactoryMethod() -> c
    void setFactoryMethod(java.lang.reflect.Method) -> a
    java.util.List getFieldList() -> d
    com.alibaba.fastjson.util.FieldInfo getField(java.lang.String) -> a
    boolean add(com.alibaba.fastjson.util.FieldInfo) -> a
    com.alibaba.fastjson.util.DeserializeBeanInfo computeSetters(java.lang.Class,java.lang.reflect.Type) -> a
    java.lang.reflect.Field getField(java.lang.Class,java.lang.String) -> a
    java.lang.reflect.Constructor getDefaultConstructor(java.lang.Class) -> a
    java.lang.reflect.Constructor getCreatorConstructor(java.lang.Class) -> b
    java.lang.reflect.Method getFactoryMethod(java.lang.Class) -> c
com.alibaba.fastjson.util.FieldInfo -> com.a.a.d.c:
    java.lang.String name -> a
    java.lang.reflect.Method method -> b
    java.lang.reflect.Field field -> c
    java.lang.Class fieldClass -> d
    java.lang.reflect.Type fieldType -> e
    java.lang.Class declaringClass -> f
    boolean getOnly -> g
    java.lang.reflect.Type getFieldType(java.lang.Class,java.lang.reflect.Type,java.lang.reflect.Type) -> a
    java.lang.reflect.Type getInheritGenericType(java.lang.Class,java.lang.reflect.TypeVariable) -> a
    java.lang.String toString() -> toString
    java.lang.Class getFieldClass() -> a
    java.lang.reflect.Type getFieldType() -> b
    java.lang.String getName() -> c
    java.lang.reflect.Method getMethod() -> d
    java.lang.reflect.Field getField() -> e
    int compareTo(com.alibaba.fastjson.util.FieldInfo) -> a
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> a
    java.lang.Object get(java.lang.Object) -> a
    void set(java.lang.Object,java.lang.Object) -> a
    void setAccessible(boolean) -> a
    boolean isGetOnly() -> f
    int compareTo(java.lang.Object) -> compareTo
com.alibaba.fastjson.util.IOUtils -> com.a.a.d.d:
    char[] digits -> a
    char[] DigitTens -> b
    char[] DigitOnes -> c
    int[] sizeTable -> d
    int stringSize(long) -> a
    void getChars(long,int,char[]) -> a
    void getChars(int,int,char[]) -> a
    int stringSize(int) -> a
com.alibaba.fastjson.util.IdentityHashMap -> com.a.a.d.e:
    com.alibaba.fastjson.util.IdentityHashMap$Entry[] buckets -> a
    int indexMask -> b
    java.lang.Object get(java.lang.Object) -> a
    boolean put(java.lang.Object,java.lang.Object) -> a
com.alibaba.fastjson.util.IdentityHashMap$Entry -> com.a.a.d.f:
    int hashCode -> a
    java.lang.Object key -> b
    java.lang.Object value -> c
    com.alibaba.fastjson.util.IdentityHashMap$Entry next -> d
com.alibaba.fastjson.util.ParameterizedTypeImpl -> com.a.a.d.g:
    java.lang.reflect.Type[] actualTypeArguments -> a
    java.lang.reflect.Type ownerType -> b
    java.lang.reflect.Type rawType -> c
    java.lang.reflect.Type[] getActualTypeArguments() -> getActualTypeArguments
    java.lang.reflect.Type getOwnerType() -> getOwnerType
    java.lang.reflect.Type getRawType() -> getRawType
com.alibaba.fastjson.util.TypeUtils -> com.a.a.d.h:
    java.util.concurrent.ConcurrentMap mappings -> a
    java.util.Map methodsMap -> b
    java.lang.String castToString(java.lang.Object) -> a
    java.lang.Byte castToByte(java.lang.Object) -> b
    java.lang.Character castToChar(java.lang.Object) -> c
    java.lang.Short castToShort(java.lang.Object) -> d
    java.math.BigDecimal castToBigDecimal(java.lang.Object) -> e
    java.math.BigInteger castToBigInteger(java.lang.Object) -> f
    java.lang.Float castToFloat(java.lang.Object) -> g
    java.lang.Double castToDouble(java.lang.Object) -> h
    java.util.Date castToDate(java.lang.Object) -> i
    java.sql.Date castToSqlDate(java.lang.Object) -> j
    java.sql.Timestamp castToTimestamp(java.lang.Object) -> k
    java.lang.Long castToLong(java.lang.Object) -> l
    java.lang.Integer castToInt(java.lang.Object) -> m
    java.lang.Boolean castToBoolean(java.lang.Object) -> n
    java.lang.Object cast(java.lang.Object,java.lang.Class,com.alibaba.fastjson.parser.ParserConfig) -> a
    java.lang.Object castToEnum(java.lang.Object,java.lang.Class,com.alibaba.fastjson.parser.ParserConfig) -> b
    java.lang.Object cast(java.lang.Object,java.lang.reflect.Type,com.alibaba.fastjson.parser.ParserConfig) -> a
    java.lang.Object cast(java.lang.Object,java.lang.reflect.ParameterizedType,com.alibaba.fastjson.parser.ParserConfig) -> a
    java.lang.Object castToJavaBean(java.util.Map,java.lang.Class,com.alibaba.fastjson.parser.ParserConfig) -> a
    void addClassMapping(java.lang.String,java.lang.Class) -> a
    void addBaseClassMappings() -> a
    java.lang.Class loadClass(java.lang.String) -> a
    java.lang.reflect.Method[] getAllMethods(java.lang.Class) -> a
    java.util.List computeGetters(java.lang.Class,java.util.Map) -> a
    java.util.List computeGetters(java.lang.Class,java.util.Map,boolean) -> a
    com.alibaba.fastjson.annotation.JSONField getSupperMethodAnnotation(java.lang.Class,java.lang.reflect.Method) -> a
    boolean isJSONTypeIgnore(java.lang.Class,java.lang.String) -> a
    java.lang.Class getClass(java.lang.reflect.Type) -> a
com.avos.avoscloud.AVACL -> com.avos.avoscloud.AVACL:
    java.util.Map permissionsById -> permissionsById
    java.lang.String readTag -> readTag
    java.lang.String writeTag -> writeTag
    java.lang.String publicTag -> publicTag
    java.lang.String rolePrefix -> rolePrefix
    java.util.Map mapForKey(java.lang.String,boolean) -> mapForKey
    void allowRead(boolean,java.lang.String) -> allowRead
    boolean isReadAllowed(java.lang.String) -> isReadAllowed
    void allowWrite(boolean,java.lang.String) -> allowWrite
    boolean isWriteAllowed(java.lang.String) -> isWriteAllowed
    boolean getPublicReadAccess() -> getPublicReadAccess
    boolean getPublicWriteAccess() -> getPublicWriteAccess
    boolean getReadAccess(com.avos.avoscloud.AVUser) -> getReadAccess
    boolean getReadAccess(java.lang.String) -> getReadAccess
    java.lang.String roleName(java.lang.String) -> roleName
    boolean getRoleReadAccess(com.avos.avoscloud.AVRole) -> getRoleReadAccess
    boolean getRoleReadAccess(java.lang.String) -> getRoleReadAccess
    boolean getRoleWriteAccess(com.avos.avoscloud.AVRole) -> getRoleWriteAccess
    boolean getRoleWriteAccess(java.lang.String) -> getRoleWriteAccess
    boolean getWriteAccess(com.avos.avoscloud.AVUser) -> getWriteAccess
    boolean getWriteAccess(java.lang.String) -> getWriteAccess
    void setDefaultACL(com.avos.avoscloud.AVACL,boolean) -> setDefaultACL
    com.avos.avoscloud.AVACL parseACLWithPublicAccess(boolean,boolean) -> parseACLWithPublicAccess
    void setPublicReadAccess(boolean) -> setPublicReadAccess
    void setPublicWriteAccess(boolean) -> setPublicWriteAccess
    void setReadAccess(com.avos.avoscloud.AVUser,boolean) -> setReadAccess
    void setReadAccess(java.lang.String,boolean) -> setReadAccess
    void setRoleReadAccess(com.avos.avoscloud.AVRole,boolean) -> setRoleReadAccess
    void setRoleReadAccess(java.lang.String,boolean) -> setRoleReadAccess
    void setRoleWriteAccess(com.avos.avoscloud.AVRole,boolean) -> setRoleWriteAccess
    void setRoleWriteAccess(java.lang.String,boolean) -> setRoleWriteAccess
    void setWriteAccess(com.avos.avoscloud.AVUser,boolean) -> setWriteAccess
    void setWriteAccess(java.lang.String,boolean) -> setWriteAccess
    java.util.Map getPermissionsById() -> getPermissionsById
    java.util.Map getACLMap() -> getACLMap
    java.lang.String getRoleTagKey(java.lang.String) -> getRoleTagKey
com.avos.avoscloud.AVAnalytics -> com.avos.avoscloud.AVAnalytics:
    java.lang.String NEW_CHANNEL_ID -> NEW_CHANNEL_ID
    java.lang.String OLD_CHANNEL_ID -> OLD_CHANNEL_ID
    java.lang.String TAG -> TAG
    java.lang.String endPoint -> endPoint
    java.lang.String appOpen -> appOpen
    java.lang.String appOpenWithPush -> appOpenWithPush
    java.lang.String defaultChannel -> defaultChannel
    com.avos.avoscloud.AnalyticsImpl impl -> impl
    void trackAppOpened(android.content.Intent) -> trackAppOpened
    void setDefaultReportPolicy(android.content.Context,com.avos.avoscloud.ReportPolicy) -> setDefaultReportPolicy
    void trackPushOpened(android.content.Intent) -> trackPushOpened
    void setAppChannel(java.lang.String) -> setAppChannel
    java.lang.String getAppChannel() -> getAppChannel
    void SetCustomInfo(java.util.Map) -> SetCustomInfo
    void setCustomInfo(java.util.Map) -> setCustomInfo
    java.util.Map getCustomInfo() -> getCustomInfo
    java.util.Map statisticsDictionary(java.lang.String) -> statisticsDictionary
    void postAnalytics(java.util.Map) -> postAnalytics
    void start(android.content.Context) -> start
    void onFragmentStart(java.lang.String) -> onFragmentStart
    void onFragmentEnd(java.lang.String) -> onFragmentEnd
    void setAutoLocation(boolean) -> setAutoLocation
    void setSessionContinueMillis(long) -> setSessionContinueMillis
    void setDebugMode(boolean) -> setDebugMode
    void enableCrashReport(android.content.Context,boolean) -> enableCrashReport
    void onPause(android.content.Context) -> onPause
    void onResume(android.content.Context) -> onResume
    void onResume(android.content.Context,java.lang.String,java.lang.String) -> onResume
    void onError(android.content.Context) -> onError
    void onError(android.content.Context,java.lang.String) -> onError
    void reportError(android.content.Context,java.lang.String) -> reportError
    void reportError(android.content.Context,java.lang.Throwable) -> reportError
    void reportError(android.content.Context,java.util.Map,com.avos.avoscloud.SaveCallback) -> reportError
    void flush(android.content.Context) -> flush
    void debugDump(android.content.Context) -> debugDump
    void onEvent(android.content.Context,java.lang.String) -> onEvent
    void onEvent(android.content.Context,java.lang.String,int) -> onEvent
    void onEvent(android.content.Context,java.lang.String,java.lang.String) -> onEvent
    void onEvent(android.content.Context,java.lang.String,java.lang.String,int) -> onEvent
    void onEvent(android.content.Context,java.lang.String,java.util.Map) -> onEvent
    void onEventDuration(android.content.Context,java.lang.String,long) -> onEventDuration
    void onEventDuration(android.content.Context,java.lang.String,java.lang.String,long) -> onEventDuration
    void onEventDuration(android.content.Context,java.lang.String,java.util.Map,long) -> onEventDuration
    void onEventDuration(android.content.Context,java.lang.String,java.lang.String,java.util.Map,long) -> onEventDuration
    void onEventBegin(android.content.Context,java.lang.String) -> onEventBegin
    void onEventEnd(android.content.Context,java.lang.String) -> onEventEnd
    void onEventBegin(android.content.Context,java.lang.String,java.lang.String) -> onEventBegin
    void onEventEnd(android.content.Context,java.lang.String,java.lang.String) -> onEventEnd
    void onKVEventBegin(android.content.Context,java.lang.String,java.util.HashMap,java.lang.String) -> onKVEventBegin
    void onKVEventEnd(android.content.Context,java.lang.String,java.lang.String) -> onKVEventEnd
    java.lang.String getConfigParams(android.content.Context,java.lang.String) -> getConfigParams
    java.lang.String getConfigParams(android.content.Context,java.lang.String,java.lang.String) -> getConfigParams
    void updateOnlineConfig(android.content.Context) -> updateOnlineConfig
    void setGender(android.content.Context,java.lang.String) -> setGender
    void setAge(android.content.Context,int) -> setAge
    void setUserID(android.content.Context,java.lang.String,java.lang.String) -> setUserID
    void onKillProcess(android.content.Context) -> onKillProcess
    void setReportPolicy(android.content.Context,com.avos.avoscloud.ReportPolicy) -> setReportPolicy
    void setOnlineConfigureListener(com.avos.avoscloud.AVOnlineConfigureListener) -> setOnlineConfigureListener
    void setAnalyticsEnabled(boolean) -> setAnalyticsEnabled
    com.avos.avoscloud.AnalyticsImpl access$000() -> access$000
com.avos.avoscloud.AVAnalytics$1 -> com.avos.avoscloud.AVAnalytics$1:
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVAnalytics$2 -> com.avos.avoscloud.AVAnalytics$2:
    com.avos.avoscloud.SaveCallback val$callback -> val$callback
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVAnonymousUtils -> com.avos.avoscloud.AVAnonymousUtils:
    java.lang.String anonymousAuthData() -> anonymousAuthData
    boolean isLinked(com.avos.avoscloud.AVUser) -> isLinked
    void logIn(com.avos.avoscloud.LogInCallback) -> logIn
com.avos.avoscloud.AVAnonymousUtils$1 -> com.avos.avoscloud.AVAnonymousUtils$1:
    com.avos.avoscloud.LogInCallback val$internalCallback -> val$internalCallback
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVCacheManager -> com.avos.avoscloud.AVCacheManager:
    com.avos.avoscloud.AVCacheManager instance -> instance
    java.io.File keyValueCacheDir() -> keyValueCacheDir
    java.io.File getCacheFile(java.lang.String) -> getCacheFile
    com.avos.avoscloud.AVCacheManager sharedInstance() -> sharedInstance
    java.lang.String fileCacheKey(java.lang.String,java.lang.String) -> fileCacheKey
    boolean hasCache(java.lang.String) -> hasCache
    boolean hasCache(java.lang.String,java.lang.String) -> hasCache
    java.io.File getCacheFile(java.lang.String,java.lang.String) -> getCacheFile
    void get(java.lang.String,long,java.lang.String,com.avos.avoscloud.GenericObjectCallback) -> get
    void delete(java.lang.String) -> delete
    boolean save(java.lang.String,java.lang.String,java.lang.String) -> save
    void remove(java.lang.String,java.lang.String) -> remove
    boolean haveCache(java.lang.String) -> haveCache
    boolean clearAllCache() -> clearAllCache
    boolean clearCacheMoreThanOneDay() -> clearCacheMoreThanOneDay
    boolean clearCacheMoreThanDays(int) -> clearCacheMoreThanDays
    boolean clearFileCacheMoreThanDays(int) -> clearFileCacheMoreThanDays
com.avos.avoscloud.AVCallback -> com.avos.avoscloud.AVCallback:
    void internalDone(java.lang.Object,com.avos.avoscloud.AVException) -> internalDone
    boolean mustRunOnUIThread() -> mustRunOnUIThread
    void internalDone(com.avos.avoscloud.AVException) -> internalDone
    void internalDone0(java.lang.Object,com.avos.avoscloud.AVException) -> internalDone0
com.avos.avoscloud.AVCallback$1 -> com.avos.avoscloud.AVCallback$1:
    java.lang.Object val$t -> val$t
    com.avos.avoscloud.AVException val$parseException -> val$parseException
    com.avos.avoscloud.AVCallback this$0 -> this$0
    void run() -> run
com.avos.avoscloud.AVClassName -> com.avos.avoscloud.AVClassName:
    java.lang.String value() -> value
com.avos.avoscloud.AVCloud -> com.avos.avoscloud.AVCloud:
    void setProductionMode(boolean) -> setProductionMode
    java.lang.Object callFunction(java.lang.String,java.util.Map) -> callFunction
    void callFunctionInBackground(java.lang.String,java.util.Map,com.avos.avoscloud.FunctionCallback) -> callFunctionInBackground
    java.lang.Object convertCloudResponse(java.lang.String) -> convertCloudResponse
com.avos.avoscloud.AVCloud$1 -> com.avos.avoscloud.AVCloud$1:
    java.util.concurrent.atomic.AtomicReference val$reference -> val$reference
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVCloud$2 -> com.avos.avoscloud.AVCloud$2:
    com.avos.avoscloud.FunctionCallback val$callback -> val$callback
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVCloudQueryResult -> com.avos.avoscloud.AVCloudQueryResult:
    java.util.List results -> results
    int count -> count
    java.util.List getResults() -> getResults
    void setResults(java.util.List) -> setResults
    int getCount() -> getCount
    void setCount(int) -> setCount
com.avos.avoscloud.AVConstants -> com.avos.avoscloud.AVConstants:
    java.lang.String AV_PUSH_SERVICE_NOTIFICATION_MSG -> AV_PUSH_SERVICE_NOTIFICATION_MSG
    java.lang.String AV_PUSH_SERVICE_APPLICATION_ID -> AV_PUSH_SERVICE_APPLICATION_ID
    java.lang.String AV_PUSH_SERVICE_DEFAULT_CALLBACK -> AV_PUSH_SERVICE_DEFAULT_CALLBACK
    java.lang.String AV_PUSH_SERVICE_ACTION_MESSAGE -> AV_PUSH_SERVICE_ACTION_MESSAGE
    java.lang.String AV_PUSH_SERVICE_SETTINGS_KEY -> AV_PUSH_SERVICE_SETTINGS_KEY
    java.lang.String PUSH_INTENT_KEY -> PUSH_INTENT_KEY
    java.lang.String AVSEARCH_HIGHTLIGHT -> AVSEARCH_HIGHTLIGHT
    java.lang.String AVSEARCH_APP_URL -> AVSEARCH_APP_URL
    java.lang.String AVSEARCH_DEEP_LINK -> AVSEARCH_DEEP_LINK
com.avos.avoscloud.AVDuration -> com.avos.avoscloud.AVDuration:
    long createTimeStamp -> createTimeStamp
    long resumeTimeStamp -> resumeTimeStamp
    long duration -> duration
    boolean stopped -> stopped
    boolean internalDebug -> internalDebug
    long getCreateTimeStamp() -> getCreateTimeStamp
    long getDuration() -> getDuration
    void start() -> start
    void stop() -> stop
    boolean isStopped() -> isStopped
    void resume() -> resume
    void pause() -> pause
    void setDuration(long) -> setDuration
    void addDuration(long) -> addDuration
    void sync() -> sync
    long currentTS() -> currentTS
    long getResumeTimeStamp() -> getResumeTimeStamp
    void setResumeTimeStamp(long) -> setResumeTimeStamp
    void setCreateTimeStamp(long) -> setCreateTimeStamp
    void setStopped(boolean) -> setStopped
com.avos.avoscloud.AVErrorUtils -> com.avos.avoscloud.AVErrorUtils:
    int CIRCLE_REFERENCE -> CIRCLE_REFERENCE
    int MISSING_OBJECTID -> MISSING_OBJECTID
    com.avos.avoscloud.AVException createException(java.lang.String) -> createException
    com.avos.avoscloud.AVException createException(java.lang.Throwable,java.lang.String) -> createException
    int errorCode(java.lang.String) -> errorCode
    com.avos.avoscloud.AVException createException(int,java.lang.String) -> createException
    com.avos.avoscloud.AVException invalidObjectIdException() -> invalidObjectIdException
    com.avos.avoscloud.AVException invalidQueryException() -> invalidQueryException
    com.avos.avoscloud.AVException sessionMissingException() -> sessionMissingException
    com.avos.avoscloud.AVException fileDownloadInConsistentFailureException() -> fileDownloadInConsistentFailureException
    com.avos.avoscloud.AVException circleException() -> circleException
com.avos.avoscloud.AVException -> com.avos.avoscloud.AVException:
    long serialVersionUID -> serialVersionUID
    int code -> code
    int OTHER_CAUSE -> OTHER_CAUSE
    int INTERNAL_SERVER_ERROR -> INTERNAL_SERVER_ERROR
    int CONNECTION_FAILED -> CONNECTION_FAILED
    int OBJECT_NOT_FOUND -> OBJECT_NOT_FOUND
    int INVALID_QUERY -> INVALID_QUERY
    int INVALID_CLASS_NAME -> INVALID_CLASS_NAME
    int MISSING_OBJECT_ID -> MISSING_OBJECT_ID
    int INVALID_KEY_NAME -> INVALID_KEY_NAME
    int INVALID_POINTER -> INVALID_POINTER
    int INVALID_JSON -> INVALID_JSON
    int COMMAND_UNAVAILABLE -> COMMAND_UNAVAILABLE
    int NOT_INITIALIZED -> NOT_INITIALIZED
    int INCORRECT_TYPE -> INCORRECT_TYPE
    int INVALID_CHANNEL_NAME -> INVALID_CHANNEL_NAME
    int PUSH_MISCONFIGURED -> PUSH_MISCONFIGURED
    int OBJECT_TOO_LARGE -> OBJECT_TOO_LARGE
    int OPERATION_FORBIDDEN -> OPERATION_FORBIDDEN
    int CACHE_MISS -> CACHE_MISS
    int INVALID_NESTED_KEY -> INVALID_NESTED_KEY
    int INVALID_FILE_NAME -> INVALID_FILE_NAME
    int INVALID_ACL -> INVALID_ACL
    int TIMEOUT -> TIMEOUT
    int INVALID_EMAIL_ADDRESS -> INVALID_EMAIL_ADDRESS
    int INVALID_FILE_URL -> INVALID_FILE_URL
    int INVALID_PHONE_NUMBER -> INVALID_PHONE_NUMBER
    int DUPLICATE_VALUE -> DUPLICATE_VALUE
    int INVALID_ROLE_NAME -> INVALID_ROLE_NAME
    int EXCEEDED_QUOTA -> EXCEEDED_QUOTA
    int SCRIPT_ERROR -> SCRIPT_ERROR
    int VALIDATION_ERROR -> VALIDATION_ERROR
    int FILE_DELETE_ERROR -> FILE_DELETE_ERROR
    int USERNAME_MISSING -> USERNAME_MISSING
    int PASSWORD_MISSING -> PASSWORD_MISSING
    int USERNAME_TAKEN -> USERNAME_TAKEN
    int EMAIL_TAKEN -> EMAIL_TAKEN
    int EMAIL_MISSING -> EMAIL_MISSING
    int EMAIL_NOT_FOUND -> EMAIL_NOT_FOUND
    int SESSION_MISSING -> SESSION_MISSING
    int MUST_CREATE_USER_THROUGH_SIGNUP -> MUST_CREATE_USER_THROUGH_SIGNUP
    int ACCOUNT_ALREADY_LINKED -> ACCOUNT_ALREADY_LINKED
    int USER_ID_MISMATCH -> USER_ID_MISMATCH
    int USERNAME_PASSWORD_MISMATCH -> USERNAME_PASSWORD_MISMATCH
    int USER_DOESNOT_EXIST -> USER_DOESNOT_EXIST
    int USER_MOBILEPHONE_MISSING -> USER_MOBILEPHONE_MISSING
    int USER_WITH_MOBILEPHONE_NOT_FOUND -> USER_WITH_MOBILEPHONE_NOT_FOUND
    int USER_MOBILE_PHONENUMBER_TAKEN -> USER_MOBILE_PHONENUMBER_TAKEN
    int USER_MOBILEPHONE_NOT_VERIFIED -> USER_MOBILEPHONE_NOT_VERIFIED
    int LINKED_ID_MISSING -> LINKED_ID_MISSING
    int INVALID_LINKED_SESSION -> INVALID_LINKED_SESSION
    int UNSUPPORTED_SERVICE -> UNSUPPORTED_SERVICE
    int RATE_LIMITED -> RATE_LIMITED
    int UNKNOWN -> UNKNOWN
    java.lang.String cacheMissingErrorString -> cacheMissingErrorString
    int FILE_DOWNLOAD_INCONSISTENT_FAILURE -> FILE_DOWNLOAD_INCONSISTENT_FAILURE
    int getCode() -> getCode
com.avos.avoscloud.AVExceptionHolder -> com.avos.avoscloud.AVExceptionHolder:
    java.lang.ThreadLocal local -> local
    void add(com.avos.avoscloud.AVException) -> add
    boolean exists() -> exists
    com.avos.avoscloud.AVException remove() -> remove
com.avos.avoscloud.AVExceptionHolder$1 -> com.avos.avoscloud.AVExceptionHolder$1:
    com.avos.avoscloud.AVException initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.avos.avoscloud.AVFile -> com.avos.avoscloud.AVFile:
    boolean dirty -> dirty
    java.lang.String name -> name
    java.lang.String url -> url
    byte[] data -> data
    com.avos.avoscloud.AVUploader uploader -> uploader
    com.avos.avoscloud.AVFile$AVDownloader downloader -> downloader
    java.util.HashMap metaData -> metaData
    java.lang.String defaultMimeType -> defaultMimeType
    java.lang.String FILE_SUM_KEY -> FILE_SUM_KEY
    java.lang.String FILE_NAME_KEY -> FILE_NAME_KEY
    java.lang.String objectId -> objectId
    com.avos.avoscloud.AVObject fileObject -> fileObject
    java.lang.String bucket -> bucket
    java.lang.String ELDERMETADATAKEYFORIOSFIX -> ELDERMETADATAKEYFORIOSFIX
    com.avos.avoscloud.AVACL acl -> acl
    java.lang.String THUMBNAIL_FMT -> THUMBNAIL_FMT
    java.lang.String ETAG_FILE_EXTENSION -> ETAG_FILE_EXTENSION
    com.avos.avoscloud.AVObject getFileObject() -> getFileObject
    java.lang.String getObjectId() -> getObjectId
    void setObjectId(java.lang.String) -> setObjectId
    void parseFileWithObjectIdInBackground(java.lang.String,com.avos.avoscloud.GetFileCallback) -> parseFileWithObjectIdInBackground
    void withObjectIdInBackground(java.lang.String,com.avos.avoscloud.GetFileCallback) -> withObjectIdInBackground
    com.avos.avoscloud.AVFile parseFileWithObjectId(java.lang.String) -> parseFileWithObjectId
    com.avos.avoscloud.AVFile withObjectId(java.lang.String) -> withObjectId
    com.avos.avoscloud.AVFile parseFileWithAVObject(com.avos.avoscloud.AVObject) -> parseFileWithAVObject
    com.avos.avoscloud.AVFile withAVObject(com.avos.avoscloud.AVObject) -> withAVObject
    com.avos.avoscloud.AVFile createFileFromAVObject(com.avos.avoscloud.AVObject) -> createFileFromAVObject
    com.avos.avoscloud.AVFile parseFileWithAbsoluteLocalPath(java.lang.String,java.lang.String) -> parseFileWithAbsoluteLocalPath
    com.avos.avoscloud.AVFile withAbsoluteLocalPath(java.lang.String,java.lang.String) -> withAbsoluteLocalPath
    com.avos.avoscloud.AVFile parseFileWithFile(java.lang.String,java.io.File) -> parseFileWithFile
    com.avos.avoscloud.AVFile withFile(java.lang.String,java.io.File) -> withFile
    java.util.HashMap getMetaData() -> getMetaData
    java.lang.Object addMetaData(java.lang.String,java.lang.Object) -> addMetaData
    java.lang.Object getMetaData(java.lang.String) -> getMetaData
    int getSize() -> getSize
    java.lang.String getOwnerObjectId() -> getOwnerObjectId
    java.lang.Object removeMetaData(java.lang.String) -> removeMetaData
    void clearMetaData() -> clearMetaData
    java.lang.String getName() -> getName
    java.lang.String getOriginalName() -> getOriginalName
    void setName(java.lang.String) -> setName
    java.lang.String getMimeType(java.lang.String) -> getMimeType
    boolean isDirty() -> isDirty
    boolean isDataAvailable() -> isDataAvailable
    java.lang.String getUrl() -> getUrl
    java.lang.String getThumbnailUrl(boolean,int,int) -> getThumbnailUrl
    java.lang.String getThumbnailUrl(boolean,int,int,int,java.lang.String) -> getThumbnailUrl
    void setUrl(java.lang.String) -> setUrl
    void save() -> save
    void saveInBackground(com.avos.avoscloud.SaveCallback,com.avos.avoscloud.ProgressCallback) -> saveInBackground
    void saveInBackground(com.avos.avoscloud.SaveCallback) -> saveInBackground
    void saveInBackground() -> saveInBackground
    byte[] getData() -> getData
    void getDataInBackground(com.avos.avoscloud.GetDataCallback,com.avos.avoscloud.ProgressCallback) -> getDataInBackground
    void getDataInBackground(com.avos.avoscloud.GetDataCallback) -> getDataInBackground
    void cancel() -> cancel
    void cancelDownloadIfNeed() -> cancelDownloadIfNeed
    void cancelUploadIfNeed() -> cancelUploadIfNeed
    void handleUploadedResponse(java.lang.String,java.lang.String,java.lang.String) -> handleUploadedResponse
    void delete() -> delete
    void deleteEventually() -> deleteEventually
    void deleteEventually(com.avos.avoscloud.DeleteCallback) -> deleteEventually
    void deleteInBackground() -> deleteInBackground
    void deleteInBackground(com.avos.avoscloud.DeleteCallback) -> deleteInBackground
    java.lang.String mimeType() -> mimeType
    java.lang.String className() -> className
    java.io.File localPath() -> localPath
    com.avos.avoscloud.AVUploader getUploader(com.avos.avoscloud.SaveCallback,com.avos.avoscloud.ProgressCallback) -> getUploader
    java.lang.String getBucket() -> getBucket
    void setBucket(java.lang.String) -> setBucket
    void cacheFile(byte[],java.lang.String) -> cacheFile
    byte[] fetchCacheData() -> fetchCacheData
    java.lang.String fetchCacheTag() -> fetchCacheTag
    boolean removeCacheTag() -> removeCacheTag
    com.avos.avoscloud.AVACL getACL() -> getACL
    void setACL(com.avos.avoscloud.AVACL) -> setACL
    java.lang.String getFileSum() -> getFileSum
    com.avos.avoscloud.AVFile access$000(com.avos.avoscloud.AVObject) -> access$000
    java.lang.String access$100(com.avos.avoscloud.AVFile) -> access$100
    java.lang.String access$300(com.avos.avoscloud.AVFile) -> access$300
    byte[] access$400(com.avos.avoscloud.AVFile) -> access$400
    byte[] access$502(com.avos.avoscloud.AVFile,byte[]) -> access$502
    boolean access$700(com.avos.avoscloud.AVFile) -> access$700
    byte[] access$500(com.avos.avoscloud.AVFile) -> access$500
    void access$800(com.avos.avoscloud.AVFile,byte[],java.lang.String) -> access$800
    java.io.File access$1000(com.avos.avoscloud.AVFile) -> access$1000
com.avos.avoscloud.AVFile$1 -> com.avos.avoscloud.AVFile$1:
    com.avos.avoscloud.GetFileCallback val$cb -> val$cb
    java.lang.String val$objectId -> val$objectId
    void done(com.avos.avoscloud.AVObject,com.avos.avoscloud.AVException) -> done
com.avos.avoscloud.AVFile$2 -> com.avos.avoscloud.AVFile$2:
    int[] $SwitchMap$com$avos$avoscloud$AVOSCloud$StorageType -> $SwitchMap$com$avos$avoscloud$AVOSCloud$StorageType
com.avos.avoscloud.AVFile$AVDownloader -> com.avos.avoscloud.AVFile$AVDownloader:
    com.loopj.android.http.AsyncHttpClient client -> client
    com.avos.avoscloud.GetDataCallback dataCallback -> dataCallback
    com.avos.avoscloud.ProgressCallback progressCallback -> progressCallback
    com.avos.avoscloud.AVFile parseFile -> parseFile
    java.lang.String etag -> etag
    java.util.concurrent.atomic.AtomicInteger retries -> retries
    com.avos.avoscloud.AVException doWork(java.lang.String) -> doWork
    com.avos.avoscloud.AVException doInBackground(java.lang.String[]) -> doInBackground
    void onProgressUpdate(java.lang.Integer[]) -> onProgressUpdate
    void onPostExecute(com.avos.avoscloud.AVException) -> onPostExecute
    void onPreExecute() -> onPreExecute
    void onCancelled() -> onCancelled
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    com.avos.avoscloud.AVFile access$200(com.avos.avoscloud.AVFile$AVDownloader) -> access$200
    java.util.concurrent.atomic.AtomicInteger access$600(com.avos.avoscloud.AVFile$AVDownloader) -> access$600
    void access$900(com.avos.avoscloud.AVFile$AVDownloader,java.lang.Object[]) -> access$900
com.avos.avoscloud.AVFile$AVDownloader$1 -> com.avos.avoscloud.AVFile$AVDownloader$1:
    com.avos.avoscloud.AVException[] val$errors -> val$errors
    java.lang.String val$urlStr -> val$urlStr
    java.lang.String val$etag -> val$etag
    com.avos.avoscloud.AVFile$AVDownloader this$0 -> this$0
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onProgress(int,int) -> onProgress
com.avos.avoscloud.AVFollowResponse -> com.avos.avoscloud.AVFollowResponse:
    java.util.Map[] results -> results
    java.util.Map[] followers -> followers
    java.util.Map[] followees -> followees
com.avos.avoscloud.AVFriendshipQuery -> com.avos.avoscloud.AVFriendshipQuery:
    java.lang.String friendshipTag -> friendshipTag
    void setFriendshipTag(java.lang.String) -> setFriendshipTag
    java.lang.String getFriendshipTag() -> getFriendshipTag
    void processResultList(java.util.Map[],java.util.List,java.lang.String) -> processResultList
    java.util.List processResultByTag(java.lang.String,java.lang.String) -> processResultByTag
    java.util.List processResults(java.lang.String) -> processResults
com.avos.avoscloud.AVGeoPoint -> com.avos.avoscloud.AVGeoPoint:
    double EARTH_MEAN_RADIUS_KM -> EARTH_MEAN_RADIUS_KM
    double ONE_KM_TO_MILES -> ONE_KM_TO_MILES
    double latitude -> latitude
    double longitude -> longitude
    double distanceInKilometersTo(com.avos.avoscloud.AVGeoPoint) -> distanceInKilometersTo
    double distanceInMilesTo(com.avos.avoscloud.AVGeoPoint) -> distanceInMilesTo
    double distanceInRadiansTo(com.avos.avoscloud.AVGeoPoint) -> distanceInRadiansTo
    double getLatitude() -> getLatitude
    void setLatitude(double) -> setLatitude
    double getLongitude() -> getLongitude
    void setLongitude(double) -> setLongitude
com.avos.avoscloud.AVKeyValues -> com.avos.avoscloud.AVKeyValues:
    java.lang.Object value -> value
    java.lang.String key -> key
    com.avos.avoscloud.ops.AVOp op -> op
    boolean relationKey -> relationKey
    java.lang.String relationClassName -> relationClassName
    java.lang.String getRelationClassName() -> getRelationClassName
    void setRelationClassName(java.lang.String) -> setRelationClassName
    java.lang.Object getValue() -> getValue
    void setValue(java.lang.Object) -> setValue
    java.lang.String getKey() -> getKey
    void setKey(java.lang.String) -> setKey
    com.avos.avoscloud.ops.AVOp getOp() -> getOp
    void setOp(com.avos.avoscloud.ops.AVOp) -> setOp
    boolean isRelationKey() -> isRelationKey
    void setRelationKey(boolean) -> setRelationKey
    void resetOp() -> resetOp
    void setRelationKey(com.avos.avoscloud.ops.AVOp) -> setRelationKey
    void addOp(com.avos.avoscloud.ops.AVOp) -> addOp
    int opSize() -> opSize
    com.avos.avoscloud.ops.AVOp getOp(int) -> getOp
com.avos.avoscloud.AVMobilePhoneVerifyCallback -> com.avos.avoscloud.AVMobilePhoneVerifyCallback:
    void internalDone0(java.lang.Void,com.avos.avoscloud.AVException) -> internalDone0
    void done(com.avos.avoscloud.AVException) -> done
    void internalDone0(java.lang.Object,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone(com.avos.avoscloud.AVException) -> internalDone
com.avos.avoscloud.AVMultiPartEntity -> com.avos.avoscloud.AVMultiPartEntity:
    com.avos.avoscloud.AVMultiPartEntity$ProgressListener listener -> listener
    void writeTo(java.io.OutputStream) -> writeTo
com.avos.avoscloud.AVMultiPartEntity$CountingOutputStream -> com.avos.avoscloud.AVMultiPartEntity$CountingOutputStream:
    com.avos.avoscloud.AVMultiPartEntity$ProgressListener listener -> listener
    long transferred -> transferred
    void write(byte[],int,int) -> write
    void write(int) -> write
com.avos.avoscloud.AVMultiPartEntity$ProgressListener -> com.avos.avoscloud.AVMultiPartEntity$ProgressListener:
    void transferred(long) -> transferred
com.avos.avoscloud.AVOSCloud -> com.avos.avoscloud.AVOSCloud:
    android.content.Context applicationContext -> applicationContext
    java.lang.String applicationId -> applicationId
    java.lang.String clientKey -> clientKey
    android.os.Handler handler -> handler
    int LOG_LEVEL_VERBOSE -> LOG_LEVEL_VERBOSE
    int LOG_LEVEL_DEBUG -> LOG_LEVEL_DEBUG
    int LOG_LEVEL_INFO -> LOG_LEVEL_INFO
    int LOG_LEVEL_WARNING -> LOG_LEVEL_WARNING
    int LOG_LEVEL_ERROR -> LOG_LEVEL_ERROR
    int LOG_LEVEL_NONE -> LOG_LEVEL_NONE
    java.lang.String AV_CLOUD_CACHE_EXPIRE_AUTO_CLEAN_KEY -> AV_CLOUD_CACHE_EXPIRE_AUTO_CLEAN_KEY
    java.lang.String AV_CLOUD_CACHE_EXPIRE_DATE_KEY -> AV_CLOUD_CACHE_EXPIRE_DATE_KEY
    java.lang.Integer AV_CLOUD_CACHE_DEFAULT_EXPIRE_DATE -> AV_CLOUD_CACHE_DEFAULT_EXPIRE_DATE
    java.lang.String AV_CLOUD_CACHE_EXPIRE_KEY_ZONE -> AV_CLOUD_CACHE_EXPIRE_KEY_ZONE
    java.lang.String AV_CLOUD_API_VERSION_KEY_ZONE -> AV_CLOUD_API_VERSION_KEY_ZONE
    java.lang.String AV_CLOUD_API_VERSION_KEY -> AV_CLOUD_API_VERSION_KEY
    int logLevel -> logLevel
    boolean internalDebugLog -> internalDebugLog
    boolean userInternalDebugLog -> userInternalDebugLog
    int DEFAULT_NETWORK_TIMEOUT -> DEFAULT_NETWORK_TIMEOUT
    int DEFAULT_THREAD_POOL_SIZE -> DEFAULT_THREAD_POOL_SIZE
    int networkTimeoutInMills -> networkTimeoutInMills
    int threadPoolSize -> threadPoolSize
    com.avos.avoscloud.AVOSCloud$ServerHostList hostList -> hostList
    java.lang.String URL_HOST_LIST -> URL_HOST_LIST
    com.avos.avoscloud.AVOSCloud$StorageType storageType -> storageType
    void setNetworkTimeout(int) -> setNetworkTimeout
    int getNetworkTimeout() -> getNetworkTimeout
    int getThreadPoolSize() -> getThreadPoolSize
    void setThreadPoolSize(int) -> setThreadPoolSize
    void initialize(android.content.Context,java.lang.String,java.lang.String) -> initialize
    void useAVCloudUS() -> useAVCloudUS
    void useAVCloudCN() -> useAVCloudCN
    int getLogLevel() -> getLogLevel
    void setLogLevel(int) -> setLogLevel
    void showInternalDebugLog(boolean) -> showInternalDebugLog
    boolean showInternalDebugLog() -> showInternalDebugLog
    void setDebugLogEnabled(boolean) -> setDebugLogEnabled
    boolean isDebugLogEnabled() -> isDebugLogEnabled
    com.avos.avoscloud.AVOSCloud$StorageType getStorageType() -> getStorageType
    void setStorageType(com.avos.avoscloud.AVOSCloud$StorageType) -> setStorageType
    boolean isLastModifyEnabled() -> isLastModifyEnabled
    void setLastModifyEnabled(boolean) -> setLastModifyEnabled
    void clearLastModifyCache() -> clearLastModifyCache
    void enableAutoCacheCleaner() -> enableAutoCacheCleaner
    void disableAutoCacheCleaner() -> disableAutoCacheCleaner
    void setCacheFileAutoExpireDate(int) -> setCacheFileAutoExpireDate
    void setBaseUrl(java.lang.String) -> setBaseUrl
    void requestSMSCode(java.lang.String,java.lang.String,java.lang.String,int) -> requestSMSCode
    java.util.Map getSMSCodeEnv(java.lang.String,java.lang.String,int) -> getSMSCodeEnv
    void requestSMSCodeInBackgroud(java.lang.String,java.lang.String,java.lang.String,int,com.avos.avoscloud.RequestMobileCodeCallback) -> requestSMSCodeInBackgroud
    void requestSMSCode(java.lang.String,java.lang.String,java.util.Map) -> requestSMSCode
    void requestSMSCodeInBackgroud(java.lang.String,java.lang.String,java.util.Map,com.avos.avoscloud.RequestMobileCodeCallback) -> requestSMSCodeInBackgroud
    void requestSMSCodeInBackgroud(java.lang.String,java.lang.String,java.util.Map,boolean,com.avos.avoscloud.RequestMobileCodeCallback) -> requestSMSCodeInBackgroud
    void requestSMSCode(java.lang.String) -> requestSMSCode
    void requestSMSCodeInBackgroud(java.lang.String,com.avos.avoscloud.RequestMobileCodeCallback) -> requestSMSCodeInBackgroud
    void verifySMSCode(java.lang.String,java.lang.String) -> verifySMSCode
    void verifySMSCodeInBackground(java.lang.String,java.lang.String,com.avos.avoscloud.AVMobilePhoneVerifyCallback) -> verifySMSCodeInBackground
    void verifySMSCodeInBackgroud(java.lang.String,java.lang.String,boolean,com.avos.avoscloud.AVMobilePhoneVerifyCallback) -> verifySMSCodeInBackgroud
    void onUpgrade(java.lang.String,java.lang.String) -> onUpgrade
    boolean access$000() -> access$000
com.avos.avoscloud.AVOSCloud$1 -> com.avos.avoscloud.AVOSCloud$1:
    com.avos.avoscloud.AVException[] val$errors -> val$errors
    void done(com.avos.avoscloud.AVException) -> done
com.avos.avoscloud.AVOSCloud$2 -> com.avos.avoscloud.AVOSCloud$2:
    com.avos.avoscloud.AVException[] val$errors -> val$errors
    void done(com.avos.avoscloud.AVException) -> done
com.avos.avoscloud.AVOSCloud$3 -> com.avos.avoscloud.AVOSCloud$3:
    com.avos.avoscloud.RequestMobileCodeCallback val$internalCallback -> val$internalCallback
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVOSCloud$4 -> com.avos.avoscloud.AVOSCloud$4:
    com.avos.avoscloud.AVException[] val$errors -> val$errors
    void done(com.avos.avoscloud.AVException) -> done
com.avos.avoscloud.AVOSCloud$5 -> com.avos.avoscloud.AVOSCloud$5:
    com.avos.avoscloud.AVMobilePhoneVerifyCallback val$internalCallback -> val$internalCallback
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVOSCloud$6 -> com.avos.avoscloud.AVOSCloud$6:
    void done(com.avos.avoscloud.AVObject,com.avos.avoscloud.AVException) -> done
com.avos.avoscloud.AVOSCloud$ServerHostFetchTask -> com.avos.avoscloud.AVOSCloud$ServerHostFetchTask:
    java.lang.Void doInBackground(com.avos.avoscloud.AVOSCloud$ServerHostList[]) -> doInBackground
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.avos.avoscloud.AVOSCloud$ServerHostFetchTask$1 -> com.avos.avoscloud.AVOSCloud$ServerHostFetchTask$1:
    com.avos.avoscloud.AVOSCloud$ServerHostList val$hostList -> val$hostList
    com.avos.avoscloud.AVOSCloud$ServerHostFetchTask this$0 -> this$0
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVOSCloud$ServerHostList -> com.avos.avoscloud.AVOSCloud$ServerHostList:
    java.util.List hosts -> hosts
    java.util.List ips -> ips
    java.lang.String selectedHost -> selectedHost
    java.util.Random random -> random
    java.lang.String AVOS_SERVER_HOST_ZONE -> AVOS_SERVER_HOST_ZONE
    java.lang.String AVOS_SERVER_HOST_LIST_KEY -> AVOS_SERVER_HOST_LIST_KEY
    java.lang.String AVOS_SELECTED_SERVER_HOST -> AVOS_SELECTED_SERVER_HOST
    java.lang.String AVOS_SERVER_IP_LIST_KEY -> AVOS_SERVER_IP_LIST_KEY
    java.lang.String getSelectedHost() -> getSelectedHost
    void setSelectedHost(java.lang.String) -> setSelectedHost
    void setIPs(java.util.List) -> setIPs
    java.util.List getIPs() -> getIPs
    java.lang.String getRandomIP() -> getRandomIP
    void setHosts(java.util.List) -> setHosts
    java.util.List getHosts() -> getHosts
    void saveToLocal() -> saveToLocal
    com.avos.avoscloud.AVOSCloud$ServerHostList getLocalInstance() -> getLocalInstance
com.avos.avoscloud.AVOSCloud$StorageType -> com.avos.avoscloud.AVOSCloud$StorageType:
    com.avos.avoscloud.AVOSCloud$StorageType StorageTypeQiniu -> StorageTypeQiniu
    com.avos.avoscloud.AVOSCloud$StorageType StorageTypeAV -> StorageTypeAV
    com.avos.avoscloud.AVOSCloud$StorageType StorageTypeS3 -> StorageTypeS3
    com.avos.avoscloud.AVOSCloud$StorageType[] $VALUES -> $VALUES
    com.avos.avoscloud.AVOSCloud$StorageType[] values() -> values
    com.avos.avoscloud.AVOSCloud$StorageType valueOf(java.lang.String) -> valueOf
com.avos.avoscloud.AVOSSSLSocketFactory -> com.avos.avoscloud.AVOSSSLSocketFactory:
    javax.net.ssl.SSLContext sslContext -> sslContext
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    java.net.Socket createSocket() -> createSocket
com.avos.avoscloud.AVOSSSLSocketFactory$1 -> com.avos.avoscloud.AVOSSSLSocketFactory$1:
    com.avos.avoscloud.AVOSSSLSocketFactory this$0 -> this$0
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
com.avos.avoscloud.AVOSServices -> com.avos.avoscloud.AVOSServices:
    com.avos.avoscloud.AVOSServices STORAGE_SERVICE -> STORAGE_SERVICE
    com.avos.avoscloud.AVOSServices STATISTICS_SERVICE -> STATISTICS_SERVICE
    com.avos.avoscloud.AVOSServices FUNCTION_SERVICE -> FUNCTION_SERVICE
    java.lang.String service -> service
    com.avos.avoscloud.AVOSServices[] $VALUES -> $VALUES
    com.avos.avoscloud.AVOSServices[] values() -> values
    com.avos.avoscloud.AVOSServices valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
com.avos.avoscloud.AVObject -> com.avos.avoscloud.AVObject:
    java.lang.String LOGTAG -> LOGTAG
    java.lang.String className -> className
    java.lang.String objectId -> objectId
    java.lang.String updatedAt -> updatedAt
    java.lang.String createdAt -> createdAt
    java.lang.String uuid -> uuid
    boolean fetchWhenSave -> fetchWhenSave
    java.util.Map keyValues -> keyValues
    java.util.Set pendingKeys -> pendingKeys
    boolean isDataReady -> isDataReady
    com.avos.avoscloud.AVACL acl -> acl
    boolean running -> running
    com.avos.avoscloud.AVOperationQueue queue -> queue
    java.util.Map SUB_CLASSES_MAP -> SUB_CLASSES_MAP
    java.util.Map SUB_CLASSES_REVERSE_MAP -> SUB_CLASSES_REVERSE_MAP
    java.util.Set INVALID_KEYS -> INVALID_KEYS
    java.lang.ThreadLocal deserializing -> deserializing
    java.lang.String toString() -> toString
    org.json.JSONObject toJSONObject() -> toJSONObject
    java.util.Map getKeyValues() -> getKeyValues
    void setKeyValues(java.util.Map) -> setKeyValues
    java.util.Set getPendingKeys() -> getPendingKeys
    void setPendingKeys(java.util.Set) -> setPendingKeys
    boolean isDataReady() -> isDataReady
    void setDataReady(boolean) -> setDataReady
    void setUpdatedAt(java.lang.String) -> setUpdatedAt
    void setCreatedAt(java.lang.String) -> setCreatedAt
    void setUuid(java.lang.String) -> setUuid
    boolean isFetchWhenSave() -> isFetchWhenSave
    void setFetchWhenSave(boolean) -> setFetchWhenSave
    java.lang.String getUuid() -> getUuid
    java.lang.Class getSubClass(java.lang.String) -> getSubClass
    java.lang.String getSubClassName(java.lang.Class) -> getSubClassName
    void registerSubclass(java.lang.Class) -> registerSubclass
    void init() -> init
    void add(java.lang.String,java.lang.Object) -> add
    void addAll(java.lang.String,java.util.Collection) -> addAll
    com.avos.avoscloud.AVQuery getQuery(java.lang.Class) -> getQuery
    void addAllUnique(java.lang.String,java.util.Collection) -> addAllUnique
    void addUnique(java.lang.String,java.lang.Object) -> addUnique
    boolean containsKey(java.lang.String) -> containsKey
    com.avos.avoscloud.AVObject create(java.lang.String) -> create
    com.avos.avoscloud.AVObject createWithoutData(java.lang.String,java.lang.String) -> createWithoutData
    void setClassName(java.lang.String) -> setClassName
    com.avos.avoscloud.AVObject createWithoutData(java.lang.Class,java.lang.String) -> createWithoutData
    void delete() -> delete
    void deleteAll(java.util.Collection) -> deleteAll
    void deleteAllInBackground(java.util.Collection,com.avos.avoscloud.DeleteCallback) -> deleteAllInBackground
    void deleteAll(boolean,boolean,java.util.Collection,com.avos.avoscloud.DeleteCallback) -> deleteAll
    void deleteEventually() -> deleteEventually
    void deleteEventually(com.avos.avoscloud.DeleteCallback) -> deleteEventually
    void deleteInBackground() -> deleteInBackground
    void deleteInBackground(com.avos.avoscloud.DeleteCallback) -> deleteInBackground
    void delete(boolean,boolean,com.avos.avoscloud.DeleteCallback) -> delete
    com.avos.avoscloud.AVObject fetch() -> fetch
    com.avos.avoscloud.AVObject fetch(java.lang.String) -> fetch
    java.util.List fetchAll(java.util.List) -> fetchAll
    java.util.List fetchAllIfNeeded(java.util.List) -> fetchAllIfNeeded
    void fetchAllIfNeededInBackground(java.util.List,com.avos.avoscloud.FindCallback) -> fetchAllIfNeededInBackground
    void fetchAllInBackground(java.util.List,com.avos.avoscloud.FindCallback) -> fetchAllInBackground
    void fetchAllInBackground(boolean,java.util.List,com.avos.avoscloud.GenericObjectCallback) -> fetchAllInBackground
    com.avos.avoscloud.AVObject fetchIfNeeded() -> fetchIfNeeded
    com.avos.avoscloud.AVObject fetchIfNeeded(java.lang.String) -> fetchIfNeeded
    void fetchIfNeededInBackground(com.avos.avoscloud.GetCallback) -> fetchIfNeededInBackground
    void fetchIfNeededInBackground(java.lang.String,com.avos.avoscloud.GetCallback) -> fetchIfNeededInBackground
    void fetchInBackground(com.avos.avoscloud.GetCallback) -> fetchInBackground
    void fetchInBackground(java.lang.String,com.avos.avoscloud.GetCallback) -> fetchInBackground
    void fetchInBackground(boolean,java.lang.String,com.avos.avoscloud.GetCallback) -> fetchInBackground
    java.lang.Object get(java.lang.String) -> get
    com.avos.avoscloud.AVACL getACL() -> getACL
    boolean getBoolean(java.lang.String) -> getBoolean
    byte[] getBytes(java.lang.String) -> getBytes
    java.lang.String getClassName() -> getClassName
    java.util.Date getCreatedAt() -> getCreatedAt
    java.util.Date getDate(java.lang.String) -> getDate
    double getDouble(java.lang.String) -> getDouble
    int getInt(java.lang.String) -> getInt
    org.json.JSONArray getJSONArray(java.lang.String) -> getJSONArray
    org.json.JSONObject getJSONObject(java.lang.String) -> getJSONObject
    java.util.List getList(java.lang.String) -> getList
    java.util.List getList(java.lang.String,java.lang.Class) -> getList
    long getLong(java.lang.String) -> getLong
    java.util.Map getMap(java.lang.String) -> getMap
    java.lang.Number getNumber(java.lang.String) -> getNumber
    java.lang.String getObjectId() -> getObjectId
    com.avos.avoscloud.AVFile getAVFile(java.lang.String) -> getAVFile
    com.avos.avoscloud.AVGeoPoint getAVGeoPoint(java.lang.String) -> getAVGeoPoint
    com.avos.avoscloud.AVObject getAVObject(java.lang.String) -> getAVObject
    com.avos.avoscloud.AVObject getAVObject(java.lang.String,java.lang.Class) -> getAVObject
    com.avos.avoscloud.AVUser getAVUser(java.lang.String) -> getAVUser
    com.avos.avoscloud.AVUser getAVUser(java.lang.String,java.lang.Class) -> getAVUser
    com.avos.avoscloud.AVRelation getRelation(java.lang.String) -> getRelation
    java.lang.String getString(java.lang.String) -> getString
    java.util.Date getUpdatedAt() -> getUpdatedAt
    boolean has(java.lang.String) -> has
    boolean hasSameId(com.avos.avoscloud.AVObject) -> hasSameId
    void increment(java.lang.String) -> increment
    void increment(java.lang.String,java.lang.Number) -> increment
    boolean isDataAvailable() -> isDataAvailable
    java.util.Set keySet() -> keySet
    boolean checkKey(java.lang.String) -> checkKey
    void beginDeserialize() -> beginDeserialize
    void endDeserialize() -> endDeserialize
    void put(java.lang.String,java.lang.Object) -> put
    void put(java.lang.String,java.lang.Object,boolean) -> put
    void refresh() -> refresh
    void refresh(java.lang.String) -> refresh
    void refreshInBackground(com.avos.avoscloud.RefreshCallback) -> refreshInBackground
    void refreshInBackground(java.lang.String,com.avos.avoscloud.RefreshCallback) -> refreshInBackground
    void refreshInBackground(boolean,java.lang.String,com.avos.avoscloud.RefreshCallback) -> refreshInBackground
    void remove(java.lang.String) -> remove
    void removeAll(java.lang.String,java.util.Collection) -> removeAll
    void save() -> save
    void saveAll(java.util.List) -> saveAll
    void saveAllInBackground(java.util.List) -> saveAllInBackground
    void saveAllInBackground(java.util.List,com.avos.avoscloud.SaveCallback) -> saveAllInBackground
    void _saveAll(boolean,java.util.List,com.avos.avoscloud.SaveCallback) -> _saveAll
    void saveEventually() -> saveEventually
    void saveEventually(com.avos.avoscloud.SaveCallback) -> saveEventually
    void onSaveSuccess() -> onSaveSuccess
    void onDataSynchronized() -> onDataSynchronized
    void onSaveFailure() -> onSaveFailure
    java.util.Map headerMap() -> headerMap
    void saveObject(boolean,boolean,com.avos.avoscloud.SaveCallback) -> saveObject
    void _saveObject(java.util.List,boolean,boolean,com.avos.avoscloud.SaveCallback) -> _saveObject
    void saveObjectToAVOSCloud(boolean,boolean,com.avos.avoscloud.SaveCallback) -> saveObjectToAVOSCloud
    com.avos.avoscloud.AVException copyFromJsonArray(java.lang.String) -> copyFromJsonArray
    void copyFromJson(java.lang.String) -> copyFromJson
    void copyFromMap(java.util.Map) -> copyFromMap
    boolean alwaysUsePost() -> alwaysUsePost
    java.util.List batchRequestFromPendingKeys() -> batchRequestFromPendingKeys
    java.lang.String internalId() -> internalId
    boolean alwaysSaveAllKeyValues() -> alwaysSaveAllKeyValues
    java.util.Map batchRequestFromKeyValues() -> batchRequestFromKeyValues
    java.util.Map getBatchParams() -> getBatchParams
    java.util.List addBatchSaveRequest(java.util.LinkedList,boolean) -> addBatchSaveRequest
    void addPendingBatchRequest(java.util.LinkedList) -> addPendingBatchRequest
    boolean checkCircleReference() -> checkCircleReference
    boolean checkCircleReference(java.util.Map) -> checkCircleReference
    void saveInBackground() -> saveInBackground
    void saveInBackground(com.avos.avoscloud.SaveCallback) -> saveInBackground
    void saveInBackground(com.avos.avoscloud.SaveCallback,boolean) -> saveInBackground
    void setACL(com.avos.avoscloud.AVACL) -> setACL
    void setObjectId(java.lang.String) -> setObjectId
    java.util.List findArray(java.util.Map,java.lang.String,boolean) -> findArray
    java.lang.String internalClassName() -> internalClassName
    boolean shouldThrowException(java.lang.Throwable,java.lang.String) -> shouldThrowException
    void addRelationFromServer(java.lang.String,java.lang.String,boolean) -> addRelationFromServer
    void addRelation(com.avos.avoscloud.AVObject,java.lang.String,boolean) -> addRelation
    void removeRelation(com.avos.avoscloud.AVObject,java.lang.String,boolean) -> removeRelation
    void addObjectToArray(java.lang.String,java.lang.Object,boolean) -> addObjectToArray
    void removeObjectForKey(java.lang.String) -> removeObjectForKey
    void saveFileBeforeSave(java.util.List,boolean,java.util.List,com.avos.avoscloud.SaveCallback) -> saveFileBeforeSave
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    boolean access$002(com.avos.avoscloud.AVObject,boolean) -> access$002
    void access$300(com.avos.avoscloud.AVObject,java.util.LinkedList) -> access$300
    void access$400(com.avos.avoscloud.AVObject,boolean,boolean,com.avos.avoscloud.SaveCallback) -> access$400
    boolean access$502(com.avos.avoscloud.AVObject,boolean) -> access$502
    void access$600(com.avos.avoscloud.AVObject,boolean,boolean,com.avos.avoscloud.SaveCallback) -> access$600
com.avos.avoscloud.AVObject$1 -> com.avos.avoscloud.AVObject$1:
    com.avos.avoscloud.AVObject this$0 -> this$0
    void done(com.avos.avoscloud.AVException) -> done
    boolean mustRunOnUIThread() -> mustRunOnUIThread
com.avos.avoscloud.AVObject$10 -> com.avos.avoscloud.AVObject$10:
    java.lang.String val$key -> val$key
    java.lang.Number val$amount -> val$amount
    com.avos.avoscloud.AVObject this$0 -> this$0
    com.avos.avoscloud.ops.AVOp createOp() -> createOp
    void applyOp(com.avos.avoscloud.AVKeyValues) -> applyOp
    java.lang.Number initValue() -> initValue
    java.lang.Object initValue() -> initValue
com.avos.avoscloud.AVObject$11 -> com.avos.avoscloud.AVObject$11:
    java.lang.Boolean initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.avos.avoscloud.AVObject$12 -> com.avos.avoscloud.AVObject$12:
    java.lang.String val$key -> val$key
    java.lang.Object val$value -> val$value
    com.avos.avoscloud.AVObject this$0 -> this$0
    com.avos.avoscloud.ops.AVOp createOp() -> createOp
    void applyOp(com.avos.avoscloud.AVKeyValues) -> applyOp
    java.lang.Object initValue() -> initValue
com.avos.avoscloud.AVObject$13 -> com.avos.avoscloud.AVObject$13:
    com.avos.avoscloud.AVObject this$0 -> this$0
    void done(com.avos.avoscloud.AVObject,com.avos.avoscloud.AVException) -> done
    boolean mustRunOnUIThread() -> mustRunOnUIThread
com.avos.avoscloud.AVObject$14 -> com.avos.avoscloud.AVObject$14:
    java.lang.String val$key -> val$key
    java.util.Collection val$values -> val$values
    com.avos.avoscloud.AVObject this$0 -> this$0
    com.avos.avoscloud.ops.AVOp createOp() -> createOp
    void applyOp(com.avos.avoscloud.AVKeyValues) -> applyOp
    java.util.List initValue() -> initValue
    java.lang.Object initValue() -> initValue
com.avos.avoscloud.AVObject$15 -> com.avos.avoscloud.AVObject$15:
    com.avos.avoscloud.AVObject this$0 -> this$0
    void done(com.avos.avoscloud.AVException) -> done
    boolean mustRunOnUIThread() -> mustRunOnUIThread
com.avos.avoscloud.AVObject$16 -> com.avos.avoscloud.AVObject$16:
    void done(com.avos.avoscloud.AVException) -> done
    boolean mustRunOnUIThread() -> mustRunOnUIThread
com.avos.avoscloud.AVObject$17 -> com.avos.avoscloud.AVObject$17:
    java.util.List val$objects -> val$objects
    boolean val$sync -> val$sync
    com.avos.avoscloud.SaveCallback val$callback -> val$callback
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVObject$17$1 -> com.avos.avoscloud.AVObject$17$1:
    com.avos.avoscloud.AVObject$17 this$0 -> this$0
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVObject$18 -> com.avos.avoscloud.AVObject$18:
    java.util.LinkedList val$list -> val$list
    boolean val$sync -> val$sync
    com.avos.avoscloud.GenericObjectCallback val$genericObjectCallback -> val$genericObjectCallback
    void done(com.avos.avoscloud.AVException) -> done
com.avos.avoscloud.AVObject$19 -> com.avos.avoscloud.AVObject$19:
    boolean val$sync -> val$sync
    boolean val$isEventually -> val$isEventually
    com.avos.avoscloud.SaveCallback val$callback -> val$callback
    com.avos.avoscloud.AVObject this$0 -> this$0
    void done(com.avos.avoscloud.AVException) -> done
com.avos.avoscloud.AVObject$2 -> com.avos.avoscloud.AVObject$2:
    void done(com.avos.avoscloud.AVException) -> done
    boolean mustRunOnUIThread() -> mustRunOnUIThread
com.avos.avoscloud.AVObject$20 -> com.avos.avoscloud.AVObject$20:
    com.avos.avoscloud.SaveCallback val$callback -> val$callback
    boolean val$sync -> val$sync
    boolean val$isEventually -> val$isEventually
    com.avos.avoscloud.AVObject this$0 -> this$0
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVObject$21 -> com.avos.avoscloud.AVObject$21:
    java.lang.String val$key -> val$key
    java.lang.String val$className -> val$className
    com.avos.avoscloud.AVObject this$0 -> this$0
    com.avos.avoscloud.ops.AVOp createOp() -> createOp
    void applyOp(com.avos.avoscloud.AVKeyValues) -> applyOp
    java.util.Set initValue() -> initValue
    java.lang.Object initValue() -> initValue
com.avos.avoscloud.AVObject$22 -> com.avos.avoscloud.AVObject$22:
    java.lang.String val$key -> val$key
    com.avos.avoscloud.AVObject val$object -> val$object
    com.avos.avoscloud.AVObject this$0 -> this$0
    com.avos.avoscloud.ops.AVOp createOp() -> createOp
    void applyOp(com.avos.avoscloud.AVKeyValues) -> applyOp
    java.util.Set initValue() -> initValue
    java.lang.Object initValue() -> initValue
com.avos.avoscloud.AVObject$23 -> com.avos.avoscloud.AVObject$23:
    java.lang.String val$key -> val$key
    com.avos.avoscloud.AVObject val$object -> val$object
    com.avos.avoscloud.AVObject this$0 -> this$0
    com.avos.avoscloud.ops.AVOp createOp() -> createOp
    void applyOp(com.avos.avoscloud.AVKeyValues) -> applyOp
    java.util.Set initValue() -> initValue
    java.lang.Object initValue() -> initValue
com.avos.avoscloud.AVObject$24 -> com.avos.avoscloud.AVObject$24:
    java.lang.Object val$value -> val$value
    boolean val$unique -> val$unique
    java.lang.String val$key -> val$key
    com.avos.avoscloud.AVObject this$0 -> this$0
    com.avos.avoscloud.ops.AVOp createOp() -> createOp
    void applyOp(com.avos.avoscloud.AVKeyValues) -> applyOp
    java.util.Collection initValue() -> initValue
    java.lang.Object initValue() -> initValue
com.avos.avoscloud.AVObject$25 -> com.avos.avoscloud.AVObject$25:
    java.lang.String val$key -> val$key
    com.avos.avoscloud.AVObject this$0 -> this$0
    com.avos.avoscloud.ops.AVOp createOp() -> createOp
    void applyOp(com.avos.avoscloud.AVKeyValues) -> applyOp
    java.lang.Void initValue() -> initValue
    java.lang.Object initValue() -> initValue
com.avos.avoscloud.AVObject$26 -> com.avos.avoscloud.AVObject$26:
    java.util.concurrent.atomic.AtomicBoolean val$failureLock -> val$failureLock
    com.avos.avoscloud.SaveCallback val$callback -> val$callback
    java.util.concurrent.atomic.AtomicInteger val$lock -> val$lock
    void done(com.avos.avoscloud.AVException) -> done
com.avos.avoscloud.AVObject$3 -> com.avos.avoscloud.AVObject$3:
    com.avos.avoscloud.DeleteCallback val$internalCallback -> val$internalCallback
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVObject$4 -> com.avos.avoscloud.AVObject$4:
    com.avos.avoscloud.DeleteCallback val$internalCallback -> val$internalCallback
    com.avos.avoscloud.AVObject this$0 -> this$0
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVObject$5 -> com.avos.avoscloud.AVObject$5:
    com.avos.avoscloud.AVObject this$0 -> this$0
    void done(com.avos.avoscloud.AVObject,com.avos.avoscloud.AVException) -> done
    boolean mustRunOnUIThread() -> mustRunOnUIThread
com.avos.avoscloud.AVObject$6 -> com.avos.avoscloud.AVObject$6:
    java.util.List val$result -> val$result
    com.avos.avoscloud.FindCallback val$internalCallback -> val$internalCallback
    void onGroupRequestFinished(int,int,com.avos.avoscloud.AVObject) -> onGroupRequestFinished
com.avos.avoscloud.AVObject$7 -> com.avos.avoscloud.AVObject$7:
    java.util.List val$result -> val$result
    com.avos.avoscloud.FindCallback val$internalCallback -> val$internalCallback
    void onGroupRequestFinished(int,int,com.avos.avoscloud.AVObject) -> onGroupRequestFinished
com.avos.avoscloud.AVObject$8 -> com.avos.avoscloud.AVObject$8:
    com.avos.avoscloud.GenericObjectCallback val$internalCallback -> val$internalCallback
    java.util.concurrent.atomic.AtomicInteger val$counter -> val$counter
    int val$total -> val$total
    void done(com.avos.avoscloud.AVObject,com.avos.avoscloud.AVException) -> done
com.avos.avoscloud.AVObject$9 -> com.avos.avoscloud.AVObject$9:
    com.avos.avoscloud.AVObject this$0 -> this$0
    void done(com.avos.avoscloud.AVObject,com.avos.avoscloud.AVException) -> done
    boolean mustRunOnUIThread() -> mustRunOnUIThread
com.avos.avoscloud.AVObject$FetchObjectCallback -> com.avos.avoscloud.AVObject$FetchObjectCallback:
    com.avos.avoscloud.AVCallback internalCallback -> internalCallback
    com.avos.avoscloud.AVObject this$0 -> this$0
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVObject$KeyValueCallback -> com.avos.avoscloud.AVObject$KeyValueCallback:
    com.avos.avoscloud.AVObject this$0 -> this$0
    void execute(java.lang.String) -> execute
    void execute(java.lang.String,boolean) -> execute
    com.avos.avoscloud.ops.AVOp createOp() -> createOp
    void applyOp(com.avos.avoscloud.AVKeyValues) -> applyOp
    java.lang.Object initValue() -> initValue
com.avos.avoscloud.AVObjectReferenceCount -> com.avos.avoscloud.AVObjectReferenceCount:
    com.avos.avoscloud.AVObject value -> value
    java.util.concurrent.atomic.AtomicInteger count -> count
    int increment() -> increment
    int desc() -> desc
    int getCount() -> getCount
    com.avos.avoscloud.AVObject getValue() -> getValue
com.avos.avoscloud.AVOnlineConfigureListener -> com.avos.avoscloud.AVOnlineConfigureListener:
    void onDataReceived(org.json.JSONObject) -> onDataReceived
com.avos.avoscloud.AVOperation -> com.avos.avoscloud.AVOperation:
    com.avos.avoscloud.AVOperationType type -> type
    java.util.List batchRequest -> batchRequest
    com.avos.avoscloud.SaveCallback callback -> callback
    int sequence -> sequence
    boolean last -> last
    void setLast(boolean) -> setLast
    boolean getLast() -> getLast
    java.util.List getBatchRequest() -> getBatchRequest
    boolean isSnapshotRequest() -> isSnapshotRequest
    boolean isPendingRequest() -> isPendingRequest
    void setCallback(com.avos.avoscloud.SaveCallback) -> setCallback
    com.avos.avoscloud.SaveCallback getCallback() -> getCallback
    void setSequence(int) -> setSequence
    int getSequence() -> getSequence
    void invokeCallback(com.avos.avoscloud.AVException) -> invokeCallback
    com.avos.avoscloud.AVOperation snapshotOperation(java.util.List,com.avos.avoscloud.SaveCallback) -> snapshotOperation
    com.avos.avoscloud.AVOperation cloneOperation(java.util.List,com.avos.avoscloud.SaveCallback,com.avos.avoscloud.AVOperationType) -> cloneOperation
    com.avos.avoscloud.AVOperation pendingOperation(java.util.List,com.avos.avoscloud.SaveCallback) -> pendingOperation
com.avos.avoscloud.AVOperationQueue -> com.avos.avoscloud.AVOperationQueue:
    java.util.concurrent.ConcurrentLinkedQueue queue -> queue
    int currentSequence -> currentSequence
    void increaseSequence() -> increaseSequence
    com.avos.avoscloud.AVOperation addSnapshotOperation(java.util.List,com.avos.avoscloud.SaveCallback) -> addSnapshotOperation
    com.avos.avoscloud.AVOperation addPendingOperation(java.util.List,com.avos.avoscloud.SaveCallback) -> addPendingOperation
    com.avos.avoscloud.AVOperation popHead() -> popHead
    boolean noPendingRequest() -> noPendingRequest
    void clearOperationWithSequence(int) -> clearOperationWithSequence
com.avos.avoscloud.AVOperationType -> com.avos.avoscloud.AVOperationType:
    com.avos.avoscloud.AVOperationType kAVOperationSnapshot -> kAVOperationSnapshot
    com.avos.avoscloud.AVOperationType kAVOperationPendingOperation -> kAVOperationPendingOperation
    com.avos.avoscloud.AVOperationType[] $VALUES -> $VALUES
    com.avos.avoscloud.AVOperationType[] values() -> values
    com.avos.avoscloud.AVOperationType valueOf(java.lang.String) -> valueOf
com.avos.avoscloud.AVPersistenceUtils -> com.avos.avoscloud.AVPersistenceUtils:
    com.avos.avoscloud.AVPersistenceUtils instance -> instance
    java.util.concurrent.ConcurrentHashMap fileLocks -> fileLocks
    java.util.concurrent.locks.ReentrantReadWriteLock getLock(java.lang.String) -> getLock
    void removeLock(java.lang.String) -> removeLock
    com.avos.avoscloud.AVPersistenceUtils sharedInstance() -> sharedInstance
    java.io.File getPaasDocumentDir() -> getPaasDocumentDir
    java.io.File getCacheDir() -> getCacheDir
    java.io.File getCommandCacheDir() -> getCommandCacheDir
    void closeQuietly(java.io.Closeable) -> closeQuietly
    java.io.File getFile(java.lang.String,java.lang.String) -> getFile
    void saveToDocumentDir(java.lang.String,java.lang.String) -> saveToDocumentDir
    void saveToDocumentDir(java.lang.String,java.lang.String,java.lang.String) -> saveToDocumentDir
    boolean saveContentToFile(java.lang.String,java.io.File) -> saveContentToFile
    java.lang.String getFromDocumentDir(java.lang.String,java.lang.String) -> getFromDocumentDir
    java.lang.String getFromDocumentDir(java.lang.String) -> getFromDocumentDir
    java.lang.String readContentFromFile(java.io.File) -> readContentFromFile
    void savePersistentSettingBoolean(java.lang.String,java.lang.String,java.lang.Boolean) -> savePersistentSettingBoolean
    boolean getPersistentSettingBoolean(java.lang.String,java.lang.String) -> getPersistentSettingBoolean
    boolean getPersistentSettingBoolean(java.lang.String,java.lang.String,java.lang.Boolean) -> getPersistentSettingBoolean
    void savePersistentSettingInteger(java.lang.String,java.lang.String,java.lang.Integer) -> savePersistentSettingInteger
    java.lang.Integer getPersistentSettingInteger(java.lang.String,java.lang.String,java.lang.Integer) -> getPersistentSettingInteger
    void savePersistentSettingString(java.lang.String,java.lang.String,java.lang.String) -> savePersistentSettingString
    java.lang.String getPersistentSettingString(java.lang.String,java.lang.String,java.lang.String) -> getPersistentSettingString
    void removePersistentSettingString(java.lang.String,java.lang.String) -> removePersistentSettingString
    java.lang.String removePersistentSettingString(java.lang.String,java.lang.String,java.lang.String) -> removePersistentSettingString
com.avos.avoscloud.AVPowerfulUtils -> com.avos.avoscloud.AVPowerfulUtils:
    java.util.Map powerfulTable -> powerfulTable
    java.lang.String ENDPOINT -> ENDPOINT
    java.lang.String PARSE_CLASSNAME -> PARSE_CLASSNAME
    void createSettings(java.lang.String,java.lang.String,java.lang.String) -> createSettings
    void createTable() -> createTable
    java.lang.String get(java.lang.String,java.lang.String) -> get
    java.lang.String getAVClassEndpoint(java.lang.String,java.lang.String,java.lang.String) -> getAVClassEndpoint
    java.lang.String getAVUserEndpoint(com.avos.avoscloud.AVUser) -> getAVUserEndpoint
    java.lang.String getAVRoleEndpoint(com.avos.avoscloud.AVRole) -> getAVRoleEndpoint
    java.lang.String getEndpoint(java.lang.String) -> getEndpoint
    java.lang.String getEndpoint(java.lang.Object) -> getEndpoint
    java.lang.String getEndpoint(java.lang.Object,boolean) -> getEndpoint
    java.lang.String getBatchEndpoint(java.lang.String,com.avos.avoscloud.AVObject) -> getBatchEndpoint
    java.lang.String getBatchEndpoint(java.lang.String,com.avos.avoscloud.AVObject,boolean) -> getBatchEndpoint
    java.lang.String getEndpointByAVClassName(java.lang.String,java.lang.String) -> getEndpointByAVClassName
    java.lang.String getAVClassName(java.lang.String) -> getAVClassName
    java.lang.String getFollowEndPoint(java.lang.String,java.lang.String) -> getFollowEndPoint
    java.lang.String getFollowersEndPoint(java.lang.String) -> getFollowersEndPoint
    java.lang.String getFolloweesEndPoint(java.lang.String) -> getFolloweesEndPoint
    java.lang.String getFollowersAndFollowees(java.lang.String) -> getFollowersAndFollowees
    java.lang.String getInternalIdFromRequestBody(java.util.Map) -> getInternalIdFromRequestBody
com.avos.avoscloud.AVQuery -> com.avos.avoscloud.AVQuery:
    java.lang.String TAG -> TAG
    java.lang.Class clazz -> clazz
    java.lang.String className -> className
    java.util.Map where -> where
    java.util.List include -> include
    java.util.Set selectedKeys -> selectedKeys
    int limit -> limit
    boolean trace -> trace
    int skip -> skip
    java.lang.String order -> order
    java.lang.Boolean isRunning -> isRunning
    com.avos.avoscloud.AVQuery$CachePolicy cachePolicy -> cachePolicy
    long maxCacheAge -> maxCacheAge
    java.util.Map parameters -> parameters
    java.lang.String queryPath -> queryPath
    java.lang.String externalQueryPath -> externalQueryPath
    java.lang.String CLOUD_QUERY_PATH -> CLOUD_QUERY_PATH
    java.lang.Class getClazz() -> getClazz
    void setClazz(java.lang.Class) -> setClazz
    java.util.List getInclude() -> getInclude
    void setInclude(java.util.List) -> setInclude
    java.util.Set getSelectedKeys() -> getSelectedKeys
    void setSelectedKeys(java.util.Set) -> setSelectedKeys
    java.lang.Boolean getIsRunning() -> getIsRunning
    void setIsRunning(java.lang.Boolean) -> setIsRunning
    java.util.Map getParameters() -> getParameters
    void setParameters(java.util.Map) -> setParameters
    java.lang.String getQueryPath() -> getQueryPath
    void setQueryPath(java.lang.String) -> setQueryPath
    java.lang.String getExternalQueryPath() -> getExternalQueryPath
    void setExternalQueryPath(java.lang.String) -> setExternalQueryPath
    java.lang.String getTag() -> getTag
    java.util.Map getWhere() -> getWhere
    java.lang.String getClassName() -> getClassName
    com.avos.avoscloud.AVQuery setClassName(java.lang.String) -> setClassName
    int getLimit() -> getLimit
    com.avos.avoscloud.AVQuery setLimit(int) -> setLimit
    com.avos.avoscloud.AVQuery limit(int) -> limit
    com.avos.avoscloud.AVQuery skip(int) -> skip
    void generateQueryPath() -> generateQueryPath
    int getSkip() -> getSkip
    com.avos.avoscloud.AVQuery setSkip(int) -> setSkip
    java.lang.String getOrder() -> getOrder
    com.avos.avoscloud.AVQuery setOrder(java.lang.String) -> setOrder
    com.avos.avoscloud.AVQuery order(java.lang.String) -> order
    com.avos.avoscloud.AVQuery$CachePolicy getCachePolicy() -> getCachePolicy
    com.avos.avoscloud.AVQuery setCachePolicy(com.avos.avoscloud.AVQuery$CachePolicy) -> setCachePolicy
    com.avos.avoscloud.AVQuery$CachePolicy getPolicy() -> getPolicy
    com.avos.avoscloud.AVQuery setPolicy(com.avos.avoscloud.AVQuery$CachePolicy) -> setPolicy
    long getMaxCacheAge() -> getMaxCacheAge
    com.avos.avoscloud.AVQuery setMaxCacheAge(long) -> setMaxCacheAge
    boolean isTrace() -> isTrace
    com.avos.avoscloud.AVQuery setTrace(boolean) -> setTrace
    com.avos.avoscloud.AVQuery getQuery(java.lang.String) -> getQuery
    com.avos.avoscloud.AVQuery getQuery(java.lang.Class) -> getQuery
    com.avos.avoscloud.AVQuery addAscendingOrder(java.lang.String) -> addAscendingOrder
    com.avos.avoscloud.AVQuery addDescendingOrder(java.lang.String) -> addDescendingOrder
    void cancel() -> cancel
    void clearAllCachedResults() -> clearAllCachedResults
    void clearCachedResult() -> clearCachedResult
    int count() -> count
    int count(boolean) -> count
    void countInBackground(com.avos.avoscloud.CountCallback) -> countInBackground
    void countInBackground(boolean,com.avos.avoscloud.CountCallback) -> countInBackground
    java.util.List find() -> find
    java.lang.String queryPath() -> queryPath
    java.util.Map whereMap() -> whereMap
    java.util.Map assembleParameters() -> assembleParameters
    java.util.List processResults(java.lang.String) -> processResults
    void processAdditionalInfo(java.lang.String,com.avos.avoscloud.FindCallback) -> processAdditionalInfo
    void findInBackground(com.avos.avoscloud.FindCallback) -> findInBackground
    com.avos.avoscloud.AVObject get(java.lang.String) -> get
    com.avos.avoscloud.AVObject getFirst() -> getFirst
    void getFirstInBackground(com.avos.avoscloud.GetCallback) -> getFirstInBackground
    void getFirstInBackground(boolean,com.avos.avoscloud.GetCallback) -> getFirstInBackground
    void getInBackground(java.lang.String,com.avos.avoscloud.GetCallback) -> getInBackground
    void getInBackground(java.lang.String,boolean,com.avos.avoscloud.GetCallback) -> getInBackground
    com.avos.avoscloud.AVQuery getUserQuery() -> getUserQuery
    boolean hasCachedResult() -> hasCachedResult
    com.avos.avoscloud.AVQuery include(java.lang.String) -> include
    com.avos.avoscloud.AVQuery selectKeys(java.util.Collection) -> selectKeys
    void deleteAll() -> deleteAll
    void deleteAllInBackground(com.avos.avoscloud.DeleteCallback) -> deleteAllInBackground
    com.avos.avoscloud.AVQuery or(java.util.List) -> or
    com.avos.avoscloud.AVQuery orderByAscending(java.lang.String) -> orderByAscending
    com.avos.avoscloud.AVQuery orderByDescending(java.lang.String) -> orderByDescending
    com.avos.avoscloud.AVQuery whereContainedIn(java.lang.String,java.util.Collection) -> whereContainedIn
    com.avos.avoscloud.AVQuery whereContains(java.lang.String,java.lang.String) -> whereContains
    com.avos.avoscloud.AVQuery whereSizeEqual(java.lang.String,int) -> whereSizeEqual
    com.avos.avoscloud.AVQuery whereContainsAll(java.lang.String,java.util.Collection) -> whereContainsAll
    com.avos.avoscloud.AVQuery whereDoesNotExist(java.lang.String) -> whereDoesNotExist
    com.avos.avoscloud.AVQuery whereDoesNotMatchKeyInQuery(java.lang.String,java.lang.String,com.avos.avoscloud.AVQuery) -> whereDoesNotMatchKeyInQuery
    com.avos.avoscloud.AVQuery whereDoesNotMatchQuery(java.lang.String,com.avos.avoscloud.AVQuery) -> whereDoesNotMatchQuery
    com.avos.avoscloud.AVQuery whereEndsWith(java.lang.String,java.lang.String) -> whereEndsWith
    com.avos.avoscloud.AVQuery whereEqualTo(java.lang.String,java.lang.Object) -> whereEqualTo
    java.util.Map createMap(java.lang.String,java.lang.Object) -> createMap
    com.avos.avoscloud.AVQuery addWhereItem(com.avos.avoscloud.AVQuery$QueryOperation) -> addWhereItem
    com.avos.avoscloud.AVQuery addOrItems(com.avos.avoscloud.AVQuery$QueryOperation) -> addOrItems
    void removeDuplications(com.avos.avoscloud.AVQuery$QueryOperation,java.util.List) -> removeDuplications
    com.avos.avoscloud.AVQuery addWhereItem(java.lang.String,java.lang.String,java.lang.Object) -> addWhereItem
    com.avos.avoscloud.AVQuery whereExists(java.lang.String) -> whereExists
    com.avos.avoscloud.AVQuery whereGreaterThan(java.lang.String,java.lang.Object) -> whereGreaterThan
    com.avos.avoscloud.AVQuery whereGreaterThanOrEqualTo(java.lang.String,java.lang.Object) -> whereGreaterThanOrEqualTo
    com.avos.avoscloud.AVQuery whereLessThan(java.lang.String,java.lang.Object) -> whereLessThan
    com.avos.avoscloud.AVQuery whereLessThanOrEqualTo(java.lang.String,java.lang.Object) -> whereLessThanOrEqualTo
    com.avos.avoscloud.AVQuery whereMatches(java.lang.String,java.lang.String) -> whereMatches
    com.avos.avoscloud.AVQuery whereMatches(java.lang.String,java.lang.String,java.lang.String) -> whereMatches
    com.avos.avoscloud.AVQuery whereMatchesKeyInQuery(java.lang.String,java.lang.String,com.avos.avoscloud.AVQuery) -> whereMatchesKeyInQuery
    com.avos.avoscloud.AVQuery whereMatchesQuery(java.lang.String,com.avos.avoscloud.AVQuery) -> whereMatchesQuery
    com.avos.avoscloud.AVQuery whereNear(java.lang.String,com.avos.avoscloud.AVGeoPoint) -> whereNear
    com.avos.avoscloud.AVQuery whereNotContainedIn(java.lang.String,java.util.Collection) -> whereNotContainedIn
    com.avos.avoscloud.AVQuery whereNotEqualTo(java.lang.String,java.lang.Object) -> whereNotEqualTo
    com.avos.avoscloud.AVQuery whereStartsWith(java.lang.String,java.lang.String) -> whereStartsWith
    com.avos.avoscloud.AVQuery whereWithinGeoBox(java.lang.String,com.avos.avoscloud.AVGeoPoint,com.avos.avoscloud.AVGeoPoint) -> whereWithinGeoBox
    com.avos.avoscloud.AVQuery whereWithinKilometers(java.lang.String,com.avos.avoscloud.AVGeoPoint,double) -> whereWithinKilometers
    com.avos.avoscloud.AVQuery whereWithinMiles(java.lang.String,com.avos.avoscloud.AVGeoPoint,double) -> whereWithinMiles
    com.avos.avoscloud.AVQuery whereWithinRadians(java.lang.String,com.avos.avoscloud.AVGeoPoint,double) -> whereWithinRadians
    com.avos.avoscloud.AVQuery setWhere(java.util.Map) -> setWhere
    com.avos.avoscloud.AVCloudQueryResult doCloudQuery(java.lang.String,java.lang.Object[]) -> doCloudQuery
    com.avos.avoscloud.AVCloudQueryResult doCloudQuery(java.lang.String,java.lang.Class,java.lang.Object[]) -> doCloudQuery
    void doCloudQueryInBackground(java.lang.String,com.avos.avoscloud.CloudQueryCallback,java.lang.Object[]) -> doCloudQueryInBackground
    void doCloudQueryInBackground(java.lang.String,com.avos.avoscloud.CloudQueryCallback,java.lang.Class,java.lang.Object[]) -> doCloudQueryInBackground
    com.avos.avoscloud.AVCloudQueryResult doCloudQuery(java.lang.String) -> doCloudQuery
    com.avos.avoscloud.AVCloudQueryResult doCloudQuery(java.lang.String,java.lang.Class) -> doCloudQuery
    void doCloudQueryInBackground(java.lang.String,com.avos.avoscloud.CloudQueryCallback) -> doCloudQueryInBackground
    void doCloudQueryInBackground(java.lang.String,com.avos.avoscloud.CloudQueryCallback,java.lang.Class) -> doCloudQueryInBackground
    void doCloudQueryInBackground(java.lang.String,com.avos.avoscloud.CloudQueryCallback,java.lang.Class,boolean,java.lang.Object[]) -> doCloudQueryInBackground
    com.avos.avoscloud.AVCloudQueryResult processCloudResults(java.lang.String,java.lang.Class) -> processCloudResults
    java.lang.Class access$000(com.avos.avoscloud.AVQuery) -> access$000
    com.avos.avoscloud.AVCloudQueryResult access$100(java.lang.String,java.lang.Class) -> access$100
com.avos.avoscloud.AVQuery$1 -> com.avos.avoscloud.AVQuery$1:
    int[] val$value -> val$value
    com.avos.avoscloud.AVQuery this$0 -> this$0
    void done(int,com.avos.avoscloud.AVException) -> done
    boolean mustRunOnUIThread() -> mustRunOnUIThread
com.avos.avoscloud.AVQuery$10 -> com.avos.avoscloud.AVQuery$10:
    com.avos.avoscloud.GetCallback val$internalCallback -> val$internalCallback
    com.avos.avoscloud.AVQuery this$0 -> this$0
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVQuery$11 -> com.avos.avoscloud.AVQuery$11:
    com.avos.avoscloud.DeleteCallback val$cb -> val$cb
    com.avos.avoscloud.AVQuery this$0 -> this$0
    void done(java.util.List,com.avos.avoscloud.AVException) -> done
com.avos.avoscloud.AVQuery$12 -> com.avos.avoscloud.AVQuery$12:
    com.avos.avoscloud.AVCloudQueryResult val$returnValue -> val$returnValue
    void done(com.avos.avoscloud.AVCloudQueryResult,com.avos.avoscloud.AVException) -> done
com.avos.avoscloud.AVQuery$13 -> com.avos.avoscloud.AVQuery$13:
    com.avos.avoscloud.AVCloudQueryResult val$returnValue -> val$returnValue
    void done(com.avos.avoscloud.AVCloudQueryResult,com.avos.avoscloud.AVException) -> done
com.avos.avoscloud.AVQuery$14 -> com.avos.avoscloud.AVQuery$14:
    com.avos.avoscloud.AVCloudQueryResult val$returnValue -> val$returnValue
    void done(com.avos.avoscloud.AVCloudQueryResult,com.avos.avoscloud.AVException) -> done
com.avos.avoscloud.AVQuery$15 -> com.avos.avoscloud.AVQuery$15:
    com.avos.avoscloud.CloudQueryCallback val$callback -> val$callback
    java.lang.Class val$clazz -> val$clazz
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
com.avos.avoscloud.AVQuery$2 -> com.avos.avoscloud.AVQuery$2:
    int[] val$value -> val$value
    com.avos.avoscloud.AVQuery this$0 -> this$0
    void done(int,com.avos.avoscloud.AVException) -> done
com.avos.avoscloud.AVQuery$3 -> com.avos.avoscloud.AVQuery$3:
    com.avos.avoscloud.CountCallback val$internalCallback -> val$internalCallback
    com.avos.avoscloud.AVQuery this$0 -> this$0
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVQuery$4 -> com.avos.avoscloud.AVQuery$4:
    java.util.List val$result -> val$result
    com.avos.avoscloud.AVQuery this$0 -> this$0
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVQuery$5 -> com.avos.avoscloud.AVQuery$5:
    com.avos.avoscloud.FindCallback val$internalCallback -> val$internalCallback
    com.avos.avoscloud.AVQuery this$0 -> this$0
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVQuery$6 -> com.avos.avoscloud.AVQuery$6:
    java.lang.Object[] val$result -> val$result
    com.avos.avoscloud.AVQuery this$0 -> this$0
    void done(com.avos.avoscloud.AVObject,com.avos.avoscloud.AVException) -> done
    boolean mustRunOnUIThread() -> mustRunOnUIThread
com.avos.avoscloud.AVQuery$7 -> com.avos.avoscloud.AVQuery$7:
    java.lang.Object[] val$result -> val$result
    com.avos.avoscloud.AVQuery this$0 -> this$0
    void done(com.avos.avoscloud.AVObject,com.avos.avoscloud.AVException) -> done
    boolean mustRunOnUIThread() -> mustRunOnUIThread
com.avos.avoscloud.AVQuery$8 -> com.avos.avoscloud.AVQuery$8:
    com.avos.avoscloud.GetCallback val$internalCallback -> val$internalCallback
    com.avos.avoscloud.AVQuery this$0 -> this$0
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVQuery$9 -> com.avos.avoscloud.AVQuery$9:
    com.avos.avoscloud.GetCallback val$internalCallback -> val$internalCallback
    com.avos.avoscloud.AVQuery this$0 -> this$0
    void done(com.avos.avoscloud.AVObject,com.avos.avoscloud.AVException) -> done
com.avos.avoscloud.AVQuery$CachePolicy -> com.avos.avoscloud.AVQuery$CachePolicy:
    com.avos.avoscloud.AVQuery$CachePolicy CACHE_ELSE_NETWORK -> CACHE_ELSE_NETWORK
    com.avos.avoscloud.AVQuery$CachePolicy CACHE_ONLY -> CACHE_ONLY
    com.avos.avoscloud.AVQuery$CachePolicy CACHE_THEN_NETWORK -> CACHE_THEN_NETWORK
    com.avos.avoscloud.AVQuery$CachePolicy IGNORE_CACHE -> IGNORE_CACHE
    com.avos.avoscloud.AVQuery$CachePolicy NETWORK_ELSE_CACHE -> NETWORK_ELSE_CACHE
    com.avos.avoscloud.AVQuery$CachePolicy NETWORK_ONLY -> NETWORK_ONLY
    com.avos.avoscloud.AVQuery$CachePolicy[] $VALUES -> $VALUES
    com.avos.avoscloud.AVQuery$CachePolicy[] values() -> values
    com.avos.avoscloud.AVQuery$CachePolicy valueOf(java.lang.String) -> valueOf
com.avos.avoscloud.AVQuery$QueryOperation -> com.avos.avoscloud.AVQuery$QueryOperation:
    java.lang.String EQUAL_OP -> EQUAL_OP
    java.lang.String OR_OP -> OR_OP
    java.lang.String key -> key
    java.lang.Object value -> value
    java.lang.String op -> op
    java.lang.Object toResult() -> toResult
    java.lang.Object toResult(java.lang.String) -> toResult
    boolean sameOp(com.avos.avoscloud.AVQuery$QueryOperation) -> sameOp
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.avos.avoscloud.AVRelation -> com.avos.avoscloud.AVRelation:
    java.lang.String key -> key
    com.avos.avoscloud.AVObject parent -> parent
    java.lang.String targetClass -> targetClass
    void add(com.avos.avoscloud.AVObject) -> add
    void addAll(java.util.Collection) -> addAll
    void remove(com.avos.avoscloud.AVObject) -> remove
    com.avos.avoscloud.AVQuery getQuery() -> getQuery
    com.avos.avoscloud.AVQuery getQuery(java.lang.Class) -> getQuery
    com.avos.avoscloud.AVQuery reverseQuery(java.lang.String,java.lang.String,com.avos.avoscloud.AVObject) -> reverseQuery
    com.avos.avoscloud.AVQuery reverseQuery(java.lang.Class,java.lang.String,com.avos.avoscloud.AVObject) -> reverseQuery
    java.lang.String getKey() -> getKey
    void setKey(java.lang.String) -> setKey
    void setParent(com.avos.avoscloud.AVObject) -> setParent
    com.avos.avoscloud.AVObject getParent() -> getParent
    void setTargetClass(java.lang.String) -> setTargetClass
    java.lang.String getTargetClass() -> getTargetClass
com.avos.avoscloud.AVRelation$1 -> com.avos.avoscloud.AVRelation$1:
    com.avos.avoscloud.AVRelation this$0 -> this$0
com.avos.avoscloud.AVResponse -> com.avos.avoscloud.AVResponse:
    java.lang.String objectId -> objectId
    java.lang.String updatedAt -> updatedAt
    java.lang.String createdAt -> createdAt
    java.util.Map[] results -> results
    int count -> count
    java.lang.String className -> className
com.avos.avoscloud.AVResponseArray -> com.avos.avoscloud.AVResponseArray:
    java.util.List results -> results
com.avos.avoscloud.AVRole -> com.avos.avoscloud.AVRole:
    java.lang.String name -> name
    java.lang.String className -> className
    java.lang.String getName() -> getName
    com.avos.avoscloud.AVQuery getQuery() -> getQuery
    com.avos.avoscloud.AVRelation getRoles() -> getRoles
    com.avos.avoscloud.AVRelation getUsers() -> getUsers
    void put(java.lang.String,java.lang.Object) -> put
    void setName(java.lang.String) -> setName
com.avos.avoscloud.AVRuntimeException -> com.avos.avoscloud.AVRuntimeException:
    long serialVersionUID -> serialVersionUID
com.avos.avoscloud.AVStatus -> com.avos.avoscloud.AVStatus:
    java.util.Map dataMap -> dataMap
    java.lang.String IMAGE_TAG -> IMAGE_TAG
    java.lang.String MESSAGE_TAG -> MESSAGE_TAG
    java.lang.String AV_CLASS_NAME -> AV_CLASS_NAME
    int DEFAULT_COUNT -> DEFAULT_COUNT
    java.lang.String INBOX_TIMELINE -> INBOX_TIMELINE
    java.lang.String INBOX_PRIVATE -> INBOX_PRIVATE
    java.lang.String STATUS_END_POINT -> STATUS_END_POINT
    java.lang.String UNREAD_TAG -> UNREAD_TAG
    long messageId -> messageId
    java.lang.String createdAt -> createdAt
    java.lang.String inboxType -> inboxType
    com.avos.avoscloud.AVObject source -> source
    com.avos.avoscloud.AVQuery query -> query
    java.util.List ignoreList -> ignoreList
    com.avos.avoscloud.AVStatus createStatus(java.lang.String,java.lang.String) -> createStatus
    com.avos.avoscloud.AVStatus createStatusWithData(java.util.Map) -> createStatusWithData
    boolean checkCurrentUser(com.avos.avoscloud.AVCallback) -> checkCurrentUser
    java.lang.String getObjectId() -> getObjectId
    java.util.Date getCreatedAt() -> getCreatedAt
    void setCreatedAt(java.lang.String) -> setCreatedAt
    void setImageUrl(java.lang.String) -> setImageUrl
    java.lang.String getImageUrl() -> getImageUrl
    com.avos.avoscloud.AVUser getSource() -> getSource
    void setSource(com.avos.avoscloud.AVObject) -> setSource
    void setInboxType(java.lang.String) -> setInboxType
    void setQuery(com.avos.avoscloud.AVQuery) -> setQuery
    void setMessage(java.lang.String) -> setMessage
    java.lang.String getMessage() -> getMessage
    void setData(java.util.Map) -> setData
    java.util.Map getData() -> getData
    void put(java.lang.String,java.lang.Object) -> put
    void remove(java.lang.String) -> remove
    long getMessageId() -> getMessageId
    void setMessageId(long) -> setMessageId
    java.lang.String getInboxType() -> getInboxType
    void deleteStatusInBackground(com.avos.avoscloud.DeleteCallback) -> deleteStatusInBackground
    void deleteStatusWithIDInBackgroud(java.lang.String,com.avos.avoscloud.DeleteCallback) -> deleteStatusWithIDInBackgroud
    void deleteStatusWithId(boolean,java.lang.String,com.avos.avoscloud.DeleteCallback) -> deleteStatusWithId
    void getStatuses(long,long,com.avos.avoscloud.StatusListCallback) -> getStatuses
    java.util.Map sourceQueryMap(java.lang.String,long,long) -> sourceQueryMap
    void getStatusesFromCurrentUserWithType(java.lang.String,long,long,com.avos.avoscloud.StatusListCallback) -> getStatusesFromCurrentUserWithType
    void getStatusesFromUser(java.lang.String,long,long,com.avos.avoscloud.StatusListCallback) -> getStatusesFromUser
    java.util.Map statusQueryMap(java.lang.String,long,long,long,java.lang.String,java.util.Map,boolean,boolean) -> statusQueryMap
    java.util.Map getStatusQueryMap(java.lang.String,long,long,long,java.lang.String,java.util.Map,boolean,boolean) -> getStatusQueryMap
    java.util.List processStatusResultList(java.lang.String) -> processStatusResultList
    void processStatus(java.lang.String,com.avos.avoscloud.AVStatus) -> processStatus
    void processStatusFromObject(java.lang.Object,com.avos.avoscloud.AVStatus) -> processStatusFromObject
    void getStatusImpl(java.lang.String,java.util.Map,com.avos.avoscloud.StatusListCallback) -> getStatusImpl
    int processStatusCount(java.lang.String) -> processStatusCount
    void getStatusCountImpl(java.lang.String,java.util.Map,com.avos.avoscloud.CountCallback) -> getStatusCountImpl
    void getInboxStatusesInBackground(long,long,com.avos.avoscloud.StatusListCallback) -> getInboxStatusesInBackground
    void getInboxStatusesWithInboxType(long,long,java.lang.String,com.avos.avoscloud.StatusListCallback) -> getInboxStatusesWithInboxType
    void getUnreadStatusesCountInBackground(java.lang.String,com.avos.avoscloud.CountCallback) -> getUnreadStatusesCountInBackground
    void getInboxUnreadStatusesCountInBackgroud(com.avos.avoscloud.CountCallback) -> getInboxUnreadStatusesCountInBackgroud
    void getInboxUnreadStatusesCountWithInboxTypeInBackgroud(long,long,java.lang.String,com.avos.avoscloud.CountCallback) -> getInboxUnreadStatusesCountWithInboxTypeInBackgroud
    void getInboxPrivteStatuses(long,long,com.avos.avoscloud.StatusListCallback) -> getInboxPrivteStatuses
    boolean checkStatusId(java.lang.String,com.avos.avoscloud.StatusCallback) -> checkStatusId
    void getStatusWithIdInBackgroud(java.lang.String,com.avos.avoscloud.StatusCallback) -> getStatusWithIdInBackgroud
    void postStatusImpl(com.avos.avoscloud.AVStatus,java.util.Map,com.avos.avoscloud.SaveCallback) -> postStatusImpl
    java.util.Map statusBody(com.avos.avoscloud.AVStatus,java.lang.String,java.util.Map) -> statusBody
    java.util.Map myQueryParameters(com.avos.avoscloud.AVQuery) -> myQueryParameters
    void sendInBackgroundWithBlock(com.avos.avoscloud.SaveCallback) -> sendInBackgroundWithBlock
    void sendInBackground(com.avos.avoscloud.SaveCallback) -> sendInBackground
    void sendStatusToFollowersInBackgroud(com.avos.avoscloud.AVStatus,com.avos.avoscloud.SaveCallback) -> sendStatusToFollowersInBackgroud
    void sendPrivateStatusInBackgroud(com.avos.avoscloud.AVStatus,java.lang.String,com.avos.avoscloud.SaveCallback) -> sendPrivateStatusInBackgroud
    java.util.Map currentUserBody() -> currentUserBody
    com.avos.avoscloud.AVStatusQuery statusQuery(com.avos.avoscloud.AVUser) -> statusQuery
    com.avos.avoscloud.AVStatusQuery inboxQuery(com.avos.avoscloud.AVUser,java.lang.String) -> inboxQuery
    void add(java.lang.String,java.lang.Object) -> add
    void addAll(java.lang.String,java.util.Collection) -> addAll
    void addAllUnique(java.lang.String,java.util.Collection) -> addAllUnique
    void addUnique(java.lang.String,java.lang.Object) -> addUnique
    boolean containsKey(java.lang.String) -> containsKey
    void delete() -> delete
    void deleteEventually(com.avos.avoscloud.DeleteCallback) -> deleteEventually
    void deleteEventually() -> deleteEventually
    void deleteInBackground() -> deleteInBackground
    com.avos.avoscloud.AVObject toObject() -> toObject
    boolean equals(java.lang.Object) -> equals
    com.avos.avoscloud.AVObject fetch() -> fetch
    com.avos.avoscloud.AVObject fetch(java.lang.String) -> fetch
    com.avos.avoscloud.AVObject fetchIfNeeded() -> fetchIfNeeded
    com.avos.avoscloud.AVObject fetchIfNeeded(java.lang.String) -> fetchIfNeeded
    void fetchIfNeededInBackground(com.avos.avoscloud.GetCallback) -> fetchIfNeededInBackground
    void fetchIfNeededInBackground(java.lang.String,com.avos.avoscloud.GetCallback) -> fetchIfNeededInBackground
    java.lang.String toString() -> toString
    boolean isFetchWhenSave() -> isFetchWhenSave
    void setFetchWhenSave(boolean) -> setFetchWhenSave
    java.lang.String getUuid() -> getUuid
    void deleteInBackground(com.avos.avoscloud.DeleteCallback) -> deleteInBackground
    void fetchInBackground(com.avos.avoscloud.GetCallback) -> fetchInBackground
    void fetchInBackground(java.lang.String,com.avos.avoscloud.GetCallback) -> fetchInBackground
    java.lang.Object get(java.lang.String) -> get
    com.avos.avoscloud.AVACL getACL() -> getACL
    boolean getBoolean(java.lang.String) -> getBoolean
    byte[] getBytes(java.lang.String) -> getBytes
    java.lang.String getClassName() -> getClassName
    java.util.Date getDate(java.lang.String) -> getDate
    double getDouble(java.lang.String) -> getDouble
    int getInt(java.lang.String) -> getInt
    org.json.JSONArray getJSONArray(java.lang.String) -> getJSONArray
    org.json.JSONObject getJSONObject(java.lang.String) -> getJSONObject
    java.util.List getList(java.lang.String) -> getList
    long getLong(java.lang.String) -> getLong
    java.util.Map getMap(java.lang.String) -> getMap
    java.lang.Number getNumber(java.lang.String) -> getNumber
    com.avos.avoscloud.AVFile getAVFile(java.lang.String) -> getAVFile
    com.avos.avoscloud.AVGeoPoint getAVGeoPoint(java.lang.String) -> getAVGeoPoint
    com.avos.avoscloud.AVObject getAVObject(java.lang.String) -> getAVObject
    com.avos.avoscloud.AVUser getAVUser(java.lang.String) -> getAVUser
    com.avos.avoscloud.AVRelation getRelation(java.lang.String) -> getRelation
    java.lang.String getString(java.lang.String) -> getString
    java.util.Date getUpdatedAt() -> getUpdatedAt
    boolean has(java.lang.String) -> has
    boolean hasSameId(com.avos.avoscloud.AVObject) -> hasSameId
    void increment(java.lang.String) -> increment
    void increment(java.lang.String,java.lang.Number) -> increment
    java.util.Set keySet() -> keySet
    void refresh() -> refresh
    void refresh(java.lang.String) -> refresh
    void refreshInBackground(com.avos.avoscloud.RefreshCallback) -> refreshInBackground
    void refreshInBackground(java.lang.String,com.avos.avoscloud.RefreshCallback) -> refreshInBackground
    void removeAll(java.lang.String,java.util.Collection) -> removeAll
    void save() -> save
    void saveEventually() -> saveEventually
    void saveEventually(com.avos.avoscloud.SaveCallback) -> saveEventually
    void saveInBackground() -> saveInBackground
    void saveInBackground(com.avos.avoscloud.SaveCallback) -> saveInBackground
    void setACL(com.avos.avoscloud.AVACL) -> setACL
com.avos.avoscloud.AVStatus$1 -> com.avos.avoscloud.AVStatus$1:
    com.avos.avoscloud.DeleteCallback val$callback -> val$callback
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVStatus$2 -> com.avos.avoscloud.AVStatus$2:
    com.avos.avoscloud.StatusListCallback val$callback -> val$callback
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVStatus$3 -> com.avos.avoscloud.AVStatus$3:
    com.avos.avoscloud.CountCallback val$callback -> val$callback
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVStatus$4 -> com.avos.avoscloud.AVStatus$4:
    com.avos.avoscloud.StatusCallback val$callback -> val$callback
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVStatus$5 -> com.avos.avoscloud.AVStatus$5:
    com.avos.avoscloud.AVStatus val$status -> val$status
    com.avos.avoscloud.SaveCallback val$callback -> val$callback
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVStatus$6 -> com.avos.avoscloud.AVStatus$6:
    com.avos.avoscloud.AVStatus this$0 -> this$0
    void done(com.avos.avoscloud.AVException) -> done
    boolean mustRunOnUIThread() -> mustRunOnUIThread
com.avos.avoscloud.AVStatus$INBOX_TYPE -> com.avos.avoscloud.AVStatus$INBOX_TYPE:
    com.avos.avoscloud.AVStatus$INBOX_TYPE TIMELINE -> TIMELINE
    com.avos.avoscloud.AVStatus$INBOX_TYPE PRIVATE -> PRIVATE
    java.lang.String type -> type
    com.avos.avoscloud.AVStatus$INBOX_TYPE[] $VALUES -> $VALUES
    com.avos.avoscloud.AVStatus$INBOX_TYPE[] values() -> values
    com.avos.avoscloud.AVStatus$INBOX_TYPE valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
com.avos.avoscloud.AVStatusQuery -> com.avos.avoscloud.AVStatusQuery:
    java.lang.String END -> END
    long sinceId -> sinceId
    java.lang.String inboxType -> inboxType
    long maxId -> maxId
    boolean count -> count
    com.avos.avoscloud.AVUser owner -> owner
    boolean selfStatusQuery -> selfStatusQuery
    void setSinceId(long) -> setSinceId
    long getSinceId() -> getSinceId
    void setInboxType(java.lang.String) -> setInboxType
    java.lang.String getInboxType() -> getInboxType
    long getMaxId() -> getMaxId
    void setMaxId(long) -> setMaxId
    boolean isCount() -> isCount
    void setCount(boolean) -> setCount
    com.avos.avoscloud.AVUser getOwner() -> getOwner
    void setOwner(com.avos.avoscloud.AVUser) -> setOwner
    void setSelfQuery(boolean) -> setSelfQuery
    java.util.Map assembleParameters() -> assembleParameters
    java.util.List processResults(java.lang.String) -> processResults
    void processStatusFromObject(java.lang.Object,com.avos.avoscloud.AVStatus) -> processStatusFromObject
    void processAdditionalInfo(java.lang.String,com.avos.avoscloud.FindCallback) -> processAdditionalInfo
com.avos.avoscloud.AVUncaughtExceptionHandler -> com.avos.avoscloud.AVUncaughtExceptionHandler:
    java.lang.Thread$UncaughtExceptionHandler defaultExceptionHandler -> defaultExceptionHandler
    boolean enabled -> enabled
    java.lang.String LOG_TAG -> LOG_TAG
    android.content.Context context -> context
    java.lang.Thread brokenThread -> brokenThread
    java.lang.Throwable unhandledThrowable -> unhandledThrowable
    void enableCrashHanlder(boolean) -> enableCrashHanlder
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    void handleException(java.lang.Throwable,boolean) -> handleException
    void handleException(java.lang.Throwable) -> handleException
    void handleException(java.lang.Throwable,boolean,boolean) -> handleException
    java.lang.String getStackTrace(java.lang.Throwable) -> getStackTrace
    java.util.Map crashData(android.content.Context,java.lang.Throwable) -> crashData
    void endApplication() -> endApplication
com.avos.avoscloud.AVUploader -> com.avos.avoscloud.AVUploader:
    com.avos.avoscloud.AVFile parseFile -> parseFile
    com.avos.avoscloud.SaveCallback saveCallback -> saveCallback
    com.avos.avoscloud.ProgressCallback progressCallback -> progressCallback
    long totalSize -> totalSize
    boolean cancelled -> cancelled
    boolean complete -> complete
    java.lang.Thread workerThread -> workerThread
    int defaultFileKeyLength -> defaultFileKeyLength
    com.avos.avoscloud.AVException doWork() -> doWork
    void execute() -> execute
    com.avos.avoscloud.AVException doInBackground(java.lang.Void[]) -> doInBackground
    void onProgressUpdate(java.lang.Integer) -> onProgressUpdate
    void onPostExecute(com.avos.avoscloud.AVException) -> onPostExecute
    void onCancelled() -> onCancelled
    boolean cancel(boolean) -> cancel
    void interruptImmediately() -> interruptImmediately
    boolean isCancelled() -> isCancelled
    void publishProgress(int) -> publishProgress
    boolean access$000(com.avos.avoscloud.AVUploader) -> access$000
    boolean access$102(com.avos.avoscloud.AVUploader,boolean) -> access$102
com.avos.avoscloud.AVUploader$1 -> com.avos.avoscloud.AVUploader$1:
    com.avos.avoscloud.AVUploader this$0 -> this$0
    void run() -> run
com.avos.avoscloud.AVUser -> com.avos.avoscloud.AVUser:
    boolean enableAutomatic -> enableAutomatic
    java.lang.String sessionToken -> sessionToken
    boolean isNew -> isNew
    java.lang.String username -> username
    java.lang.String password -> password
    java.lang.String mobilePhoneNumber -> mobilePhoneNumber
    java.lang.String email -> email
    java.lang.String facebookToken -> facebookToken
    java.lang.String twitterToken -> twitterToken
    java.lang.String sinaWeiboToken -> sinaWeiboToken
    java.lang.String qqWeiboToken -> qqWeiboToken
    boolean anonymous -> anonymous
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.String FOLLOWER_TAG -> FOLLOWER_TAG
    java.lang.String FOLLOWEE_TAG -> FOLLOWEE_TAG
    java.lang.Class subClazz -> subClazz
    com.avos.avoscloud.RelationPropertyFilter mUserPropertyFilter -> mUserPropertyFilter
    java.lang.String accessTokenTag -> accessTokenTag
    java.lang.String expiresAtTag -> expiresAtTag
    java.lang.String authDataTag -> authDataTag
    java.lang.String anonymousTag -> anonymousTag
    java.io.File currentUserArchivePath() -> currentUserArchivePath
    boolean userArchiveExist() -> userArchiveExist
    java.lang.String getFacebookToken() -> getFacebookToken
    void setFacebookToken(java.lang.String) -> setFacebookToken
    java.lang.String getTwitterToken() -> getTwitterToken
    void setTwitterToken(java.lang.String) -> setTwitterToken
    java.lang.String getQqWeiboToken() -> getQqWeiboToken
    void setQqWeiboToken(java.lang.String) -> setQqWeiboToken
    java.lang.String getPassword() -> getPassword
    void setEnableAutomatic(boolean) -> setEnableAutomatic
    void setNew(boolean) -> setNew
    void enableAutomaticUser() -> enableAutomaticUser
    boolean isEnableAutomatic() -> isEnableAutomatic
    void disableAutomaticUser() -> disableAutomaticUser
    void changeCurrentUser(com.avos.avoscloud.AVUser,boolean) -> changeCurrentUser
    com.avos.avoscloud.AVUser getCurrentUser() -> getCurrentUser
    com.avos.avoscloud.AVUser getCurrentUser(java.lang.Class) -> getCurrentUser
    java.lang.String userClassName() -> userClassName
    void setNewFlag(boolean) -> setNewFlag
    java.lang.String getEmail() -> getEmail
    com.avos.avoscloud.AVQuery getUserQuery(java.lang.Class) -> getUserQuery
    com.avos.avoscloud.AVQuery getQuery() -> getQuery
    java.lang.String getSessionToken() -> getSessionToken
    void setSessionToken(java.lang.String) -> setSessionToken
    java.lang.String getUsername() -> getUsername
    boolean isAuthenticated() -> isAuthenticated
    boolean isAnonymous() -> isAnonymous
    void setAnonymous(boolean) -> setAnonymous
    boolean isNew() -> isNew
    com.avos.avoscloud.AVUser logIn(java.lang.String,java.lang.String) -> logIn
    com.avos.avoscloud.AVUser logIn(java.lang.String,java.lang.String,java.lang.Class) -> logIn
    java.lang.String logInPath() -> logInPath
    void logInInBackground(java.lang.String,java.lang.String,com.avos.avoscloud.LogInCallback) -> logInInBackground
    void logInInBackground(java.lang.String,java.lang.String,com.avos.avoscloud.LogInCallback,java.lang.Class) -> logInInBackground
    java.util.Map createUserMap(java.lang.String,java.lang.String,java.lang.String) -> createUserMap
    java.util.Map createUserMap(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> createUserMap
    void logInInBackground(java.lang.String,java.lang.String,boolean,com.avos.avoscloud.LogInCallback,java.lang.Class) -> logInInBackground
    com.avos.avoscloud.AVUser loginByMobilePhoneNumber(java.lang.String,java.lang.String) -> loginByMobilePhoneNumber
    com.avos.avoscloud.AVUser loginByMobilePhoneNumber(java.lang.String,java.lang.String,java.lang.Class) -> loginByMobilePhoneNumber
    void loginByMobilePhoneNumberInBackground(java.lang.String,java.lang.String,com.avos.avoscloud.LogInCallback) -> loginByMobilePhoneNumberInBackground
    void loginByMobilePhoneNumberInBackground(java.lang.String,java.lang.String,com.avos.avoscloud.LogInCallback,java.lang.Class) -> loginByMobilePhoneNumberInBackground
    void loginByMobilePhoneNumberInBackground(java.lang.String,java.lang.String,boolean,com.avos.avoscloud.LogInCallback,java.lang.Class) -> loginByMobilePhoneNumberInBackground
    com.avos.avoscloud.AVUser loginBySMSCode(java.lang.String,java.lang.String) -> loginBySMSCode
    com.avos.avoscloud.AVUser loginBySMSCode(java.lang.String,java.lang.String,java.lang.Class) -> loginBySMSCode
    void loginBySMSCodeInBackground(java.lang.String,java.lang.String,com.avos.avoscloud.LogInCallback) -> loginBySMSCodeInBackground
    void loginBySMSCodeInBackground(java.lang.String,java.lang.String,com.avos.avoscloud.LogInCallback,java.lang.Class) -> loginBySMSCodeInBackground
    void loginBySMSCodeInBackground(java.lang.String,java.lang.String,boolean,com.avos.avoscloud.LogInCallback,java.lang.Class) -> loginBySMSCodeInBackground
    com.avos.avoscloud.AVUser newAVUser(java.lang.Class,com.avos.avoscloud.LogInCallback) -> newAVUser
    com.avos.avoscloud.AVUser newAVUser() -> newAVUser
    void logOut() -> logOut
    void put(java.lang.String,java.lang.Object) -> put
    void remove(java.lang.String) -> remove
    void requestPasswordReset(java.lang.String) -> requestPasswordReset
    void requestPasswordResetInBackground(java.lang.String,com.avos.avoscloud.RequestPasswordResetCallback) -> requestPasswordResetInBackground
    void requestPasswordResetInBackground(java.lang.String,boolean,com.avos.avoscloud.RequestPasswordResetCallback) -> requestPasswordResetInBackground
    void updatePassword(java.lang.String,java.lang.String) -> updatePassword
    void updatePasswordInBackground(java.lang.String,java.lang.String,com.avos.avoscloud.UpdatePasswordCallback) -> updatePasswordInBackground
    void updatePasswordInBackground(java.lang.String,java.lang.String,com.avos.avoscloud.UpdatePasswordCallback,boolean) -> updatePasswordInBackground
    void requestPasswordResetBySmsCode(java.lang.String) -> requestPasswordResetBySmsCode
    void requestPasswordResetBySmsCodeInBackground(java.lang.String,com.avos.avoscloud.RequestMobileCodeCallback) -> requestPasswordResetBySmsCodeInBackground
    void requestPasswordResetBySmsCodeInBackground(java.lang.String,boolean,com.avos.avoscloud.RequestMobileCodeCallback) -> requestPasswordResetBySmsCodeInBackground
    void resetPasswordBySmsCode(java.lang.String,java.lang.String) -> resetPasswordBySmsCode
    void resetPasswordBySmsCodeInBackground(java.lang.String,java.lang.String,com.avos.avoscloud.UpdatePasswordCallback) -> resetPasswordBySmsCodeInBackground
    void resetPasswordBySmsCodeInBackground(java.lang.String,java.lang.String,boolean,com.avos.avoscloud.UpdatePasswordCallback) -> resetPasswordBySmsCodeInBackground
    void requestEmailVerify(java.lang.String) -> requestEmailVerify
    void requestEmailVerfiyInBackground(java.lang.String,com.avos.avoscloud.RequestEmailVerifyCallback) -> requestEmailVerfiyInBackground
    void requestEmailVerfiyInBackground(java.lang.String,boolean,com.avos.avoscloud.RequestEmailVerifyCallback) -> requestEmailVerfiyInBackground
    void requestMobilePhoneVerify(java.lang.String) -> requestMobilePhoneVerify
    void requestMobilePhoneVerifyInBackgroud(java.lang.String,com.avos.avoscloud.RequestMobileCodeCallback) -> requestMobilePhoneVerifyInBackgroud
    void requestMobilePhoneVerifyInBackground(java.lang.String,com.avos.avoscloud.RequestMobileCodeCallback) -> requestMobilePhoneVerifyInBackground
    void requestMobilePhoneVerifyInBackground(java.lang.String,boolean,com.avos.avoscloud.RequestMobileCodeCallback) -> requestMobilePhoneVerifyInBackground
    void requestLoginSmsCode(java.lang.String) -> requestLoginSmsCode
    void requestLoginSmsCodeInBackground(java.lang.String,com.avos.avoscloud.RequestMobileCodeCallback) -> requestLoginSmsCodeInBackground
    void requestLoginSmsCodeInBackground(java.lang.String,boolean,com.avos.avoscloud.RequestMobileCodeCallback) -> requestLoginSmsCodeInBackground
    void verifyMobilePhone(java.lang.String) -> verifyMobilePhone
    void verifyMobilePhoneInBackgroud(java.lang.String,com.avos.avoscloud.AVMobilePhoneVerifyCallback) -> verifyMobilePhoneInBackgroud
    void verifyMobilePhoneInBackground(java.lang.String,com.avos.avoscloud.AVMobilePhoneVerifyCallback) -> verifyMobilePhoneInBackground
    void verifyMobilePhoneInBackground(boolean,java.lang.String,com.avos.avoscloud.AVMobilePhoneVerifyCallback) -> verifyMobilePhoneInBackground
    void setEmail(java.lang.String) -> setEmail
    void setPassword(java.lang.String) -> setPassword
    void setUsername(java.lang.String) -> setUsername
    java.lang.String getMobilePhoneNumber() -> getMobilePhoneNumber
    void setMobilePhoneNumber(java.lang.String) -> setMobilePhoneNumber
    boolean isMobilePhoneVerified() -> isMobilePhoneVerified
    void setMobilePhoneVerified(boolean) -> setMobilePhoneVerified
    java.lang.String signUpPath() -> signUpPath
    void signUp(boolean,com.avos.avoscloud.SignUpCallback) -> signUp
    void signUp() -> signUp
    void signUpInBackground(com.avos.avoscloud.SignUpCallback) -> signUpInBackground
    void setSinaWeiboToken(java.lang.String) -> setSinaWeiboToken
    java.lang.String getSinaWeiboToken() -> getSinaWeiboToken
    void setQQWeiboToken(java.lang.String) -> setQQWeiboToken
    java.lang.String getQQWeiboToken() -> getQQWeiboToken
    void onSaveSuccess() -> onSaveSuccess
    void onDataSynchronized() -> onDataSynchronized
    java.util.Map headerMap() -> headerMap
    com.avos.avoscloud.AVUser userFromSinaWeibo(java.lang.String,java.lang.String) -> userFromSinaWeibo
    com.avos.avoscloud.AVUser userFromQQWeibo(java.lang.String,java.lang.String) -> userFromQQWeibo
    boolean checkUserAuthentication(com.avos.avoscloud.AVCallback) -> checkUserAuthentication
    void followInBackground(java.lang.String,com.avos.avoscloud.FollowCallback) -> followInBackground
    void followInBackground(java.lang.String,java.util.Map,com.avos.avoscloud.FollowCallback) -> followInBackground
    void unfollowInBackground(java.lang.String,com.avos.avoscloud.FollowCallback) -> unfollowInBackground
    java.util.List processResultByTag(java.lang.String,java.lang.String) -> processResultByTag
    java.util.Map processFollowerAndFollowee(java.lang.String) -> processFollowerAndFollowee
    void processResultList(java.util.Map[],java.util.List,java.lang.String) -> processResultList
    com.avos.avoscloud.AVQuery followerQuery(java.lang.String,java.lang.Class) -> followerQuery
    com.avos.avoscloud.AVQuery followerQuery(java.lang.Class) -> followerQuery
    com.avos.avoscloud.AVQuery followeeQuery(java.lang.String,java.lang.Class) -> followeeQuery
    com.avos.avoscloud.AVQuery followeeQuery(java.lang.Class) -> followeeQuery
    void getFollowersInBackground(com.avos.avoscloud.FindCallback) -> getFollowersInBackground
    void getMyFolloweesInBackground(com.avos.avoscloud.FindCallback) -> getMyFolloweesInBackground
    void getFollowersAndFolloweesInBackground(com.avos.avoscloud.FollowersAndFolloweesCallback) -> getFollowersAndFolloweesInBackground
    com.avos.avoscloud.AVUser cast(com.avos.avoscloud.AVUser,java.lang.Class) -> cast
    void alwaysUseSubUserClass(java.lang.Class) -> alwaysUseSubUserClass
    java.util.Map authData(com.avos.avoscloud.AVUser$AVThirdPartyUserAuth) -> authData
    void loginWithAuthData(com.avos.avoscloud.AVUser$AVThirdPartyUserAuth,com.avos.avoscloud.LogInCallback) -> loginWithAuthData
    void loginWithAuthData(java.lang.Class,com.avos.avoscloud.AVUser$AVThirdPartyUserAuth,com.avos.avoscloud.LogInCallback) -> loginWithAuthData
    void associateWithAuthData(com.avos.avoscloud.AVUser,com.avos.avoscloud.AVUser$AVThirdPartyUserAuth,com.avos.avoscloud.SaveCallback) -> associateWithAuthData
    void dissociateAuthData(com.avos.avoscloud.AVUser,java.lang.String,com.avos.avoscloud.SaveCallback) -> dissociateAuthData
    void processAuthData(com.avos.avoscloud.AVUser$AVThirdPartyUserAuth) -> processAuthData
    java.util.List access$000(com.avos.avoscloud.AVUser,java.lang.String,java.lang.String) -> access$000
    java.util.Map access$100(com.avos.avoscloud.AVUser,java.lang.String) -> access$100
com.avos.avoscloud.AVUser$1 -> com.avos.avoscloud.AVUser$1:
    com.avos.avoscloud.AVUser[] val$list -> val$list
    void done(com.avos.avoscloud.AVUser,com.avos.avoscloud.AVException) -> done
    boolean mustRunOnUIThread() -> mustRunOnUIThread
com.avos.avoscloud.AVUser$10 -> com.avos.avoscloud.AVUser$10:
    com.avos.avoscloud.AVException[] val$errors -> val$errors
    void done(com.avos.avoscloud.AVException) -> done
com.avos.avoscloud.AVUser$11 -> com.avos.avoscloud.AVUser$11:
    com.avos.avoscloud.RequestMobileCodeCallback val$internalCallback -> val$internalCallback
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVUser$12 -> com.avos.avoscloud.AVUser$12:
    com.avos.avoscloud.AVException[] val$errors -> val$errors
    void done(com.avos.avoscloud.AVException) -> done
com.avos.avoscloud.AVUser$13 -> com.avos.avoscloud.AVUser$13:
    com.avos.avoscloud.UpdatePasswordCallback val$internalCallback -> val$internalCallback
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
com.avos.avoscloud.AVUser$14 -> com.avos.avoscloud.AVUser$14:
    com.avos.avoscloud.RequestEmailVerifyCallback val$internalCallback -> val$internalCallback
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVUser$15 -> com.avos.avoscloud.AVUser$15:
    com.avos.avoscloud.AVException[] val$errors -> val$errors
    void done(com.avos.avoscloud.AVException) -> done
com.avos.avoscloud.AVUser$16 -> com.avos.avoscloud.AVUser$16:
    com.avos.avoscloud.RequestMobileCodeCallback val$internalCallback -> val$internalCallback
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVUser$17 -> com.avos.avoscloud.AVUser$17:
    com.avos.avoscloud.AVException[] val$errors -> val$errors
    void done(com.avos.avoscloud.AVException) -> done
com.avos.avoscloud.AVUser$18 -> com.avos.avoscloud.AVUser$18:
    com.avos.avoscloud.RequestMobileCodeCallback val$internalCallback -> val$internalCallback
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVUser$19 -> com.avos.avoscloud.AVUser$19:
    com.avos.avoscloud.AVException[] val$errors -> val$errors
    void done(com.avos.avoscloud.AVException) -> done
com.avos.avoscloud.AVUser$2 -> com.avos.avoscloud.AVUser$2:
    com.avos.avoscloud.AVUser val$user -> val$user
    com.avos.avoscloud.LogInCallback val$internalCallback -> val$internalCallback
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVUser$20 -> com.avos.avoscloud.AVUser$20:
    com.avos.avoscloud.AVMobilePhoneVerifyCallback val$internalCallback -> val$internalCallback
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVUser$21 -> com.avos.avoscloud.AVUser$21:
    com.avos.avoscloud.SignUpCallback val$callback -> val$callback
    com.avos.avoscloud.AVUser this$0 -> this$0
    void done(com.avos.avoscloud.AVException) -> done
com.avos.avoscloud.AVUser$22 -> com.avos.avoscloud.AVUser$22:
    com.avos.avoscloud.AVUser this$0 -> this$0
    void done(com.avos.avoscloud.AVException) -> done
    boolean mustRunOnUIThread() -> mustRunOnUIThread
com.avos.avoscloud.AVUser$23 -> com.avos.avoscloud.AVUser$23:
    com.avos.avoscloud.FollowCallback val$callback -> val$callback
    com.avos.avoscloud.AVUser this$0 -> this$0
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVUser$24 -> com.avos.avoscloud.AVUser$24:
    com.avos.avoscloud.FollowCallback val$callback -> val$callback
    com.avos.avoscloud.AVUser this$0 -> this$0
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVUser$25 -> com.avos.avoscloud.AVUser$25:
    com.avos.avoscloud.FindCallback val$callback -> val$callback
    com.avos.avoscloud.AVUser this$0 -> this$0
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVUser$26 -> com.avos.avoscloud.AVUser$26:
    com.avos.avoscloud.FindCallback val$callback -> val$callback
    com.avos.avoscloud.AVUser this$0 -> this$0
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVUser$27 -> com.avos.avoscloud.AVUser$27:
    com.avos.avoscloud.FollowersAndFolloweesCallback val$callback -> val$callback
    com.avos.avoscloud.AVUser this$0 -> this$0
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVUser$28 -> com.avos.avoscloud.AVUser$28:
    java.lang.Class val$clazz -> val$clazz
    com.avos.avoscloud.LogInCallback val$callback -> val$callback
    com.avos.avoscloud.AVUser$AVThirdPartyUserAuth val$userInfo -> val$userInfo
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVUser$29 -> com.avos.avoscloud.AVUser$29:
    com.avos.avoscloud.AVUser val$user -> val$user
    java.lang.String val$type -> val$type
    com.avos.avoscloud.SaveCallback val$callback -> val$callback
    void done(com.avos.avoscloud.AVException) -> done
com.avos.avoscloud.AVUser$3 -> com.avos.avoscloud.AVUser$3:
    com.avos.avoscloud.AVUser[] val$list -> val$list
    void done(com.avos.avoscloud.AVUser,com.avos.avoscloud.AVException) -> done
    boolean mustRunOnUIThread() -> mustRunOnUIThread
com.avos.avoscloud.AVUser$4 -> com.avos.avoscloud.AVUser$4:
    com.avos.avoscloud.AVUser val$user -> val$user
    com.avos.avoscloud.LogInCallback val$internalCallback -> val$internalCallback
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVUser$5 -> com.avos.avoscloud.AVUser$5:
    com.avos.avoscloud.AVUser[] val$list -> val$list
    void done(com.avos.avoscloud.AVUser,com.avos.avoscloud.AVException) -> done
    boolean mustRunOnUIThread() -> mustRunOnUIThread
com.avos.avoscloud.AVUser$6 -> com.avos.avoscloud.AVUser$6:
    com.avos.avoscloud.AVUser val$user -> val$user
    com.avos.avoscloud.LogInCallback val$internalCallback -> val$internalCallback
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVUser$7 -> com.avos.avoscloud.AVUser$7:
    com.avos.avoscloud.RequestPasswordResetCallback val$internalCallback -> val$internalCallback
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVUser$8 -> com.avos.avoscloud.AVUser$8:
    com.avos.avoscloud.AVException[] val$errors -> val$errors
    com.avos.avoscloud.AVUser this$0 -> this$0
    void done(com.avos.avoscloud.AVException) -> done
com.avos.avoscloud.AVUser$9 -> com.avos.avoscloud.AVUser$9:
    com.avos.avoscloud.UpdatePasswordCallback val$callback -> val$callback
    com.avos.avoscloud.AVUser this$0 -> this$0
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVUser$AVThirdPartyUserAuth -> com.avos.avoscloud.AVUser$AVThirdPartyUserAuth:
    java.lang.String accessToken -> accessToken
    java.lang.String expiredAt -> expiredAt
    java.lang.String snsType -> snsType
    java.lang.String userId -> userId
    java.lang.String SNS_TENCENT_WEIBO -> SNS_TENCENT_WEIBO
    java.lang.String SNS_SINA_WEIBO -> SNS_SINA_WEIBO
    java.lang.String platformUserIdTag(java.lang.String) -> platformUserIdTag
    java.lang.String getAccessToken() -> getAccessToken
    void setAccessToken(java.lang.String) -> setAccessToken
    java.lang.String getUserId() -> getUserId
    void setUserId(java.lang.String) -> setUserId
    java.lang.String getExpireAt() -> getExpireAt
    void setExpireAt(java.lang.String) -> setExpireAt
    java.lang.String getSnsType() -> getSnsType
    void setSnsType(java.lang.String) -> setSnsType
com.avos.avoscloud.AVUtils -> com.avos.avoscloud.AVUtils:
    java.lang.String dateFormat -> dateFormat
    java.lang.String classNameTag -> classNameTag
    java.lang.String typeTag -> typeTag
    java.lang.String objectIdTag -> objectIdTag
    java.util.Map fieldsMap -> fieldsMap
    java.util.regex.Pattern pattern -> pattern
    java.util.regex.Pattern emailPattern -> emailPattern
    java.util.regex.Pattern phoneNumPattern -> phoneNumPattern
    java.util.regex.Pattern verifyCodePattern -> verifyCodePattern
    java.lang.ThreadLocal THREAD_LOCAL_DATE_FORMAT -> THREAD_LOCAL_DATE_FORMAT
    java.util.Random random -> random
    int TYPE_WIFI -> TYPE_WIFI
    int TYPE_MOBILE -> TYPE_MOBILE
    int TYPE_NOT_CONNECTED -> TYPE_NOT_CONNECTED
    java.util.Map createArrayOpMap(java.lang.String,java.lang.String,java.util.Collection) -> createArrayOpMap
    java.lang.reflect.Field[] getAllFiels(java.lang.Class) -> getAllFiels
    boolean checkEmailAddress(java.lang.String) -> checkEmailAddress
    boolean checkMobilePhoneNumber(java.lang.String) -> checkMobilePhoneNumber
    boolean checkMobileVerifyCode(java.lang.String) -> checkMobileVerifyCode
    void checkClassName(java.lang.String) -> checkClassName
    boolean isBlankString(java.lang.String) -> isBlankString
    boolean isBlankContent(java.lang.String) -> isBlankContent
    boolean contains(java.util.Map,java.lang.String) -> contains
    java.util.Map createDeleteOpMap(java.lang.String) -> createDeleteOpMap
    java.util.Map createPointerArrayOpMap(java.lang.String,java.lang.String,java.util.Collection) -> createPointerArrayOpMap
    java.util.Map createStringObjectMap(java.lang.String,java.lang.Object) -> createStringObjectMap
    java.util.Map mapFromPointerObject(com.avos.avoscloud.AVObject) -> mapFromPointerObject
    java.util.Map mapFromUserObjectId(java.lang.String) -> mapFromUserObjectId
    java.util.Map mapFromChildObject(com.avos.avoscloud.AVObject,java.lang.String) -> mapFromChildObject
    boolean isDigitString(java.lang.String) -> isDigitString
    java.util.Date dateFromString(java.lang.String) -> dateFromString
    java.lang.String stringFromDate(java.util.Date) -> stringFromDate
    java.util.Map mapFromDate(java.util.Date) -> mapFromDate
    java.util.Date dateFromMap(java.util.Map) -> dateFromMap
    java.util.Map mapFromGeoPoint(com.avos.avoscloud.AVGeoPoint) -> mapFromGeoPoint
    com.avos.avoscloud.AVGeoPoint geoPointFromMap(java.util.Map) -> geoPointFromMap
    com.avos.avoscloud.AVObject objectFromRelationMap(java.util.Map) -> objectFromRelationMap
    java.util.Map mapFromByteArray(byte[]) -> mapFromByteArray
    byte[] dataFromMap(java.util.Map) -> dataFromMap
    java.lang.String jsonStringFromMapWithNull(java.lang.Object) -> jsonStringFromMapWithNull
    java.lang.String jsonStringFromObjectWithNull(java.lang.Object) -> jsonStringFromObjectWithNull
    java.util.Map mapFromFile(com.avos.avoscloud.AVFile) -> mapFromFile
    com.avos.avoscloud.AVFile fileFromMap(java.util.Map) -> fileFromMap
    com.avos.avoscloud.AVObject parseObjectFromMap(java.util.Map) -> parseObjectFromMap
    java.lang.String restfulServerData(java.util.Map) -> restfulServerData
    boolean hasProperty(java.lang.Class,java.lang.String) -> hasProperty
    boolean checkAndSetValue(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object) -> checkAndSetValue
    void updatePropertyFromMap(com.avos.avoscloud.AVObject,java.lang.String,java.util.Map) -> updatePropertyFromMap
    void updatePropertyFromList(com.avos.avoscloud.AVObject,java.lang.String,java.util.Collection) -> updatePropertyFromList
    void copyPropertiesFromJsonStringToAVObject(java.lang.String,com.avos.avoscloud.AVObject) -> copyPropertiesFromJsonStringToAVObject
    void copyPropertiesFromMapToAVObject(java.util.Map,com.avos.avoscloud.AVObject) -> copyPropertiesFromMapToAVObject
    void copyPropertiesFromMapToObject(java.util.Map,java.lang.Object) -> copyPropertiesFromMapToObject
    java.lang.Class getClass(java.util.Map) -> getClass
    boolean isRelation(java.lang.String) -> isRelation
    boolean isPointer(java.lang.String) -> isPointer
    boolean isGeoPoint(java.lang.String) -> isGeoPoint
    boolean isACL(java.lang.String) -> isACL
    boolean isDate(java.lang.String) -> isDate
    boolean isData(java.lang.String) -> isData
    boolean isFile(java.lang.String) -> isFile
    boolean isFileFromUrulu(java.util.Map) -> isFileFromUrulu
    com.avos.avoscloud.AVObject objectFromClassName(java.lang.String) -> objectFromClassName
    com.avos.avoscloud.AVObject newAVObjectByClassName(java.lang.String) -> newAVObjectByClassName
    java.lang.Object getFromJSON(java.lang.String,java.lang.Class) -> getFromJSON
    java.lang.String toJSON(java.lang.Object) -> toJSON
    java.util.Map getParsedMap(java.util.Map) -> getParsedMap
    java.util.List getParsedList(java.util.Collection) -> getParsedList
    java.lang.Object getParsedObject(java.lang.Object) -> getParsedObject
    java.util.List getObjectFrom(java.util.Collection) -> getObjectFrom
    java.lang.Object getObjectFrom(java.util.Map) -> getObjectFrom
    java.lang.Object getObjectFrom(java.lang.Object) -> getObjectFrom
    java.lang.String md5(java.lang.String) -> md5
    java.lang.String getRandomString(int) -> getRandomString
    java.lang.String getRandomMessageId() -> getRandomMessageId
    int getRandomWatchId() -> getRandomWatchId
    boolean isWifi(android.content.Context) -> isWifi
    boolean isConnected(android.content.Context) -> isConnected
    long getCurrentTimestamp() -> getCurrentTimestamp
    java.lang.String joinCollection(java.util.Collection,java.lang.String) -> joinCollection
    java.lang.String stringFromBytes(byte[]) -> stringFromBytes
    boolean checkPermission(android.content.Context,java.lang.String) -> checkPermission
    boolean isPushServiceAvailable(android.content.Context,java.lang.Class) -> isPushServiceAvailable
    boolean isMainThread() -> isMainThread
    java.lang.String fileMd5(java.lang.String) -> fileMd5
    byte[] readFile(java.lang.String) -> readFile
    byte[] readFile(java.io.File) -> readFile
    java.lang.String computeMD5(byte[]) -> computeMD5
    java.lang.String getJSONString(com.alibaba.fastjson.JSONObject,java.lang.String,java.lang.String) -> getJSONString
    long getJSONInteger(com.alibaba.fastjson.JSONObject,java.lang.String,long) -> getJSONInteger
    int getConnectivityStatus(android.content.Context) -> getConnectivityStatus
    java.lang.String getConnectivityStatusString(android.content.Context) -> getConnectivityStatusString
    java.lang.String getArchiveRequestFileName(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> getArchiveRequestFileName
    int collectionNonNullCount(java.util.Collection) -> collectionNonNullCount
    java.lang.String urlCleanLastSlash(java.lang.String) -> urlCleanLastSlash
    java.lang.String getSessionKey(java.lang.String) -> getSessionKey
    boolean isEmptyList(java.util.List) -> isEmptyList
    void ensureElementsNotNull(java.util.List,java.lang.String) -> ensureElementsNotNull
    boolean compareNumberString(java.lang.String,java.lang.String) -> compareNumberString
    java.lang.String Base64Encode(java.lang.String) -> Base64Encode
    com.loopj.android.http.AsyncHttpClient getDirectlyClientForUse() -> getDirectlyClientForUse
com.avos.avoscloud.AVUtils$1 -> com.avos.avoscloud.AVUtils$1:
    int[] $SwitchMap$com$avos$avoscloud$AVOSCloud$StorageType -> $SwitchMap$com$avos$avoscloud$AVOSCloud$StorageType
com.avos.avoscloud.AnalyticsActivity -> com.avos.avoscloud.AnalyticsActivity:
    com.avos.avoscloud.AVDuration duration -> duration
    java.lang.String activityName -> activityName
    boolean savedToServer -> savedToServer
    boolean isFragment -> isFragment
    void start() -> start
    void stop() -> stop
    void setDurationValue(long) -> setDurationValue
    double getStart() -> getStart
    java.lang.String getActivityName() -> getActivityName
    boolean isStopped() -> isStopped
    long myDuration() -> myDuration
    java.util.Map jsonMap() -> jsonMap
    com.avos.avoscloud.AVDuration getDuration() -> getDuration
    void setDuration(com.avos.avoscloud.AVDuration) -> setDuration
    void setActivityName(java.lang.String) -> setActivityName
    boolean isSavedToServer() -> isSavedToServer
    void setSavedToServer(boolean) -> setSavedToServer
    boolean isFragment() -> isFragment
    void setFragment(boolean) -> setFragment
com.avos.avoscloud.AnalyticsEvent -> com.avos.avoscloud.AnalyticsEvent:
    com.avos.avoscloud.AVDuration duration -> duration
    java.util.Map attributes -> attributes
    java.lang.String eventName -> eventName
    java.lang.String labelName -> labelName
    java.lang.String primaryKey -> primaryKey
    int accumulation -> accumulation
    java.lang.String eventTag -> eventTag
    java.lang.String labelTag -> labelTag
    java.lang.String accTag -> accTag
    java.lang.String primaryKeyTag -> primaryKeyTag
    java.lang.String attributesTag -> attributesTag
    void start() -> start
    void stop() -> stop
    java.lang.String getEventName() -> getEventName
    void setDurationValue(long) -> setDurationValue
    void setAccumulation(int) -> setAccumulation
    void setLabel(java.lang.String) -> setLabel
    void setPrimaryKey(java.lang.String) -> setPrimaryKey
    void addAttributes(java.util.Map) -> addAttributes
    boolean isMatch(java.lang.String,java.lang.String,java.lang.String) -> isMatch
    long myDuration() -> myDuration
    java.util.Map jsonMap() -> jsonMap
    com.avos.avoscloud.AVDuration getDuration() -> getDuration
    void setDuration(com.avos.avoscloud.AVDuration) -> setDuration
    java.util.Map getAttributes() -> getAttributes
    void setAttributes(java.util.Map) -> setAttributes
    java.lang.String getLabelName() -> getLabelName
    void setLabelName(java.lang.String) -> setLabelName
    java.lang.String getPrimaryKey() -> getPrimaryKey
    int getAccumulation() -> getAccumulation
    void setEventName(java.lang.String) -> setEventName
com.avos.avoscloud.AnalyticsImpl -> com.avos.avoscloud.AnalyticsImpl:
    com.avos.avoscloud.AnalyticsImpl instance -> instance
    boolean enableDebugLog -> enableDebugLog
    java.lang.String appChannel -> appChannel
    long batchInterval -> batchInterval
    boolean autoLocation -> autoLocation
    int REQUEST_FOR_SEND -> REQUEST_FOR_SEND
    int REQUEST_END_SEND -> REQUEST_END_SEND
    int REQUEST_INTERVAL_SEND -> REQUEST_INTERVAL_SEND
    java.lang.String PREFERENCE_KEY -> PREFERENCE_KEY
    java.lang.String SESSION_KEY -> SESSION_KEY
    android.os.Handler reportRequestDispatcher -> reportRequestDispatcher
    java.util.Map sessions -> sessions
    long pauseTimeStamp -> pauseTimeStamp
    java.lang.String currentSessionId -> currentSessionId
    long sessionThreshold -> sessionThreshold
    java.util.concurrent.atomic.AtomicInteger messageCount -> messageCount
    int messageCountThreshold -> messageCountThreshold
    java.lang.String TAG -> TAG
    com.avos.avoscloud.AVUncaughtExceptionHandler handler -> handler
    com.avos.avoscloud.AnalyticsOnlineConfig onlineConfig -> onlineConfig
    com.avos.avoscloud.AVOnlineConfigureListener listener -> listener
    java.util.Map customInfo -> customInfo
    java.util.Timer updateOnlineConfigTimer -> updateOnlineConfigTimer
    java.lang.String firstBootTag -> firstBootTag
    java.util.List whiteList -> whiteList
    com.avos.avoscloud.AnalyticsImpl$IntervalCache intervalCache -> intervalCache
    android.os.Handler reportHandler -> reportHandler
    java.lang.Thread archiveThread -> archiveThread
    boolean analysisReportEnableFlag -> analysisReportEnableFlag
    com.avos.avoscloud.AnalyticsImpl getInstance() -> getInstance
    void setAutoLocation(boolean) -> setAutoLocation
    boolean isAutoLocation() -> isAutoLocation
    boolean isEnableStats() -> isEnableStats
    long getSendInterval() -> getSendInterval
    void setAppChannel(java.lang.String) -> setAppChannel
    java.lang.String getAppChannel() -> getAppChannel
    void setEnableDebugLog(boolean) -> setEnableDebugLog
    boolean isEnableDebugLog() -> isEnableDebugLog
    void enableCrashReport(android.content.Context,boolean) -> enableCrashReport
    com.avos.avoscloud.ReportPolicy getReportPolicy(android.content.Context) -> getReportPolicy
    void setReportPolicy(android.content.Context,com.avos.avoscloud.ReportPolicy) -> setReportPolicy
    void notifyOnlineConfigListener(org.json.JSONObject) -> notifyOnlineConfigListener
    com.avos.avoscloud.AnalyticsSession currentSession(boolean) -> currentSession
    void setSessionContinueMillis(long) -> setSessionContinueMillis
    void setSessionDuration(long) -> setSessionDuration
    int getMessageCount() -> getMessageCount
    int incMessageCount() -> incMessageCount
    boolean exceedAndResetMessageCount() -> exceedAndResetMessageCount
    void resetMessageCount() -> resetMessageCount
    void resetMessageCount(int) -> resetMessageCount
    com.avos.avoscloud.AnalyticsSession sessionByName(java.lang.String) -> sessionByName
    com.avos.avoscloud.AnalyticsSession createSession() -> createSession
    void flushLastSession(android.content.Context) -> flushLastSession
    void beginSession() -> beginSession
    void endSession(android.content.Context) -> endSession
    void pauseSession() -> pauseSession
    void addActivity(java.lang.String,long) -> addActivity
    void beginActivity(java.lang.String) -> beginActivity
    void beginFragment(java.lang.String) -> beginFragment
    void beginEvent(android.content.Context,java.lang.String) -> beginEvent
    com.avos.avoscloud.AnalyticsEvent beginEvent(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> beginEvent
    void endEvent(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> endEvent
    void setCustomInfo(java.util.Map) -> setCustomInfo
    java.util.Map getCustomInfo() -> getCustomInfo
    long getSessionTimeoutThreshold() -> getSessionTimeoutThreshold
    boolean shouldRegardAsNewSession() -> shouldRegardAsNewSession
    void endActivity(java.lang.String) -> endActivity
    void endFragment(java.lang.String) -> endFragment
    void dumpJsonMap(android.content.Context) -> dumpJsonMap
    void report(android.content.Context,boolean) -> report
    void debugDump(android.content.Context) -> debugDump
    boolean inDebug(android.content.Context) -> inDebug
    void postRecording(android.content.Context) -> postRecording
    void archiveCurrentSession(android.content.Context) -> archiveCurrentSession
    void sendIntervalRecordingRequest(android.content.Context) -> sendIntervalRecordingRequest
    void sendInstantRecordingRequest() -> sendInstantRecordingRequest
    void batchRecording(android.content.Context) -> batchRecording
    void saveSessionsToServer(android.content.Context) -> saveSessionsToServer
    void clearSessions() -> clearSessions
    void setAVOnlineConfigureListener(com.avos.avoscloud.AVOnlineConfigureListener) -> setAVOnlineConfigureListener
    void updateOnlineConfig(android.content.Context) -> updateOnlineConfig
    void reportFirstBoot(android.content.Context) -> reportFirstBoot
    java.lang.String getConfigParams(java.lang.String,java.lang.String) -> getConfigParams
    void sendAnalysisRequest(java.lang.String,boolean,boolean,com.avos.avoscloud.GenericObjectCallback) -> sendAnalysisRequest
    void setAnalyticsEnabled(boolean) -> setAnalyticsEnabled
    void sendArchivedRequests(boolean) -> sendArchivedRequests
    android.os.Handler access$000(com.avos.avoscloud.AnalyticsImpl) -> access$000
    android.os.Handler access$002(com.avos.avoscloud.AnalyticsImpl,android.os.Handler) -> access$002
    android.os.Handler access$100(com.avos.avoscloud.AnalyticsImpl) -> access$100
    java.lang.String access$200() -> access$200
    com.avos.avoscloud.AnalyticsOnlineConfig access$300(com.avos.avoscloud.AnalyticsImpl) -> access$300
com.avos.avoscloud.AnalyticsImpl$1 -> com.avos.avoscloud.AnalyticsImpl$1:
    boolean hasRequestForSend -> hasRequestForSend
    boolean hasRequestSending -> hasRequestSending
    com.avos.avoscloud.AnalyticsImpl this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
com.avos.avoscloud.AnalyticsImpl$2 -> com.avos.avoscloud.AnalyticsImpl$2:
    com.avos.avoscloud.AnalyticsImpl this$0 -> this$0
    void run() -> run
com.avos.avoscloud.AnalyticsImpl$2$1 -> com.avos.avoscloud.AnalyticsImpl$2$1:
    com.avos.avoscloud.AnalyticsImpl$2 this$1 -> this$1
    void handleMessage(android.os.Message) -> handleMessage
com.avos.avoscloud.AnalyticsImpl$3 -> com.avos.avoscloud.AnalyticsImpl$3:
    com.avos.avoscloud.AnalyticsImpl this$0 -> this$0
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AnalyticsImpl$4 -> com.avos.avoscloud.AnalyticsImpl$4:
    com.avos.avoscloud.AnalyticsImpl this$0 -> this$0
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AnalyticsImpl$5 -> com.avos.avoscloud.AnalyticsImpl$5:
    com.avos.avoscloud.AnalyticsImpl this$0 -> this$0
    void run() -> run
com.avos.avoscloud.AnalyticsImpl$6 -> com.avos.avoscloud.AnalyticsImpl$6:
    int[] $SwitchMap$com$avos$avoscloud$ReportPolicy -> $SwitchMap$com$avos$avoscloud$ReportPolicy
com.avos.avoscloud.AnalyticsImpl$IntervalCache -> com.avos.avoscloud.AnalyticsImpl$IntervalCache:
    boolean wifiConnection -> wifiConnection
    long timeSlip -> timeSlip
    long sendIntervalInWifi -> sendIntervalInWifi
    long sendIntervalInMobile -> sendIntervalInMobile
    long getTimeInterval() -> getTimeInterval
com.avos.avoscloud.AnalyticsOnlineConfig -> com.avos.avoscloud.AnalyticsOnlineConfig:
    com.avos.avoscloud.ReportPolicy reportPolicy -> reportPolicy
    java.util.Map config -> config
    com.avos.avoscloud.AnalyticsImpl parent -> parent
    boolean enableStats -> enableStats
    void update(android.content.Context) -> update
    void update(android.content.Context,boolean) -> update
    boolean isEnableStats() -> isEnableStats
    void setEnableStats(boolean) -> setEnableStats
    void setReportPolicy(com.avos.avoscloud.ReportPolicy) -> setReportPolicy
    com.avos.avoscloud.ReportPolicy getReportPolicy() -> getReportPolicy
    java.lang.String getConfigParams(java.lang.String) -> getConfigParams
    com.avos.avoscloud.AnalyticsImpl access$000(com.avos.avoscloud.AnalyticsOnlineConfig) -> access$000
    boolean access$102(com.avos.avoscloud.AnalyticsOnlineConfig,boolean) -> access$102
    com.avos.avoscloud.ReportPolicy access$200(com.avos.avoscloud.AnalyticsOnlineConfig) -> access$200
    com.avos.avoscloud.ReportPolicy access$202(com.avos.avoscloud.AnalyticsOnlineConfig,com.avos.avoscloud.ReportPolicy) -> access$202
com.avos.avoscloud.AnalyticsOnlineConfig$1 -> com.avos.avoscloud.AnalyticsOnlineConfig$1:
    boolean val$updatePolicy -> val$updatePolicy
    android.content.Context val$context -> val$context
    com.avos.avoscloud.AnalyticsOnlineConfig this$0 -> this$0
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AnalyticsSession -> com.avos.avoscloud.AnalyticsSession:
    java.util.List activities -> activities
    java.util.List events -> events
    java.lang.String sessionId -> sessionId
    com.avos.avoscloud.AVDuration duration -> duration
    java.lang.String sessionIdTag -> sessionIdTag
    java.lang.String TAG -> TAG
    void beginSession() -> beginSession
    void endSession() -> endSession
    boolean isSessionFinished() -> isSessionFinished
    void pauseSession() -> pauseSession
    long getSessionStart() -> getSessionStart
    java.lang.String getSessionId() -> getSessionId
    void setSessionDuration(long) -> setSessionDuration
    com.avos.avoscloud.AnalyticsActivity activityByName(java.lang.String,boolean) -> activityByName
    com.avos.avoscloud.AnalyticsEvent eventByName(java.lang.String,java.lang.String,java.lang.String,boolean) -> eventByName
    void addActivity(java.lang.String,long) -> addActivity
    void beginActivity(java.lang.String) -> beginActivity
    void beginFragment(java.lang.String) -> beginFragment
    com.avos.avoscloud.AnalyticsEvent beginEvent(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> beginEvent
    void endEvent(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> endEvent
    void endActivity(java.lang.String) -> endActivity
    void endFragment(java.lang.String) -> endFragment
    java.util.Map launchMap() -> launchMap
    long myDuration(long,long) -> myDuration
    long maxSessionDuration() -> maxSessionDuration
    java.util.Map activitiesMap(boolean) -> activitiesMap
    java.util.List eventArray(boolean) -> eventArray
    boolean hasNewData() -> hasNewData
    java.util.Map jsonMap(android.content.Context,java.util.Map,boolean) -> jsonMap
    java.util.Map firstBootMap(android.content.Context,java.util.Map) -> firstBootMap
    java.util.List getActivities() -> getActivities
    void setActivities(java.util.List) -> setActivities
    java.util.List getEvents() -> getEvents
    void setEvents(java.util.List) -> setEvents
    com.avos.avoscloud.AVDuration getDuration() -> getDuration
    void setDuration(com.avos.avoscloud.AVDuration) -> setDuration
    void setSessionId(java.lang.String) -> setSessionId
com.avos.avoscloud.AnalyticsUtils -> com.avos.avoscloud.AnalyticsUtils:
    java.lang.String TAG -> TAG
    java.util.List CELLPHONEBLACKLIST -> CELLPHONEBLACKLIST
    java.util.Map getNetworkInfo(android.content.Context) -> getNetworkInfo
    java.lang.String cleanNetworkTypeName(java.lang.String) -> cleanNetworkTypeName
    java.util.Map deviceInfo(android.content.Context) -> deviceInfo
    long getAvailableInternalMemorySize() -> getAvailableInternalMemorySize
    long getTotalInternalMemorySize() -> getTotalInternalMemorySize
    java.util.Map getDeviceInfo(android.content.Context) -> getDeviceInfo
    java.lang.String collectMemInfo() -> collectMemInfo
    java.lang.String getCPUInfo() -> getCPUInfo
    java.lang.String getLocalIpAddress() -> getLocalIpAddress
    java.lang.String getApplicationFilePath(android.content.Context) -> getApplicationFilePath
    long getCurrentTimestamp() -> getCurrentTimestamp
    java.lang.String getRandomString(int) -> getRandomString
    java.lang.String uniqueId() -> uniqueId
    boolean isStringEqual(java.lang.String,java.lang.String) -> isStringEqual
    boolean withinInBlackList() -> withinInBlackList
com.avos.avoscloud.ArchiveRequestTaskController -> com.avos.avoscloud.ArchiveRequestTaskController:
    java.util.concurrent.ScheduledExecutorService scheduledExecutorService -> scheduledExecutorService
    java.util.concurrent.ScheduledFuture scheduledFuture -> scheduledFuture
    java.util.concurrent.locks.Lock lock -> lock
    long TIME_DELAY_FOR_ARCHIVEREQUEST -> TIME_DELAY_FOR_ARCHIVEREQUEST
    java.lang.Runnable archiveRequestTask -> archiveRequestTask
    void schedule() -> schedule
    java.util.concurrent.locks.Lock access$000() -> access$000
com.avos.avoscloud.ArchiveRequestTaskController$1 -> com.avos.avoscloud.ArchiveRequestTaskController$1:
    void run() -> run
com.avos.avoscloud.BuildConfig -> com.avos.avoscloud.BuildConfig:
    boolean DEBUG -> DEBUG
com.avos.avoscloud.CloudQueryCallback -> com.avos.avoscloud.CloudQueryCallback:
    void done(com.avos.avoscloud.AVCloudQueryResult,com.avos.avoscloud.AVException) -> done
    void internalDone0(com.avos.avoscloud.AVCloudQueryResult,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone0(java.lang.Object,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone(com.avos.avoscloud.AVException) -> internalDone
com.avos.avoscloud.CountCallback -> com.avos.avoscloud.CountCallback:
    void done(int,com.avos.avoscloud.AVException) -> done
    void internalDone0(java.lang.Integer,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone0(java.lang.Object,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone(com.avos.avoscloud.AVException) -> internalDone
com.avos.avoscloud.DataFetchCallbackWithFailureRetry -> com.avos.avoscloud.DataFetchCallbackWithFailureRetry:
    com.avos.avoscloud.GenericObjectCallback callback -> callback
    boolean retry -> retry
    java.lang.String relativePath -> relativePath
    com.loopj.android.http.RequestParams parameters -> parameters
    boolean sync -> sync
    java.util.Map inputHeader -> inputHeader
    com.avos.avoscloud.AVQuery$CachePolicy policy -> policy
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
    boolean isLastModifyCacheMissingError(java.lang.String) -> isLastModifyCacheMissingError
com.avos.avoscloud.DeleteCallback -> com.avos.avoscloud.DeleteCallback:
    void done(com.avos.avoscloud.AVException) -> done
    void internalDone0(java.lang.Void,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone0(java.lang.Object,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone(com.avos.avoscloud.AVException) -> internalDone
com.avos.avoscloud.FindCallback -> com.avos.avoscloud.FindCallback:
    void done(java.util.List,com.avos.avoscloud.AVException) -> done
    void internalDone0(java.util.List,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone0(java.lang.Object,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone(com.avos.avoscloud.AVException) -> internalDone
com.avos.avoscloud.FollowCallback -> com.avos.avoscloud.FollowCallback:
    void done(com.avos.avoscloud.AVObject,com.avos.avoscloud.AVException) -> done
    void internalDone0(com.avos.avoscloud.AVObject,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone0(java.lang.Object,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone(com.avos.avoscloud.AVException) -> internalDone
com.avos.avoscloud.FollowersAndFolloweesCallback -> com.avos.avoscloud.FollowersAndFolloweesCallback:
    void done(java.util.Map,com.avos.avoscloud.AVException) -> done
    void internalDone0(java.util.Map,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone0(java.lang.Object,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone(com.avos.avoscloud.AVException) -> internalDone
com.avos.avoscloud.FunctionCallback -> com.avos.avoscloud.FunctionCallback:
    void done(java.lang.Object,com.avos.avoscloud.AVException) -> done
    void internalDone0(java.lang.Object,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone(com.avos.avoscloud.AVException) -> internalDone
    void internalDone(java.lang.Object,com.avos.avoscloud.AVException) -> internalDone
com.avos.avoscloud.GenericObjectCallback -> com.avos.avoscloud.GenericObjectCallback:
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
    void onGroupRequestFinished(int,int,com.avos.avoscloud.AVObject) -> onGroupRequestFinished
com.avos.avoscloud.GetCallback -> com.avos.avoscloud.GetCallback:
    void done(com.avos.avoscloud.AVObject,com.avos.avoscloud.AVException) -> done
    void internalDone0(com.avos.avoscloud.AVObject,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone0(java.lang.Object,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone(com.avos.avoscloud.AVException) -> internalDone
com.avos.avoscloud.GetDataCallback -> com.avos.avoscloud.GetDataCallback:
    void done(byte[],com.avos.avoscloud.AVException) -> done
    void internalDone0(byte[],com.avos.avoscloud.AVException) -> internalDone0
    void internalDone0(java.lang.Object,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone(com.avos.avoscloud.AVException) -> internalDone
com.avos.avoscloud.GetFileCallback -> com.avos.avoscloud.GetFileCallback:
    void done(com.avos.avoscloud.AVFile,com.avos.avoscloud.AVException) -> done
    void internalDone0(com.avos.avoscloud.AVFile,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone0(java.lang.Object,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone(com.avos.avoscloud.AVException) -> internalDone
com.avos.avoscloud.GetHttpResponseHandler -> com.avos.avoscloud.GetHttpResponseHandler:
    com.avos.avoscloud.GenericObjectCallback callback -> callback
    java.lang.String absoluteURLString -> absoluteURLString
    com.avos.avoscloud.AVQuery$CachePolicy policy -> policy
    void setCallback(com.avos.avoscloud.GenericObjectCallback) -> setCallback
    com.avos.avoscloud.GenericObjectCallback getCallback() -> getCallback
    boolean isNotModifiedStatus(int) -> isNotModifiedStatus
    boolean isUnAuthorize(int) -> isUnAuthorize
    void tryLastModifyCache(java.lang.String) -> tryLastModifyCache
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    java.lang.String access$000(com.avos.avoscloud.GetHttpResponseHandler) -> access$000
com.avos.avoscloud.GetHttpResponseHandler$1 -> com.avos.avoscloud.GetHttpResponseHandler$1:
    com.avos.avoscloud.GetHttpResponseHandler this$0 -> this$0
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.HttpClientUploader -> com.avos.avoscloud.HttpClientUploader:
    org.apache.http.impl.client.DefaultHttpClient httpClient -> httpClient
    java.util.concurrent.atomic.AtomicReference httpPostRef -> httpPostRef
    java.util.concurrent.atomic.AtomicInteger counter -> counter
    org.apache.http.impl.client.DefaultHttpClient getHttpClient() -> getHttpClient
    void interruptImmediately() -> interruptImmediately
    void closeExpiredConnections() -> closeExpiredConnections
    void publishProgress(int) -> publishProgress
    boolean isCancelled() -> isCancelled
    boolean cancel(boolean) -> cancel
    void execute() -> execute
com.avos.avoscloud.InboxStatusFindCallback -> com.avos.avoscloud.InboxStatusFindCallback:
    boolean end -> end
    boolean isEnd() -> isEnd
    void setEnd(boolean) -> setEnd
com.avos.avoscloud.JSONHelper -> com.avos.avoscloud.JSONHelper:
    java.lang.Object toJSON(java.lang.Object) -> toJSON
    boolean isEmptyObject(org.json.JSONObject) -> isEmptyObject
    java.util.Map getMap(org.json.JSONObject,java.lang.String) -> getMap
    java.util.Map toMap(org.json.JSONObject) -> toMap
    java.util.Map mapFromString(java.lang.String) -> mapFromString
    java.util.List toList(org.json.JSONArray) -> toList
    java.lang.Object fromJson(java.lang.Object) -> fromJson
    java.lang.String toJsonString(java.util.Map) -> toJsonString
com.avos.avoscloud.LogInCallback -> com.avos.avoscloud.LogInCallback:
    void done(com.avos.avoscloud.AVUser,com.avos.avoscloud.AVException) -> done
    void internalDone0(com.avos.avoscloud.AVUser,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone0(java.lang.Object,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone(com.avos.avoscloud.AVException) -> internalDone
com.avos.avoscloud.LogUtil -> com.avos.avoscloud.LogUtil:
com.avos.avoscloud.LogUtil$avlog -> com.avos.avoscloud.LogUtil$avlog:
    boolean showAVLog -> showAVLog
    void i(java.lang.String) -> i
    void i(java.lang.Object) -> i
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
com.avos.avoscloud.LogUtil$log -> com.avos.avoscloud.LogUtil$log:
    boolean show -> show
    java.lang.String Tag -> Tag
    java.lang.String Cname -> Cname
    java.lang.String Mname -> Mname
    boolean shouldShow(int) -> shouldShow
    void getTrace() -> getTrace
    void v(java.lang.String) -> v
    void d(java.lang.String) -> d
    void d(java.util.Map) -> d
    void d(int) -> d
    void d(float) -> d
    void d(double) -> d
    void d() -> d
    void d(java.lang.String,java.lang.String) -> d
    void i(java.lang.String) -> i
    void w(java.lang.String) -> w
    void e(java.lang.String) -> e
    void e() -> e
    void e(java.lang.String,java.lang.Exception) -> e
    void e(java.lang.String,java.lang.String) -> e
    void e(java.lang.String,java.lang.String,java.lang.Exception) -> e
com.avos.avoscloud.PaasClient -> com.avos.avoscloud.PaasClient:
    org.apache.http.client.CookieStore COOKIE_STORE -> COOKIE_STORE
    java.lang.String baseUrl -> baseUrl
    java.lang.String apiVersion -> apiVersion
    java.lang.String applicationIdField -> applicationIdField
    java.lang.String apiKeyField -> apiKeyField
    com.avos.avoscloud.AVOSSSLSocketFactory socketFactory -> socketFactory
    java.lang.String sessionTokenField -> sessionTokenField
    boolean isUrulu -> isUrulu
    boolean isCN -> isCN
    boolean isProduction -> isProduction
    java.lang.String defaultEncoding -> defaultEncoding
    java.lang.String defaultContentType -> defaultContentType
    java.lang.String DEFAULT_FAIL_STRING -> DEFAULT_FAIL_STRING
    java.lang.String sdkVersion -> sdkVersion
    java.lang.String userAgent -> userAgent
    com.avos.avoscloud.AVUser currentUser -> currentUser
    com.avos.avoscloud.AVACL defaultACL -> defaultACL
    com.loopj.android.http.SyncHttpClient syncHttpClient -> syncHttpClient
    com.loopj.android.http.AsyncHttpClient asyncHttpClient -> asyncHttpClient
    boolean lastModifyEnabled -> lastModifyEnabled
    java.util.Map serviceHostMap -> serviceHostMap
    java.util.HashMap serviceClientMap -> serviceClientMap
    java.util.Map internalObjectsForEventuallySave -> internalObjectsForEventuallySave
    java.util.Map lastModify -> lastModify
    java.util.Comparator fileModifiedDateComparator -> fileModifiedDateComparator
    void setProduction(boolean) -> setProduction
    boolean isAVOSCloud() -> isAVOSCloud
    com.avos.avoscloud.PaasClient sharedInstance(com.avos.avoscloud.AVOSServices) -> sharedInstance
    com.avos.avoscloud.PaasClient storageInstance() -> storageInstance
    com.avos.avoscloud.PaasClient cloudInstance() -> cloudInstance
    com.avos.avoscloud.PaasClient statistisInstance() -> statistisInstance
    com.avos.avoscloud.AVACL getDefaultACL() -> getDefaultACL
    void setDefaultACL(com.avos.avoscloud.AVACL) -> setDefaultACL
    com.avos.avoscloud.AVUser getCurrentUser() -> getCurrentUser
    java.util.Map userHeaderMap() -> userHeaderMap
    void setCurrentUser(com.avos.avoscloud.AVUser) -> setCurrentUser
    java.lang.String signRequest() -> signRequest
    void updateHeaders(com.loopj.android.http.AsyncHttpClient) -> updateHeaders
    com.avos.avoscloud.AVOSSSLSocketFactory sslSocketFactory() -> sslSocketFactory
    void configHttpClient(com.loopj.android.http.AsyncHttpClient) -> configHttpClient
    com.loopj.android.http.AsyncHttpClient clientInstance(boolean) -> clientInstance
    void useUruluServer() -> useUruluServer
    void useOfficalParseServer() -> useOfficalParseServer
    void useAVCloudUS() -> useAVCloudUS
    void switchPushRouter(java.lang.String) -> switchPushRouter
    void useAVCloudCN() -> useAVCloudCN
    void useLocalStg() -> useLocalStg
    java.lang.String buildUrl(java.lang.String) -> buildUrl
    java.lang.String batchUrl() -> batchUrl
    java.lang.String batchSaveRelativeUrl() -> batchSaveRelativeUrl
    com.loopj.android.http.AsyncHttpResponseHandler createGetHandler(com.avos.avoscloud.GenericObjectCallback,com.avos.avoscloud.AVQuery$CachePolicy,java.lang.String) -> createGetHandler
    com.loopj.android.http.AsyncHttpResponseHandler createPostHandler(com.avos.avoscloud.GenericObjectCallback) -> createPostHandler
    java.lang.String getApiVersion() -> getApiVersion
    void setBaseUrl(java.lang.String) -> setBaseUrl
    java.lang.String getBaseUrl() -> getBaseUrl
    void setServiceHost(com.avos.avoscloud.AVOSServices,java.lang.String) -> setServiceHost
    java.lang.String getObject(java.lang.String,com.loopj.android.http.RequestParams,boolean,java.util.Map,com.avos.avoscloud.GenericObjectCallback,com.avos.avoscloud.AVQuery$CachePolicy,long) -> getObject
    java.lang.String generateQueryPath(java.lang.String,com.loopj.android.http.RequestParams) -> generateQueryPath
    void getObject(java.lang.String,com.loopj.android.http.RequestParams,boolean,java.util.Map,com.avos.avoscloud.GenericObjectCallback,com.avos.avoscloud.AVQuery$CachePolicy) -> getObject
    void getObject(java.lang.String,com.loopj.android.http.RequestParams,boolean,java.util.Map,com.avos.avoscloud.GenericObjectCallback,com.avos.avoscloud.AVQuery$CachePolicy,boolean) -> getObject
    void getObject(java.lang.String,com.loopj.android.http.RequestParams,boolean,java.util.Map,com.avos.avoscloud.GenericObjectCallback) -> getObject
    void putObject(java.lang.String,java.lang.String,boolean,java.util.Map,com.avos.avoscloud.GenericObjectCallback,java.lang.String,java.lang.String) -> putObject
    void addHeader(com.loopj.android.http.AsyncHttpClient,java.util.Map) -> addHeader
    void putObject(java.lang.String,java.lang.String,boolean,boolean,java.util.Map,com.avos.avoscloud.GenericObjectCallback,java.lang.String,java.lang.String) -> putObject
    void processException(java.lang.Exception,com.avos.avoscloud.GenericObjectCallback) -> processException
    java.util.Map batchItemMap(java.lang.String,java.lang.String,java.lang.Object,java.util.Map) -> batchItemMap
    java.util.Map batchItemMap(java.lang.String,java.lang.String,java.lang.Object) -> batchItemMap
    java.util.List assembleBatchOpsList(java.util.List,java.lang.String) -> assembleBatchOpsList
    java.util.Map batchRequest(java.util.List) -> batchRequest
    void postBatchObject(java.util.List,boolean,java.util.Map,com.avos.avoscloud.GenericObjectCallback) -> postBatchObject
    void postBatchSave(java.util.List,boolean,boolean,java.util.Map,com.avos.avoscloud.GenericObjectCallback,java.lang.String,java.lang.String) -> postBatchSave
    void postObject(java.lang.String,java.lang.String,boolean,boolean,com.avos.avoscloud.GenericObjectCallback,java.lang.String,java.lang.String) -> postObject
    void postObject(java.lang.String,java.lang.String,boolean,com.avos.avoscloud.GenericObjectCallback) -> postObject
    void deleteObject(java.lang.String,boolean,boolean,com.avos.avoscloud.GenericObjectCallback,java.lang.String,java.lang.String) -> deleteObject
    void deleteObject(java.lang.String,boolean,com.avos.avoscloud.GenericObjectCallback,java.lang.String,java.lang.String) -> deleteObject
    java.io.File archiveRequest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> archiveRequest
    void handleArchivedRequest(java.io.File,boolean) -> handleArchivedRequest
    void handleArchivedRequest(java.io.File,boolean,com.avos.avoscloud.GenericObjectCallback) -> handleArchivedRequest
    void handleAllArchivedRequest() -> handleAllArchivedRequest
    void handleAllArchivedRequest(boolean) -> handleAllArchivedRequest
    void dumpHttpGetRequest(java.lang.String,com.loopj.android.http.RequestParams) -> dumpHttpGetRequest
    java.lang.String getDebugClientKey() -> getDebugClientKey
    java.lang.String headerString(java.util.Map) -> headerString
    void dumpHttpPutRequest(java.util.Map,java.lang.String,java.lang.String) -> dumpHttpPutRequest
    void dumpHttpPostRequest(java.util.Map,java.lang.String,java.lang.String) -> dumpHttpPostRequest
    void dumpHttpDeleteRequest(java.util.Map,java.lang.String,java.lang.String) -> dumpHttpDeleteRequest
    java.lang.String updateHeaderForPath(java.lang.String,com.loopj.android.http.RequestParams,java.util.Map) -> updateHeaderForPath
    java.lang.String getLastModify(java.lang.String) -> getLastModify
    boolean isLastModifyEnabled() -> isLastModifyEnabled
    void setLastModifyEnabled(boolean) -> setLastModifyEnabled
    void clearLastModifyCache() -> clearLastModifyCache
    java.lang.String lastModifyFromHeaders(org.apache.http.Header[]) -> lastModifyFromHeaders
    boolean isJSONResponse(org.apache.http.Header[]) -> isJSONResponse
    boolean updateLastModify(java.lang.String,java.lang.String) -> updateLastModify
    void removeLastModifyForUrl(java.lang.String) -> removeLastModifyForUrl
    void registerEventuallyObject(com.avos.avoscloud.AVObject) -> registerEventuallyObject
    void unregisterEvtuallyObject(com.avos.avoscloud.AVObject) -> unregisterEvtuallyObject
com.avos.avoscloud.PaasClient$1 -> com.avos.avoscloud.PaasClient$1:
    com.avos.avoscloud.PaasClient this$0 -> this$0
    java.lang.String onRequestFailed(java.lang.Throwable,java.lang.String) -> onRequestFailed
com.avos.avoscloud.PaasClient$2 -> com.avos.avoscloud.PaasClient$2:
    com.avos.avoscloud.GenericObjectCallback val$callback -> val$callback
    java.lang.String val$relativePath -> val$relativePath
    com.loopj.android.http.RequestParams val$parameters -> val$parameters
    boolean val$sync -> val$sync
    java.util.Map val$header -> val$header
    com.avos.avoscloud.AVQuery$CachePolicy val$policy -> val$policy
    com.avos.avoscloud.PaasClient this$0 -> this$0
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.PaasClient$3 -> com.avos.avoscloud.PaasClient$3:
    com.avos.avoscloud.GenericObjectCallback val$callback -> val$callback
    java.lang.String val$absolutURLString -> val$absolutURLString
    long val$maxAgeInMilliseconds -> val$maxAgeInMilliseconds
    java.lang.String val$lastModify -> val$lastModify
    com.avos.avoscloud.PaasClient this$0 -> this$0
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.PaasClient$4 -> com.avos.avoscloud.PaasClient$4:
    com.avos.avoscloud.GenericObjectCallback val$callback -> val$callback
    java.lang.String val$relativePath -> val$relativePath
    com.loopj.android.http.RequestParams val$parameters -> val$parameters
    boolean val$sync -> val$sync
    java.util.Map val$header -> val$header
    com.avos.avoscloud.AVQuery$CachePolicy val$policy -> val$policy
    com.avos.avoscloud.PaasClient this$0 -> this$0
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.PaasClient$5 -> com.avos.avoscloud.PaasClient$5:
    com.avos.avoscloud.GenericObjectCallback val$callback -> val$callback
    java.io.File val$archivedFile -> val$archivedFile
    com.avos.avoscloud.PaasClient this$0 -> this$0
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.PaasClient$6 -> com.avos.avoscloud.PaasClient$6:
    int compare(java.io.File,java.io.File) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.avos.avoscloud.PaasClient$7 -> com.avos.avoscloud.PaasClient$7:
    int[] $SwitchMap$com$avos$avoscloud$AVQuery$CachePolicy -> $SwitchMap$com$avos$avoscloud$AVQuery$CachePolicy
com.avos.avoscloud.PaasClient$ForgotCookieStore -> com.avos.avoscloud.PaasClient$ForgotCookieStore:
    java.util.List getCookies() -> getCookies
    boolean clearExpired(java.util.Date) -> clearExpired
    void clear() -> clear
    void addCookie(org.apache.http.cookie.Cookie) -> addCookie
com.avos.avoscloud.PostHttpResponseHandler -> com.avos.avoscloud.PostHttpResponseHandler:
    com.avos.avoscloud.GenericObjectCallback callback -> callback
    void setCallback(com.avos.avoscloud.GenericObjectCallback) -> setCallback
    com.avos.avoscloud.GenericObjectCallback getCallback() -> getCallback
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
com.avos.avoscloud.ProgressCallback -> com.avos.avoscloud.ProgressCallback:
    void done(java.lang.Integer) -> done
    void internalDone0(java.lang.Integer,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone0(java.lang.Object,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone(com.avos.avoscloud.AVException) -> internalDone
com.avos.avoscloud.QiniuUploader -> com.avos.avoscloud.QiniuUploader:
    java.lang.String bucket -> bucket
    java.lang.String token -> token
    java.lang.String key -> key
    java.lang.String hash -> hash
    java.lang.String objectId -> objectId
    java.lang.String url -> url
    java.lang.String[] uploadFileCtx -> uploadFileCtx
    int blockCount -> blockCount
    java.lang.String QINIU_HOST -> QINIU_HOST
    java.lang.String QINIU_CREATE_BLOCK_EP -> QINIU_CREATE_BLOCK_EP
    java.lang.String QINIU_BRICK_UPLOAD_EP -> QINIU_BRICK_UPLOAD_EP
    java.lang.String QINIU_MKFILE_EP -> QINIU_MKFILE_EP
    int CHUNK_SIZE -> CHUNK_SIZE
    int BLOCK_SIZE -> BLOCK_SIZE
    int DEFAULT_RETRY_TIMES -> DEFAULT_RETRY_TIMES
    int PROGRESS_GET_TOKEN -> PROGRESS_GET_TOKEN
    int PROGRESS_UPLOAD_FILE -> PROGRESS_UPLOAD_FILE
    int PROGRESS_COMPLETE -> PROGRESS_COMPLETE
    com.avos.avoscloud.AVException doWork() -> doWork
    void parseFileKey() -> parseFileKey
    org.apache.http.HttpResponse executeRequest(org.apache.http.client.methods.HttpPost) -> executeRequest
    com.avos.avoscloud.AVException uploadWithBlocks() -> uploadWithBlocks
    com.avos.avoscloud.QiniuUploader$QiniuBlockResponseData createBlockInQiniu(int,int,int,byte[]) -> createBlockInQiniu
    com.avos.avoscloud.QiniuUploader$QiniuBlockResponseData putFileBlocksToQiniu(int,byte[],com.avos.avoscloud.QiniuUploader$QiniuBlockResponseData,int) -> putFileBlocksToQiniu
    com.avos.avoscloud.QiniuUploader$QiniuMKFileResponseData makeFile(int,java.lang.String,int) -> makeFile
    java.lang.Object parseQiniuResponse(org.apache.http.HttpResponse,java.lang.Class) -> parseQiniuResponse
    com.avos.avoscloud.AVException uploadDirectly(int) -> uploadDirectly
    void destroyFileObject() -> destroyFileObject
    com.avos.avoscloud.AVException handleGetBucketResponse(java.lang.String,com.avos.avoscloud.AVException) -> handleGetBucketResponse
    java.lang.String getGetBucketParameters() -> getGetBucketParameters
    java.lang.String getUploadPath() -> getUploadPath
    com.avos.avoscloud.AVException fetchUploadBucket() -> fetchUploadBucket
    com.avos.avoscloud.AVException access$000(com.avos.avoscloud.QiniuUploader,java.lang.String,com.avos.avoscloud.AVException) -> access$000
com.avos.avoscloud.QiniuUploader$1 -> com.avos.avoscloud.QiniuUploader$1:
    int val$nextChunkSize -> val$nextChunkSize
    byte[] val$data -> val$data
    int val$blockOffset -> val$blockOffset
    com.avos.avoscloud.QiniuUploader this$0 -> this$0
    void writeTo(java.io.OutputStream) -> writeTo
    boolean isStreaming() -> isStreaming
    boolean isRepeatable() -> isRepeatable
    long getContentLength() -> getContentLength
    java.io.InputStream getContent() -> getContent
com.avos.avoscloud.QiniuUploader$2 -> com.avos.avoscloud.QiniuUploader$2:
    int val$nextChunkSize -> val$nextChunkSize
    byte[] val$data -> val$data
    int val$blockOffset -> val$blockOffset
    com.avos.avoscloud.QiniuUploader$QiniuBlockResponseData val$chunkData -> val$chunkData
    com.avos.avoscloud.QiniuUploader this$0 -> this$0
    void writeTo(java.io.OutputStream) -> writeTo
    boolean isStreaming() -> isStreaming
    boolean isRepeatable() -> isRepeatable
    long getContentLength() -> getContentLength
    java.io.InputStream getContent() -> getContent
com.avos.avoscloud.QiniuUploader$3 -> com.avos.avoscloud.QiniuUploader$3:
    com.avos.avoscloud.QiniuUploader this$0 -> this$0
    void transferred(long) -> transferred
com.avos.avoscloud.QiniuUploader$4 -> com.avos.avoscloud.QiniuUploader$4:
    com.avos.avoscloud.AVException[] val$exceptionWhenGetBucket -> val$exceptionWhenGetBucket
    com.avos.avoscloud.QiniuUploader this$0 -> this$0
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.QiniuUploader$QiniuBlockResponseData -> com.avos.avoscloud.QiniuUploader$QiniuBlockResponseData:
    java.lang.String ctx -> ctx
    long crc32 -> crc32
    int offset -> offset
    java.lang.String host -> host
    java.lang.String checksum -> checksum
com.avos.avoscloud.QiniuUploader$QiniuMKFileResponseData -> com.avos.avoscloud.QiniuUploader$QiniuMKFileResponseData:
    java.lang.String key -> key
    java.lang.String hash -> hash
com.avos.avoscloud.R -> com.avos.avoscloud.R:
com.avos.avoscloud.R$attr -> com.avos.avoscloud.R$attr:
com.avos.avoscloud.R$raw -> com.avos.avoscloud.R$raw:
    int avoscloud_us_ssl -> avoscloud_us_ssl
com.avos.avoscloud.RefreshCallback -> com.avos.avoscloud.RefreshCallback:
    void done(com.avos.avoscloud.AVObject,com.avos.avoscloud.AVException) -> done
    void internalDone0(com.avos.avoscloud.AVObject,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone0(java.lang.Object,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone(com.avos.avoscloud.AVException) -> internalDone
com.avos.avoscloud.RelationPropertyFilter -> com.avos.avoscloud.RelationPropertyFilter:
    java.lang.Object process(java.lang.Object,java.lang.String,java.lang.Object) -> process
com.avos.avoscloud.ReportPolicy -> com.avos.avoscloud.ReportPolicy:
    com.avos.avoscloud.ReportPolicy REALTIME -> REALTIME
    com.avos.avoscloud.ReportPolicy BATCH -> BATCH
    com.avos.avoscloud.ReportPolicy SENDDAILY -> SENDDAILY
    com.avos.avoscloud.ReportPolicy SENDWIFIONLY -> SENDWIFIONLY
    com.avos.avoscloud.ReportPolicy SEND_INTERVAL -> SEND_INTERVAL
    com.avos.avoscloud.ReportPolicy SEND_ON_EXIT -> SEND_ON_EXIT
    int value -> value
    com.avos.avoscloud.ReportPolicy[] $VALUES -> $VALUES
    com.avos.avoscloud.ReportPolicy[] values() -> values
    com.avos.avoscloud.ReportPolicy valueOf(java.lang.String) -> valueOf
    com.avos.avoscloud.ReportPolicy valueOf(int) -> valueOf
    int value() -> value
com.avos.avoscloud.RequestEmailVerifyCallback -> com.avos.avoscloud.RequestEmailVerifyCallback:
    void done(com.avos.avoscloud.AVException) -> done
    void internalDone0(java.lang.Void,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone0(java.lang.Object,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone(com.avos.avoscloud.AVException) -> internalDone
com.avos.avoscloud.RequestMobileCodeCallback -> com.avos.avoscloud.RequestMobileCodeCallback:
    void done(com.avos.avoscloud.AVException) -> done
    void internalDone0(java.lang.Void,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone0(java.lang.Object,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone(com.avos.avoscloud.AVException) -> internalDone
com.avos.avoscloud.RequestPasswordResetCallback -> com.avos.avoscloud.RequestPasswordResetCallback:
    void done(com.avos.avoscloud.AVException) -> done
    void internalDone0(java.lang.Void,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone0(java.lang.Object,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone(com.avos.avoscloud.AVException) -> internalDone
com.avos.avoscloud.S3Uploader -> com.avos.avoscloud.S3Uploader:
    java.lang.String access -> access
    java.lang.String secret -> secret
    java.lang.String objectId -> objectId
    java.lang.String url -> url
    java.lang.String uuid -> uuid
    java.lang.String bucket -> bucket
    java.lang.String S3BasePath -> S3BasePath
    com.avos.avoscloud.AVException doWork() -> doWork
    com.avos.avoscloud.AVException handleGetKeyResponse(java.lang.String) -> handleGetKeyResponse
    com.avos.avoscloud.AVException handlePostResponse(java.lang.String) -> handlePostResponse
    java.lang.String getParametersForUrulu() -> getParametersForUrulu
    java.lang.String getS3Link(java.lang.String) -> getS3Link
    java.lang.String md5WithHmac(java.lang.String) -> md5WithHmac
    java.lang.String authorization(java.lang.String,java.lang.String,java.lang.String) -> authorization
    java.lang.String signature(java.lang.String,java.lang.String,java.lang.String) -> signature
    java.lang.String RFC822FormatStringFromDate(java.util.Date) -> RFC822FormatStringFromDate
    com.avos.avoscloud.AVException access$000(com.avos.avoscloud.S3Uploader,java.lang.String) -> access$000
    com.avos.avoscloud.AVException access$100(com.avos.avoscloud.S3Uploader,java.lang.String) -> access$100
com.avos.avoscloud.S3Uploader$1 -> com.avos.avoscloud.S3Uploader$1:
    com.avos.avoscloud.AVException[] val$exceptionWhenGetBucket -> val$exceptionWhenGetBucket
    com.avos.avoscloud.S3Uploader this$0 -> this$0
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.S3Uploader$2 -> com.avos.avoscloud.S3Uploader$2:
    com.avos.avoscloud.AVException[] val$exceptionWhenGetBucket -> val$exceptionWhenGetBucket
    com.avos.avoscloud.S3Uploader this$0 -> this$0
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.S3Uploader$3 -> com.avos.avoscloud.S3Uploader$3:
    com.avos.avoscloud.S3Uploader this$0 -> this$0
    void transferred(long) -> transferred
com.avos.avoscloud.SaveCallback -> com.avos.avoscloud.SaveCallback:
    void done(com.avos.avoscloud.AVException) -> done
    void internalDone0(java.lang.Void,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone0(java.lang.Object,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone(com.avos.avoscloud.AVException) -> internalDone
com.avos.avoscloud.SendCallback -> com.avos.avoscloud.SendCallback:
    void done(com.avos.avoscloud.AVException) -> done
    void internalDone0(java.lang.Void,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone0(java.lang.Object,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone(com.avos.avoscloud.AVException) -> internalDone
com.avos.avoscloud.SignUpCallback -> com.avos.avoscloud.SignUpCallback:
    void done(com.avos.avoscloud.AVException) -> done
    void internalDone0(java.lang.Void,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone0(java.lang.Object,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone(com.avos.avoscloud.AVException) -> internalDone
com.avos.avoscloud.StatusCallback -> com.avos.avoscloud.StatusCallback:
    void done(com.avos.avoscloud.AVStatus,com.avos.avoscloud.AVException) -> done
    void internalDone0(com.avos.avoscloud.AVStatus,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone0(java.lang.Object,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone(com.avos.avoscloud.AVException) -> internalDone
com.avos.avoscloud.StatusListCallback -> com.avos.avoscloud.StatusListCallback:
    void done(java.util.List,com.avos.avoscloud.AVException) -> done
    void internalDone0(java.util.List,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone0(java.lang.Object,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone(com.avos.avoscloud.AVException) -> internalDone
com.avos.avoscloud.UpdatePasswordCallback -> com.avos.avoscloud.UpdatePasswordCallback:
    void done(com.avos.avoscloud.AVException) -> done
    void internalDone0(java.lang.Void,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone0(java.lang.Object,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone(com.avos.avoscloud.AVException) -> internalDone
com.avos.avoscloud.UrlDirectlyUploader -> com.avos.avoscloud.UrlDirectlyUploader:
    com.avos.avoscloud.AVException doWork() -> doWork
    java.lang.String getFileRequestParameters() -> getFileRequestParameters
com.avos.avoscloud.UrlDirectlyUploader$1 -> com.avos.avoscloud.UrlDirectlyUploader$1:
    com.avos.avoscloud.AVException[] val$exceptionSaveFile -> val$exceptionSaveFile
    com.avos.avoscloud.UrlDirectlyUploader this$0 -> this$0
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.ops.AVOp -> com.avos.avoscloud.ops.AVOp:
    com.avos.avoscloud.ops.AVOp cast(java.lang.Class) -> cast
    java.lang.String key() -> key
    com.avos.avoscloud.ops.AVOp$OpType type() -> type
    com.avos.avoscloud.AVObject apply(com.avos.avoscloud.AVObject) -> apply
    com.avos.avoscloud.ops.AVOp merge(com.avos.avoscloud.ops.AVOp) -> merge
    int size() -> size
    com.avos.avoscloud.ops.AVOp get(int) -> get
    com.avos.avoscloud.ops.AVOp remove(int) -> remove
    java.util.Map encodeOp() -> encodeOp
com.avos.avoscloud.ops.AVOp$OpType -> com.avos.avoscloud.ops.AVOp$OpType:
    com.avos.avoscloud.ops.AVOp$OpType Set -> Set
    com.avos.avoscloud.ops.AVOp$OpType Increment -> Increment
    com.avos.avoscloud.ops.AVOp$OpType AddUnique -> AddUnique
    com.avos.avoscloud.ops.AVOp$OpType Add -> Add
    com.avos.avoscloud.ops.AVOp$OpType Remove -> Remove
    com.avos.avoscloud.ops.AVOp$OpType AddRelation -> AddRelation
    com.avos.avoscloud.ops.AVOp$OpType RemoveRelation -> RemoveRelation
    com.avos.avoscloud.ops.AVOp$OpType Delete -> Delete
    com.avos.avoscloud.ops.AVOp$OpType Null -> Null
    com.avos.avoscloud.ops.AVOp$OpType Compound -> Compound
    com.avos.avoscloud.ops.AVOp$OpType[] $VALUES -> $VALUES
    com.avos.avoscloud.ops.AVOp$OpType[] values() -> values
    com.avos.avoscloud.ops.AVOp$OpType valueOf(java.lang.String) -> valueOf
com.avos.avoscloud.ops.AddOp -> com.avos.avoscloud.ops.AddOp:
    java.util.LinkedList values -> values
    java.util.LinkedList getValues() -> getValues
    void setValues(java.util.LinkedList) -> setValues
    com.avos.avoscloud.AVObject apply(com.avos.avoscloud.AVObject) -> apply
    java.util.Map encodeOp() -> encodeOp
    com.avos.avoscloud.ops.AVOp merge(com.avos.avoscloud.ops.AVOp) -> merge
com.avos.avoscloud.ops.AddOp$1 -> com.avos.avoscloud.ops.AddOp$1:
    int[] $SwitchMap$com$avos$avoscloud$ops$AVOp$OpType -> $SwitchMap$com$avos$avoscloud$ops$AVOp$OpType
com.avos.avoscloud.ops.AddRelationOp -> com.avos.avoscloud.ops.AddRelationOp:
    java.util.Set values -> values
    java.util.Set getValues() -> getValues
    void setValues(java.util.Set) -> setValues
    com.avos.avoscloud.AVObject apply(com.avos.avoscloud.AVObject) -> apply
    java.util.Map encodeOp() -> encodeOp
    com.avos.avoscloud.ops.AVOp merge(com.avos.avoscloud.ops.AVOp) -> merge
com.avos.avoscloud.ops.AddRelationOp$1 -> com.avos.avoscloud.ops.AddRelationOp$1:
    int[] $SwitchMap$com$avos$avoscloud$ops$AVOp$OpType -> $SwitchMap$com$avos$avoscloud$ops$AVOp$OpType
com.avos.avoscloud.ops.AddUniqueOp -> com.avos.avoscloud.ops.AddUniqueOp:
    java.util.Set values -> values
    java.util.Set getValues() -> getValues
    void setValues(java.util.Set) -> setValues
    com.avos.avoscloud.AVObject apply(com.avos.avoscloud.AVObject) -> apply
    java.util.Map encodeOp() -> encodeOp
    com.avos.avoscloud.ops.AVOp merge(com.avos.avoscloud.ops.AVOp) -> merge
com.avos.avoscloud.ops.AddUniqueOp$1 -> com.avos.avoscloud.ops.AddUniqueOp$1:
    int[] $SwitchMap$com$avos$avoscloud$ops$AVOp$OpType -> $SwitchMap$com$avos$avoscloud$ops$AVOp$OpType
com.avos.avoscloud.ops.BaseOp -> com.avos.avoscloud.ops.BaseOp:
    java.lang.String key -> key
    com.avos.avoscloud.ops.AVOp$OpType type -> type
    java.util.LinkedList ops -> ops
    com.avos.avoscloud.ops.AVOp$OpType getType() -> getType
    void setType(com.avos.avoscloud.ops.AVOp$OpType) -> setType
    java.util.LinkedList getOps() -> getOps
    void setOps(java.util.LinkedList) -> setOps
    java.lang.String getKey() -> getKey
    java.lang.String key() -> key
    com.avos.avoscloud.ops.AVOp$OpType type() -> type
    com.avos.avoscloud.ops.AVOp cast(java.lang.Class) -> cast
    void setKey(java.lang.String) -> setKey
    com.avos.avoscloud.ops.AVOp merge(com.avos.avoscloud.ops.AVOp) -> merge
    int size() -> size
    com.avos.avoscloud.ops.AVOp remove(int) -> remove
    com.avos.avoscloud.AVObject apply(com.avos.avoscloud.AVObject) -> apply
    void assertKeyEquals(com.avos.avoscloud.ops.AVOp) -> assertKeyEquals
    java.util.Iterator iterator() -> iterator
    com.avos.avoscloud.ops.AVOp get(int) -> get
com.avos.avoscloud.ops.CompoundOp -> com.avos.avoscloud.ops.CompoundOp:
    java.util.Map encodeOp() -> encodeOp
    void addFirst(com.avos.avoscloud.ops.AVOp) -> addFirst
    void addLast(com.avos.avoscloud.ops.AVOp) -> addLast
    com.avos.avoscloud.ops.AVOp removeFirst() -> removeFirst
    com.avos.avoscloud.ops.AVOp removeLast() -> removeLast
com.avos.avoscloud.ops.DeleteOp -> com.avos.avoscloud.ops.DeleteOp:
    java.util.Map encodeOp() -> encodeOp
    com.avos.avoscloud.AVObject apply(com.avos.avoscloud.AVObject) -> apply
    com.avos.avoscloud.ops.AVOp merge(com.avos.avoscloud.ops.AVOp) -> merge
com.avos.avoscloud.ops.DeleteOp$1 -> com.avos.avoscloud.ops.DeleteOp$1:
    int[] $SwitchMap$com$avos$avoscloud$ops$AVOp$OpType -> $SwitchMap$com$avos$avoscloud$ops$AVOp$OpType
com.avos.avoscloud.ops.IncrementOp -> com.avos.avoscloud.ops.IncrementOp:
    java.lang.Number amount -> amount
    java.lang.Number getAmount() -> getAmount
    void setAmount(java.lang.Number) -> setAmount
    com.avos.avoscloud.AVObject apply(com.avos.avoscloud.AVObject) -> apply
    java.util.Map encodeOp() -> encodeOp
    com.avos.avoscloud.ops.AVOp merge(com.avos.avoscloud.ops.AVOp) -> merge
com.avos.avoscloud.ops.IncrementOp$1 -> com.avos.avoscloud.ops.IncrementOp$1:
    int[] $SwitchMap$com$avos$avoscloud$ops$AVOp$OpType -> $SwitchMap$com$avos$avoscloud$ops$AVOp$OpType
com.avos.avoscloud.ops.NullOP -> com.avos.avoscloud.ops.NullOP:
    com.avos.avoscloud.ops.NullOP INSTANCE -> INSTANCE
    com.avos.avoscloud.ops.AVOp cast(java.lang.Class) -> cast
    java.util.Iterator iterator() -> iterator
    java.lang.String key() -> key
    com.avos.avoscloud.ops.AVOp$OpType type() -> type
    com.avos.avoscloud.AVObject apply(com.avos.avoscloud.AVObject) -> apply
    com.avos.avoscloud.ops.AVOp merge(com.avos.avoscloud.ops.AVOp) -> merge
    java.util.Map encodeOp() -> encodeOp
    int size() -> size
    com.avos.avoscloud.ops.AVOp get(int) -> get
    com.avos.avoscloud.ops.AVOp remove(int) -> remove
com.avos.avoscloud.ops.RemoveOp -> com.avos.avoscloud.ops.RemoveOp:
    java.util.Set values -> values
    java.util.Set getValues() -> getValues
    void setValues(java.util.Set) -> setValues
    java.util.Map encodeOp() -> encodeOp
    com.avos.avoscloud.AVObject apply(com.avos.avoscloud.AVObject) -> apply
    com.avos.avoscloud.ops.AVOp merge(com.avos.avoscloud.ops.AVOp) -> merge
com.avos.avoscloud.ops.RemoveOp$1 -> com.avos.avoscloud.ops.RemoveOp$1:
    int[] $SwitchMap$com$avos$avoscloud$ops$AVOp$OpType -> $SwitchMap$com$avos$avoscloud$ops$AVOp$OpType
com.avos.avoscloud.ops.RemoveRelationOp -> com.avos.avoscloud.ops.RemoveRelationOp:
    java.util.Set values -> values
    java.util.Set getValues() -> getValues
    void setValues(java.util.Set) -> setValues
    com.avos.avoscloud.AVObject apply(com.avos.avoscloud.AVObject) -> apply
    java.util.Map encodeOp() -> encodeOp
    com.avos.avoscloud.ops.AVOp merge(com.avos.avoscloud.ops.AVOp) -> merge
com.avos.avoscloud.ops.RemoveRelationOp$1 -> com.avos.avoscloud.ops.RemoveRelationOp$1:
    int[] $SwitchMap$com$avos$avoscloud$ops$AVOp$OpType -> $SwitchMap$com$avos$avoscloud$ops$AVOp$OpType
com.avos.avoscloud.ops.SetOp -> com.avos.avoscloud.ops.SetOp:
    java.lang.Object value -> value
    java.lang.Object getValue() -> getValue
    void setValue(java.lang.Object) -> setValue
    com.avos.avoscloud.AVObject apply(com.avos.avoscloud.AVObject) -> apply
    java.util.Map encodeOp() -> encodeOp
    com.avos.avoscloud.ops.AVOp merge(com.avos.avoscloud.ops.AVOp) -> merge
com.avos.avoscloud.ops.SetOp$1 -> com.avos.avoscloud.ops.SetOp$1:
    int[] $SwitchMap$com$avos$avoscloud$ops$AVOp$OpType -> $SwitchMap$com$avos$avoscloud$ops$AVOp$OpType
com.avos.avoscloud.signature.AES -> com.avos.avoscloud.signature.AES:
    java.lang.String KEY_GENERATION_ALG -> KEY_GENERATION_ALG
    int HASH_ITERATIONS -> HASH_ITERATIONS
    int KEY_LENGTH -> KEY_LENGTH
    char[] humanPassphrase -> humanPassphrase
    byte[] salt -> salt
    javax.crypto.spec.PBEKeySpec myKeyspec -> myKeyspec
    java.lang.String CIPHERMODEPADDING -> CIPHERMODEPADDING
    javax.crypto.SecretKeyFactory keyfactory -> keyfactory
    javax.crypto.SecretKey sk -> sk
    javax.crypto.spec.SecretKeySpec skforAES -> skforAES
    byte[] iv -> iv
    javax.crypto.spec.IvParameterSpec IV -> IV
    java.lang.String encrypt(byte[]) -> encrypt
    java.lang.String decrypt(java.lang.String) -> decrypt
    byte[] addPadding(byte[]) -> addPadding
    byte[] dropPadding(byte[]) -> dropPadding
    byte[] encrypt(java.lang.String,javax.crypto.SecretKey,javax.crypto.spec.IvParameterSpec,byte[]) -> encrypt
    byte[] decrypt(java.lang.String,javax.crypto.SecretKey,javax.crypto.spec.IvParameterSpec,byte[]) -> decrypt
com.avos.avoscloud.signature.Base64Decoder -> com.avos.avoscloud.signature.Base64Decoder:
    char[] chars -> chars
    int[] ints -> ints
    int charCount -> charCount
    int carryOver -> carryOver
    int read() -> read
    int read(byte[],int,int) -> read
    java.lang.String decode(java.lang.String) -> decode
    byte[] decodeToBytes(java.lang.String) -> decodeToBytes
    void main(java.lang.String[]) -> main
com.avos.avoscloud.signature.Base64Encoder -> com.avos.avoscloud.signature.Base64Encoder:
    char[] chars -> chars
    int charCount -> charCount
    int carryOver -> carryOver
    void write(int) -> write
    void write(byte[],int,int) -> write
    void close() -> close
    java.lang.String encode(java.lang.String) -> encode
    java.lang.String encode(byte[]) -> encode
com.avos.avosstatistics.BuildConfig -> com.avos.avosstatistics.BuildConfig:
    boolean DEBUG -> DEBUG
com.avos.avosstatistics.R -> com.avos.avosstatistics.R:
com.avos.avosstatistics.R$attr -> com.avos.avosstatistics.R$attr:
com.avos.avosstatistics.R$layout -> com.avos.avosstatistics.R$layout:
    int activity_main -> activity_main
com.avos.avosstatistics.R$string -> com.avos.avosstatistics.R$string:
    int app_name -> app_name
com.czy.wifiap.App -> com.czy.wifiap.App:
    boolean canUpload -> a
    com.czy.wifiap.App instance -> b
    void onCreate() -> onCreate
    boolean isCanUpload() -> a
    void setCanUpload(boolean) -> a
    com.czy.wifiap.App getInstance() -> b
com.czy.wifiap.BaseActivity -> com.czy.wifiap.a:
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    void onResume() -> onResume
    void onPause() -> onPause
com.czy.wifiap.HttpServer -> com.czy.wifiap.b:
    boolean shutdown -> a
    java.lang.String webRoot -> b
    java.net.ServerSocket serverSocket -> c
    java.net.Socket socket -> d
    java.lang.String host -> e
    byte[] dirBytes -> f
    void setHost(java.lang.String) -> a
    void close() -> a
    void setWebRoot(java.lang.String) -> b
    void await() -> b
com.czy.wifiap.ListDirActivity -> com.czy.wifiap.ListDirActivity:
    java.io.File currentDir -> a
    java.io.File[] dirs -> b
    android.widget.BaseAdapter baseAdapter -> c
    void onCreate(android.os.Bundle) -> onCreate
    java.io.File[] getDirFiles(java.io.File) -> a
    java.io.File[] access$0(com.czy.wifiap.ListDirActivity) -> a
    java.io.File access$1(com.czy.wifiap.ListDirActivity) -> b
    void access$2(com.czy.wifiap.ListDirActivity,java.io.File) -> a
    java.io.File[] access$3(com.czy.wifiap.ListDirActivity,java.io.File) -> b
    void access$4(com.czy.wifiap.ListDirActivity,java.io.File[]) -> a
    android.widget.BaseAdapter access$5(com.czy.wifiap.ListDirActivity) -> c
com.czy.wifiap.ListDirActivity$1 -> com.czy.wifiap.c:
    com.czy.wifiap.ListDirActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.czy.wifiap.ListDirActivity$2 -> com.czy.wifiap.d:
    com.czy.wifiap.ListDirActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.czy.wifiap.ListDirActivity$3 -> com.czy.wifiap.e:
    com.czy.wifiap.ListDirActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.czy.wifiap.ListDirActivity$DirAdapter -> com.czy.wifiap.f:
    com.czy.wifiap.ListDirActivity this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.czy.wifiap.MainActivity -> com.czy.wifiap.MainActivity:
    android.net.wifi.p2p.WifiP2pManager$Channel channel -> a
    com.czy.wifiap.MainActivity$Receiver receiver -> b
    android.net.wifi.p2p.WifiP2pManager p2pManager -> c
    java.util.List peers -> d
    android.net.wifi.p2p.WifiP2pManager$ConnectionInfoListener connectionListener -> e
    android.os.Handler handler -> f
    android.net.wifi.p2p.WifiP2pManager$PeerListListener peerListListener -> g
    void onCreate(android.os.Bundle) -> onCreate
    android.net.wifi.p2p.WifiP2pManager$PeerListListener access$0(com.czy.wifiap.MainActivity) -> a
    android.net.wifi.p2p.WifiP2pManager$ConnectionInfoListener access$1(com.czy.wifiap.MainActivity) -> b
com.czy.wifiap.MainActivity$1 -> com.czy.wifiap.g:
    com.czy.wifiap.MainActivity this$0 -> a
    void onConnectionInfoAvailable(android.net.wifi.p2p.WifiP2pInfo) -> onConnectionInfoAvailable
com.czy.wifiap.MainActivity$2 -> com.czy.wifiap.h:
    com.czy.wifiap.MainActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.czy.wifiap.MainActivity$3 -> com.czy.wifiap.i:
    com.czy.wifiap.MainActivity this$0 -> a
    void onPeersAvailable(android.net.wifi.p2p.WifiP2pDeviceList) -> onPeersAvailable
com.czy.wifiap.MainActivity$4 -> com.czy.wifiap.j:
    com.czy.wifiap.MainActivity this$0 -> a
    void onChannelDisconnected() -> onChannelDisconnected
com.czy.wifiap.MainActivity$5 -> com.czy.wifiap.k:
    com.czy.wifiap.MainActivity this$0 -> a
    void onSuccess() -> onSuccess
    void onFailure(int) -> onFailure
com.czy.wifiap.MainActivity$Receiver -> com.czy.wifiap.l:
    com.czy.wifiap.MainActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.czy.wifiap.Request -> com.czy.wifiap.m:
    java.io.InputStream input -> a
    java.lang.String uri -> b
    int contentLength -> c
    java.lang.String boundary -> d
    java.lang.String moreContent -> e
    java.io.InputStream getInputStream() -> a
    void parse() -> b
    void clearMore() -> c
    java.lang.String getMoreContent() -> d
    java.lang.String parseBoundary(java.lang.String) -> a
    java.lang.String getBounday() -> e
    int parseLength(java.lang.String) -> b
    java.lang.String parseUri(java.lang.String) -> c
    java.lang.String getUri() -> f
    int getContentLength() -> g
com.czy.wifiap.Response -> com.czy.wifiap.n:
    com.czy.wifiap.Request request -> a
    java.io.OutputStream output -> b
    java.lang.String webRoot -> c
    java.lang.String host -> d
    byte[] dirBytes -> e
    void setRequest(com.czy.wifiap.Request) -> a
    void writeHeaders(long) -> a
    void writeHeaders(long,java.lang.String) -> a
    java.lang.String returnHtmlString(java.io.File) -> a
    java.io.File[] sortFileByName(java.io.File[]) -> a
    java.lang.String returnHtmlString(java.io.File[]) -> b
    java.lang.String getFileSize(float) -> a
    java.lang.String returnHtmlString(java.lang.String) -> a
    boolean isVideoFile(java.lang.String) -> b
    boolean isAudioFile(java.lang.String) -> c
    java.lang.String getFileContentType(java.lang.String) -> d
    java.lang.String getChineseHttpPath(java.lang.String) -> e
    boolean isBitmapFile(java.lang.String) -> f
    void writeFileHtml(java.io.FileInputStream,java.io.File) -> a
    void receiveFile() -> b
    java.io.ByteArrayOutputStream getApkIconStream(android.graphics.drawable.Drawable) -> a
    android.graphics.drawable.Drawable showUninstallAPKIcon(java.lang.String) -> g
    void sendStaticResource() -> a
    void sendSearchHtml(java.lang.String) -> h
com.czy.wifiap.Response$1 -> com.czy.wifiap.o:
    int compare(java.io.File,java.io.File) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.czy.wifiap.Response$2 -> com.czy.wifiap.p:
    int compare(java.io.File,java.io.File) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.czy.wifiap.WifiAPActivity -> com.czy.wifiap.WifiAPActivity:
    android.net.wifi.WifiManager wifiManager -> a
    java.lang.String INT_ENTERPRISEFIELD_NAME -> b
    java.lang.String ENTERPRISE_EAP -> c
    java.lang.String ENTERPRISE_CLIENT_CERT -> d
    java.lang.String ENTERPRISE_PRIV_KEY -> e
    java.lang.String ENTERPRISE_PHASE2 -> f
    java.lang.String ENTERPRISE_ANON_IDENT -> g
    java.lang.String ENTERPRISE_CA_CERT -> h
    java.lang.String webRoot -> i
    com.czy.wifiap.HttpServer httpServer -> j
    boolean wifiOpen -> k
    android.app.ProgressDialog progressDialog -> l
    byte[] dirBytes -> m
    byte[] videos -> n
    byte[] audios -> o
    byte[] files -> p
    com.czy.wifiap.WifiAPActivity wifiAPActivity -> q
    android.os.PowerManager$WakeLock mLock -> r
    java.lang.String host -> s
    void onCreate(android.os.Bundle) -> onCreate
    com.czy.wifiap.WifiAPActivity getInstance() -> a
    void checkUpdate() -> e
    void showUpdate(android.content.Context,java.lang.String,java.lang.String) -> a
    void showMustUpdate(android.content.Context,java.lang.String,java.lang.String) -> b
    void showQRDialog() -> f
    android.graphics.Bitmap getQRBitmap(java.lang.String,int) -> a
    void startShare() -> g
    java.lang.String int2Ip(int) -> a
    boolean waitWifiEnabled(android.net.wifi.WifiManager) -> a
    android.net.wifi.WifiConfiguration createWifiInfo(java.lang.String,java.lang.String,com.czy.wifiap.WifiAPActivity$WifiCipherType) -> a
    void configHttpServer() -> h
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    boolean hasSD() -> i
    void onBackPressed() -> onBackPressed
    void showExitSureDialog() -> j
    void onDestroy() -> onDestroy
    byte[] getVideos() -> b
    byte[] getAudios() -> c
    byte[] getFiles() -> d
    boolean setWifiApEnabled(boolean) -> a
    void access$0(com.czy.wifiap.WifiAPActivity) -> a
    android.net.wifi.WifiConfiguration access$1(com.czy.wifiap.WifiAPActivity,java.lang.String,java.lang.String,com.czy.wifiap.WifiAPActivity$WifiCipherType) -> a
    android.app.ProgressDialog access$2(com.czy.wifiap.WifiAPActivity) -> b
    void access$3(com.czy.wifiap.WifiAPActivity,android.app.ProgressDialog) -> a
    void access$4(com.czy.wifiap.WifiAPActivity,android.content.Context,java.lang.String,java.lang.String) -> a
    void access$5(com.czy.wifiap.WifiAPActivity,android.content.Context,java.lang.String,java.lang.String) -> b
    android.os.PowerManager$WakeLock access$6(com.czy.wifiap.WifiAPActivity) -> c
    com.czy.wifiap.HttpServer access$7(com.czy.wifiap.WifiAPActivity) -> d
    void access$8(com.czy.wifiap.WifiAPActivity,java.lang.String) -> a
    java.lang.String access$9(com.czy.wifiap.WifiAPActivity) -> e
com.czy.wifiap.WifiAPActivity$1 -> com.czy.wifiap.q:
    com.czy.wifiap.WifiAPActivity this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.czy.wifiap.WifiAPActivity$10 -> com.czy.wifiap.r:
    com.czy.wifiap.WifiAPActivity this$0 -> a
    void run() -> run
    com.czy.wifiap.WifiAPActivity access$0(com.czy.wifiap.WifiAPActivity$10) -> a
com.czy.wifiap.WifiAPActivity$10$1 -> com.czy.wifiap.s:
    com.czy.wifiap.WifiAPActivity$10 this$1 -> a
    java.lang.String val$ip -> b
    void run() -> run
com.czy.wifiap.WifiAPActivity$11 -> com.czy.wifiap.t:
    com.czy.wifiap.WifiAPActivity this$0 -> a
    android.app.Dialog val$dialog -> b
    void onClick(android.view.View) -> onClick
com.czy.wifiap.WifiAPActivity$12 -> com.czy.wifiap.u:
    com.czy.wifiap.WifiAPActivity this$0 -> a
    android.app.Dialog val$dialog -> b
    void onClick(android.view.View) -> onClick
com.czy.wifiap.WifiAPActivity$2 -> com.czy.wifiap.v:
    com.czy.wifiap.WifiAPActivity this$0 -> a
    void done(java.util.List,com.avos.avoscloud.AVException) -> done
com.czy.wifiap.WifiAPActivity$3 -> com.czy.wifiap.w:
    com.czy.wifiap.WifiAPActivity this$0 -> a
    android.app.Dialog val$dialog -> b
    void onClick(android.view.View) -> onClick
com.czy.wifiap.WifiAPActivity$4 -> com.czy.wifiap.x:
    com.czy.wifiap.WifiAPActivity this$0 -> a
    android.app.Dialog val$dialog -> b
    java.lang.String val$url -> c
    void onClick(android.view.View) -> onClick
com.czy.wifiap.WifiAPActivity$5 -> com.czy.wifiap.y:
    com.czy.wifiap.WifiAPActivity this$0 -> a
    android.app.Dialog val$dialog -> b
    void onClick(android.view.View) -> onClick
com.czy.wifiap.WifiAPActivity$6 -> com.czy.wifiap.z:
    com.czy.wifiap.WifiAPActivity this$0 -> a
    android.widget.TextView val$message -> b
    java.lang.String val$url -> c
    void onClick(android.view.View) -> onClick
com.czy.wifiap.WifiAPActivity$7 -> com.czy.wifiap.aa:
    com.czy.wifiap.WifiAPActivity this$0 -> a
    android.app.Dialog val$dialog -> b
    void onClick(android.view.View) -> onClick
com.czy.wifiap.WifiAPActivity$8 -> com.czy.wifiap.ab:
    com.czy.wifiap.WifiAPActivity this$0 -> a
    void run() -> run
com.czy.wifiap.WifiAPActivity$9 -> com.czy.wifiap.ac:
    com.czy.wifiap.WifiAPActivity this$0 -> a
    void run() -> run
com.czy.wifiap.WifiAPActivity$ClickListener -> com.czy.wifiap.ad:
    com.czy.wifiap.WifiAPActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    com.czy.wifiap.WifiAPActivity access$0(com.czy.wifiap.WifiAPActivity$ClickListener) -> a
com.czy.wifiap.WifiAPActivity$ClickListener$1 -> com.czy.wifiap.ae:
    com.czy.wifiap.WifiAPActivity$ClickListener this$1 -> a
    void run() -> run
    com.czy.wifiap.WifiAPActivity$ClickListener access$0(com.czy.wifiap.WifiAPActivity$ClickListener$1) -> a
com.czy.wifiap.WifiAPActivity$ClickListener$1$1 -> com.czy.wifiap.af:
    com.czy.wifiap.WifiAPActivity$ClickListener$1 this$2 -> a
    void run() -> run
com.czy.wifiap.WifiAPActivity$WifiCipherType -> com.czy.wifiap.ag:
    com.czy.wifiap.WifiAPActivity$WifiCipherType WIFICIPHER_WEP -> a
    com.czy.wifiap.WifiAPActivity$WifiCipherType WIFICIPHER_WPA -> b
    com.czy.wifiap.WifiAPActivity$WifiCipherType WIFICIPHER_NOPASS -> c
    com.czy.wifiap.WifiAPActivity$WifiCipherType WIFICIPHER_INVALID -> d
    com.czy.wifiap.WifiAPActivity$WifiCipherType WIFICIPHER_WPA2 -> e
    com.czy.wifiap.WifiAPActivity$WifiCipherType[] ENUM$VALUES -> f
    com.czy.wifiap.WifiAPActivity$WifiCipherType[] values() -> values
    com.czy.wifiap.WifiAPActivity$WifiCipherType valueOf(java.lang.String) -> valueOf
com.github.snowdream.android.app.downloader.AsycDownloadTask -> com.github.snowdream.android.app.downloader.AsycDownloadTask:
    int MESSAGE_POST_ERROR -> MESSAGE_POST_ERROR
    int MESSAGE_POST_ADD -> MESSAGE_POST_ADD
    int MODE_DEFAULT -> MODE_DEFAULT
    int MODE_TRUNKED -> MODE_TRUNKED
    java.lang.String STORE_PATH -> STORE_PATH
    com.github.snowdream.android.app.downloader.AsycDownloadTask$InternalHandler sHandler -> sHandler
    boolean isOnlyGetHead -> isOnlyGetHead
    int mode -> mode
    void OnError(com.github.snowdream.android.app.downloader.DownloadTask,java.lang.Integer) -> OnError
    void OnAdd(com.github.snowdream.android.app.downloader.DownloadTask) -> OnAdd
    void SaveDownloadTask(com.github.snowdream.android.app.downloader.DownloadTask,int) -> SaveDownloadTask
    void SendError(com.github.snowdream.android.app.downloader.DownloadTask,java.lang.Integer) -> SendError
    void SendAdd(com.github.snowdream.android.app.downloader.DownloadTask) -> SendAdd
    com.github.snowdream.android.app.downloader.DownloadTask doInBackground(com.github.snowdream.android.app.downloader.DownloadTask[]) -> doInBackground
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void access$1(com.github.snowdream.android.app.downloader.AsycDownloadTask,com.github.snowdream.android.app.downloader.DownloadTask,java.lang.Integer) -> access$1
    void access$2(com.github.snowdream.android.app.downloader.AsycDownloadTask,com.github.snowdream.android.app.downloader.DownloadTask) -> access$2
com.github.snowdream.android.app.downloader.AsycDownloadTask$AsyncTaskResult -> com.github.snowdream.android.app.downloader.AsycDownloadTask$AsyncTaskResult:
    java.lang.Integer mData -> mData
    com.github.snowdream.android.app.downloader.DownloadTask mDownloadTask -> mDownloadTask
    com.github.snowdream.android.util.concurrent.AsyncTask mTask -> mTask
com.github.snowdream.android.app.downloader.AsycDownloadTask$InternalHandler -> com.github.snowdream.android.app.downloader.AsycDownloadTask$InternalHandler:
    void handleMessage(android.os.Message) -> handleMessage
com.github.snowdream.android.app.downloader.DownloadException -> com.github.snowdream.android.app.downloader.DownloadException:
    int CONTEXT_NOT_VALID -> CONTEXT_NOT_VALID
    int DOWNLOAD_TASK_FAILED -> DOWNLOAD_TASK_FAILED
    int DOWNLOAD_TASK_NOT_VALID -> DOWNLOAD_TASK_NOT_VALID
    int OPERATION_NOT_VALID -> OPERATION_NOT_VALID
    int UNKNOWN -> UNKNOWN
    long serialVersionUID -> serialVersionUID
    int code -> code
    java.lang.String generateMessageFromCode(int) -> generateMessageFromCode
    int getCode() -> getCode
    void setCode(int) -> setCode
com.github.snowdream.android.app.downloader.DownloadListener -> com.github.snowdream.android.app.downloader.DownloadListener:
    void onAdd(java.lang.Object) -> onAdd
    void onDelete(java.lang.Object) -> onDelete
    void onStop(java.lang.Object) -> onStop
com.github.snowdream.android.app.downloader.DownloadManager -> com.github.snowdream.android.app.downloader.DownloadManager:
    android.content.Context context -> context
    void OnResult(com.github.snowdream.android.app.downloader.DownloadManager$POST_MESSAGE,com.github.snowdream.android.app.downloader.DownloadTask,com.github.snowdream.android.app.downloader.DownloadListener,java.lang.Integer) -> OnResult
    void add(com.github.snowdream.android.app.downloader.DownloadTask,com.github.snowdream.android.app.downloader.DownloadListener) -> add
    void delete(com.github.snowdream.android.app.downloader.DownloadTask,com.github.snowdream.android.app.downloader.DownloadListener) -> delete
    void deleteforever(com.github.snowdream.android.app.downloader.DownloadTask,com.github.snowdream.android.app.downloader.DownloadListener) -> deleteforever
    boolean start(com.github.snowdream.android.app.downloader.DownloadTask,com.github.snowdream.android.app.downloader.DownloadListener) -> start
    void stop(com.github.snowdream.android.app.downloader.DownloadTask,com.github.snowdream.android.app.downloader.DownloadListener) -> stop
com.github.snowdream.android.app.downloader.DownloadManager$1 -> com.github.snowdream.android.app.downloader.DownloadManager$1:
    com.github.snowdream.android.app.downloader.DownloadManager this$0 -> this$0
    com.github.snowdream.android.app.downloader.DownloadListener val$listener -> val$listener
    com.github.snowdream.android.app.downloader.DownloadManager$POST_MESSAGE val$message -> val$message
    com.github.snowdream.android.app.downloader.DownloadTask val$task -> val$task
    java.lang.Integer val$code -> val$code
    int[] $SWITCH_TABLE$com$github$snowdream$android$app$downloader$DownloadManager$POST_MESSAGE -> $SWITCH_TABLE$com$github$snowdream$android$app$downloader$DownloadManager$POST_MESSAGE
    void run() -> run
    int[] $SWITCH_TABLE$com$github$snowdream$android$app$downloader$DownloadManager$POST_MESSAGE() -> $SWITCH_TABLE$com$github$snowdream$android$app$downloader$DownloadManager$POST_MESSAGE
com.github.snowdream.android.app.downloader.DownloadManager$POST_MESSAGE -> com.github.snowdream.android.app.downloader.DownloadManager$POST_MESSAGE:
    com.github.snowdream.android.app.downloader.DownloadManager$POST_MESSAGE ADD -> ADD
    com.github.snowdream.android.app.downloader.DownloadManager$POST_MESSAGE DELETE -> DELETE
    com.github.snowdream.android.app.downloader.DownloadManager$POST_MESSAGE ERROR -> ERROR
    com.github.snowdream.android.app.downloader.DownloadManager$POST_MESSAGE START -> START
    com.github.snowdream.android.app.downloader.DownloadManager$POST_MESSAGE STOP -> STOP
    com.github.snowdream.android.app.downloader.DownloadManager$POST_MESSAGE FINISH -> FINISH
    com.github.snowdream.android.app.downloader.DownloadManager$POST_MESSAGE[] ENUM$VALUES -> ENUM$VALUES
    com.github.snowdream.android.app.downloader.DownloadManager$POST_MESSAGE[] values() -> values
    com.github.snowdream.android.app.downloader.DownloadManager$POST_MESSAGE valueOf(java.lang.String) -> valueOf
com.github.snowdream.android.app.downloader.DownloadSettings -> com.github.snowdream.android.app.downloader.DownloadSettings:
    int max_tasks -> max_tasks
    int max_threads -> max_threads
    java.lang.String storage_path -> storage_path
com.github.snowdream.android.app.downloader.DownloadStatus -> com.github.snowdream.android.app.downloader.DownloadStatus:
    int STATUS_PENDING -> STATUS_PENDING
    int STATUS_RUNNING -> STATUS_RUNNING
    int STATUS_STOPPED -> STATUS_STOPPED
    int STATUS_FINISHED -> STATUS_FINISHED
    int STATUS_FAILED -> STATUS_FAILED
    int STATUS_DELETED -> STATUS_DELETED
com.github.snowdream.android.app.downloader.DownloadTask -> com.github.snowdream.android.app.downloader.DownloadTask:
    android.content.Context context -> context
    long finishTime -> finishTime
    int id -> id
    com.github.snowdream.android.app.downloader.DownloadListener listener -> listener
    java.lang.String mimeType -> mimeType
    java.lang.String name -> name
    java.lang.String path -> path
    long size -> size
    long startTime -> startTime
    int status -> status
    com.github.snowdream.android.app.downloader.AsycDownloadTask task -> task
    int type -> type
    java.lang.String url -> url
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    android.content.Context getContext() -> getContext
    void setContext(android.content.Context) -> setContext
    long getFinishTime() -> getFinishTime
    void setFinishTime(long) -> setFinishTime
    int getId() -> getId
    void setId(int) -> setId
    com.github.snowdream.android.app.downloader.DownloadListener getListener() -> getListener
    void setListener(com.github.snowdream.android.app.downloader.DownloadListener) -> setListener
    java.lang.String getMimeType() -> getMimeType
    void setMimeType(java.lang.String) -> setMimeType
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.lang.String getPath() -> getPath
    void setPath(java.lang.String) -> setPath
    long getSize() -> getSize
    void setSize(long) -> setSize
    long getStartTime() -> getStartTime
    void setStartTime(long) -> setStartTime
    int getStatus() -> getStatus
    void setStatus(int) -> setStatus
    int getType() -> getType
    void setType(int) -> setType
    java.lang.String getUrl() -> getUrl
    void setUrl(java.lang.String) -> setUrl
    boolean isComplete() -> isComplete
    boolean isValid() -> isValid
    void setDownloadTask(com.github.snowdream.android.app.downloader.DownloadTask) -> setDownloadTask
    void start(android.content.Context,com.github.snowdream.android.app.downloader.DownloadListener,boolean) -> start
    void stop() -> stop
    void delete() -> delete
com.github.snowdream.android.app.downloader.DownloadType -> com.github.snowdream.android.app.downloader.DownloadType:
    int TYPE_UNKNOWN -> TYPE_UNKNOWN
    int TYPE_TEXT -> TYPE_TEXT
    int TYPE_IMAGE -> TYPE_IMAGE
    int TYPE_MUSIC -> TYPE_MUSIC
    int TYPE_VIDEO -> TYPE_VIDEO
    int TYPE_APP -> TYPE_APP
com.github.snowdream.android.app.downloader.dao.DatabaseConfigUtil -> com.github.snowdream.android.app.downloader.dao.DatabaseConfigUtil:
    void main(java.lang.String[]) -> main
com.github.snowdream.android.app.downloader.dao.DatabaseHelper -> com.github.snowdream.android.app.downloader.dao.DatabaseHelper:
    java.lang.String DATABASE_NAME -> DATABASE_NAME
    int DATABASE_VERSION -> DATABASE_VERSION
    com.j256.ormlite.dao.Dao taskDao -> taskDao
    void onCreate(android.database.sqlite.SQLiteDatabase,com.j256.ormlite.support.ConnectionSource) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,com.j256.ormlite.support.ConnectionSource,int,int) -> onUpgrade
    com.j256.ormlite.dao.Dao getTaskDao() -> getTaskDao
    void close() -> close
com.github.snowdream.android.app.downloader.dao.ISql -> com.github.snowdream.android.app.downloader.dao.ISql:
    void addDownloadTask(com.github.snowdream.android.app.downloader.DownloadTask) -> addDownloadTask
    void updateDownloadTask(com.github.snowdream.android.app.downloader.DownloadTask) -> updateDownloadTask
    com.github.snowdream.android.app.downloader.DownloadTask queryDownloadTask(com.github.snowdream.android.app.downloader.DownloadTask) -> queryDownloadTask
    void deleteDownloadTask(com.github.snowdream.android.app.downloader.DownloadTask) -> deleteDownloadTask
com.github.snowdream.android.app.downloader.dao.ISqlImpl -> com.github.snowdream.android.app.downloader.dao.ISqlImpl:
    com.github.snowdream.android.app.downloader.dao.DatabaseHelper databaseHelper -> databaseHelper
    android.content.Context mContext -> mContext
    void Release() -> Release
    com.github.snowdream.android.app.downloader.dao.DatabaseHelper getHelper() -> getHelper
    void addDownloadTask(com.github.snowdream.android.app.downloader.DownloadTask) -> addDownloadTask
    void updateDownloadTask(com.github.snowdream.android.app.downloader.DownloadTask) -> updateDownloadTask
    com.github.snowdream.android.app.downloader.DownloadTask queryDownloadTask(com.github.snowdream.android.app.downloader.DownloadTask) -> queryDownloadTask
    void deleteDownloadTask(com.github.snowdream.android.app.downloader.DownloadTask) -> deleteDownloadTask
com.github.snowdream.android.util.BuildConfig -> com.github.snowdream.android.util.BuildConfig:
    boolean DEBUG -> DEBUG
    java.lang.String PACKAGE_NAME -> PACKAGE_NAME
    java.lang.String BUILD_TYPE -> BUILD_TYPE
    java.lang.String FLAVOR -> FLAVOR
    int VERSION_CODE -> VERSION_CODE
    java.lang.String VERSION_NAME -> VERSION_NAME
com.github.snowdream.android.util.Log -> com.github.snowdream.android.util.Log:
    int LOG_ALL_TO_FILE -> LOG_ALL_TO_FILE
    int LOG_ERROR_TO_FILE -> LOG_ERROR_TO_FILE
    int LOG_NONE_TO_FILE -> LOG_NONE_TO_FILE
    int LOG_WARN_TO_FILE -> LOG_WARN_TO_FILE
    java.lang.String TAG -> TAG
    boolean isEnable -> isEnable
    java.lang.String logDirPath -> logDirPath
    java.lang.String logFileBaseName -> logFileBaseName
    java.lang.String logFileSuffix -> logFileSuffix
    java.lang.String path -> path
    int policy -> policy
    void d(java.lang.String,java.lang.String) -> d
    void d(java.lang.String) -> d
    java.lang.String buildMessage(com.github.snowdream.android.util.Log$TYPE,java.lang.String,java.lang.String,java.lang.Throwable) -> buildMessage
    void d(java.lang.String,java.lang.String,java.lang.Throwable) -> d
    void d(java.lang.String,java.lang.Throwable) -> d
    void e(java.lang.String,java.lang.String) -> e
    void e(java.lang.String) -> e
    void e(java.lang.String,java.lang.String,java.lang.Throwable) -> e
    void e(java.lang.String,java.lang.Throwable) -> e
    java.util.concurrent.ExecutorService getExecutor() -> getExecutor
    void setExecutor(java.util.concurrent.ExecutorService) -> setExecutor
    java.lang.String getPath() -> getPath
    void setPath(java.lang.String) -> setPath
    void createLogDir(java.lang.String) -> createLogDir
    int getPolicy() -> getPolicy
    void setPolicy(int) -> setPolicy
    java.lang.String getStackTraceString(java.lang.Throwable) -> getStackTraceString
    java.lang.String getTag() -> getTag
    void setTag(java.lang.String) -> setTag
    void i(java.lang.String,java.lang.String) -> i
    void i(java.lang.String) -> i
    void i(java.lang.String,java.lang.String,java.lang.Throwable) -> i
    void i(java.lang.String,java.lang.Throwable) -> i
    boolean isEnabled() -> isEnabled
    void setEnabled(boolean) -> setEnabled
    boolean isLoggable(java.lang.String,int) -> isLoggable
    int println(int,java.lang.String,java.lang.String) -> println
    void setPath(java.lang.String,java.lang.String,java.lang.String) -> setPath
    void v(java.lang.String,java.lang.String) -> v
    void v(java.lang.String) -> v
    void v(java.lang.String,java.lang.String,java.lang.Throwable) -> v
    void v(java.lang.String,java.lang.Throwable) -> v
    void w(java.lang.Throwable) -> w
    void w(java.lang.String,java.lang.String) -> w
    void w(java.lang.String) -> w
    void w(java.lang.String,java.lang.String,java.lang.Throwable) -> w
    void w(java.lang.String,java.lang.Throwable) -> w
com.github.snowdream.android.util.Log$TYPE -> com.github.snowdream.android.util.Log$TYPE:
    com.github.snowdream.android.util.Log$TYPE INFO -> INFO
    com.github.snowdream.android.util.Log$TYPE DEBUG -> DEBUG
    com.github.snowdream.android.util.Log$TYPE VERBOSE -> VERBOSE
    com.github.snowdream.android.util.Log$TYPE WARN -> WARN
    com.github.snowdream.android.util.Log$TYPE ERROR -> ERROR
    com.github.snowdream.android.util.Log$TYPE[] $VALUES -> $VALUES
    com.github.snowdream.android.util.Log$TYPE[] values() -> values
    com.github.snowdream.android.util.Log$TYPE valueOf(java.lang.String) -> valueOf
com.github.snowdream.android.util.Log2File -> com.github.snowdream.android.util.Log2File:
    java.util.concurrent.ExecutorService executor -> executor
    java.util.concurrent.ExecutorService getExecutor() -> getExecutor
    void setExecutor(java.util.concurrent.ExecutorService) -> setExecutor
    void log2file(java.lang.String,java.lang.String) -> log2file
    java.io.File GetFileFromPath(java.lang.String) -> GetFileFromPath
    java.io.File access$000(java.lang.String) -> access$000
com.github.snowdream.android.util.Log2File$1 -> com.github.snowdream.android.util.Log2File$1:
    java.lang.String val$path -> val$path
    java.lang.String val$str -> val$str
    void run() -> run
com.github.snowdream.android.util.R -> com.github.snowdream.android.util.R:
com.github.snowdream.android.util.R$attr -> com.github.snowdream.android.util.R$attr:
com.github.snowdream.android.util.R$drawable -> com.github.snowdream.android.util.R$drawable:
    int ic_launcher -> ic_launcher
com.github.snowdream.android.util.R$string -> com.github.snowdream.android.util.R$string:
    int app_name -> app_name
com.github.snowdream.android.util.R$style -> com.github.snowdream.android.util.R$style:
    int AppBaseTheme -> AppBaseTheme
    int AppTheme -> AppTheme
com.github.snowdream.android.util.concurrent.AsyncTask -> com.github.snowdream.android.util.concurrent.AsyncTask:
    com.github.snowdream.android.util.concurrent.TaskListener listener -> listener
    com.github.snowdream.android.util.concurrent.TaskListener getListener() -> getListener
    void setListener(com.github.snowdream.android.util.concurrent.TaskListener) -> setListener
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onCancelled() -> onCancelled
    void onCancelled(java.lang.Object) -> onCancelled
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onPreExecute() -> onPreExecute
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    void setDefaultExecutor(java.util.concurrent.Executor) -> setDefaultExecutor
    java.util.concurrent.Executor getDefaultExecutor() -> getDefaultExecutor
com.github.snowdream.android.util.concurrent.TaskListener -> com.github.snowdream.android.util.concurrent.TaskListener:
    void onStart() -> onStart
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    void onSuccess(java.lang.Object) -> onSuccess
    void onCancelled() -> onCancelled
    void onError(java.lang.Throwable) -> onError
    void onFinish() -> onFinish
com.github.snowdream.android.util.concurrent.multithread.BuildConfig -> com.github.snowdream.android.util.concurrent.multithread.BuildConfig:
    boolean DEBUG -> DEBUG
    java.lang.String PACKAGE_NAME -> PACKAGE_NAME
    java.lang.String BUILD_TYPE -> BUILD_TYPE
    java.lang.String FLAVOR -> FLAVOR
    int VERSION_CODE -> VERSION_CODE
    java.lang.String VERSION_NAME -> VERSION_NAME
com.google.zxing.BarcodeFormat -> com.google.zxing.BarcodeFormat:
    com.google.zxing.BarcodeFormat AZTEC -> AZTEC
    com.google.zxing.BarcodeFormat CODABAR -> CODABAR
    com.google.zxing.BarcodeFormat CODE_39 -> CODE_39
    com.google.zxing.BarcodeFormat CODE_93 -> CODE_93
    com.google.zxing.BarcodeFormat CODE_128 -> CODE_128
    com.google.zxing.BarcodeFormat DATA_MATRIX -> DATA_MATRIX
    com.google.zxing.BarcodeFormat EAN_8 -> EAN_8
    com.google.zxing.BarcodeFormat EAN_13 -> EAN_13
    com.google.zxing.BarcodeFormat ITF -> ITF
    com.google.zxing.BarcodeFormat MAXICODE -> MAXICODE
    com.google.zxing.BarcodeFormat PDF_417 -> PDF_417
    com.google.zxing.BarcodeFormat QR_CODE -> QR_CODE
    com.google.zxing.BarcodeFormat RSS_14 -> RSS_14
    com.google.zxing.BarcodeFormat RSS_EXPANDED -> RSS_EXPANDED
    com.google.zxing.BarcodeFormat UPC_A -> UPC_A
    com.google.zxing.BarcodeFormat UPC_E -> UPC_E
    com.google.zxing.BarcodeFormat UPC_EAN_EXTENSION -> UPC_EAN_EXTENSION
    com.google.zxing.BarcodeFormat[] $VALUES -> $VALUES
    com.google.zxing.BarcodeFormat[] values() -> values
    com.google.zxing.BarcodeFormat valueOf(java.lang.String) -> valueOf
com.google.zxing.Binarizer -> com.google.zxing.Binarizer:
    com.google.zxing.LuminanceSource source -> source
    com.google.zxing.LuminanceSource getLuminanceSource() -> getLuminanceSource
    com.google.zxing.common.BitArray getBlackRow(int,com.google.zxing.common.BitArray) -> getBlackRow
    com.google.zxing.common.BitMatrix getBlackMatrix() -> getBlackMatrix
    com.google.zxing.Binarizer createBinarizer(com.google.zxing.LuminanceSource) -> createBinarizer
    int getWidth() -> getWidth
    int getHeight() -> getHeight
com.google.zxing.BinaryBitmap -> com.google.zxing.BinaryBitmap:
    com.google.zxing.Binarizer binarizer -> binarizer
    com.google.zxing.common.BitMatrix matrix -> matrix
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.google.zxing.common.BitArray getBlackRow(int,com.google.zxing.common.BitArray) -> getBlackRow
    com.google.zxing.common.BitMatrix getBlackMatrix() -> getBlackMatrix
    boolean isCropSupported() -> isCropSupported
    com.google.zxing.BinaryBitmap crop(int,int,int,int) -> crop
    boolean isRotateSupported() -> isRotateSupported
    com.google.zxing.BinaryBitmap rotateCounterClockwise() -> rotateCounterClockwise
    com.google.zxing.BinaryBitmap rotateCounterClockwise45() -> rotateCounterClockwise45
com.google.zxing.ChecksumException -> com.google.zxing.ChecksumException:
    com.google.zxing.ChecksumException instance -> instance
    com.google.zxing.ChecksumException getChecksumInstance() -> getChecksumInstance
com.google.zxing.DecodeHintType -> com.google.zxing.DecodeHintType:
    com.google.zxing.DecodeHintType OTHER -> OTHER
    com.google.zxing.DecodeHintType PURE_BARCODE -> PURE_BARCODE
    com.google.zxing.DecodeHintType POSSIBLE_FORMATS -> POSSIBLE_FORMATS
    com.google.zxing.DecodeHintType TRY_HARDER -> TRY_HARDER
    com.google.zxing.DecodeHintType CHARACTER_SET -> CHARACTER_SET
    com.google.zxing.DecodeHintType ALLOWED_LENGTHS -> ALLOWED_LENGTHS
    com.google.zxing.DecodeHintType ASSUME_CODE_39_CHECK_DIGIT -> ASSUME_CODE_39_CHECK_DIGIT
    com.google.zxing.DecodeHintType ASSUME_GS1 -> ASSUME_GS1
    com.google.zxing.DecodeHintType RETURN_CODABAR_START_END -> RETURN_CODABAR_START_END
    com.google.zxing.DecodeHintType NEED_RESULT_POINT_CALLBACK -> NEED_RESULT_POINT_CALLBACK
    java.lang.Class valueType -> valueType
    com.google.zxing.DecodeHintType[] $VALUES -> $VALUES
    com.google.zxing.DecodeHintType[] values() -> values
    com.google.zxing.DecodeHintType valueOf(java.lang.String) -> valueOf
    java.lang.Class getValueType() -> getValueType
com.google.zxing.Dimension -> com.google.zxing.Dimension:
    int width -> width
    int height -> height
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.zxing.EncodeHintType -> com.google.zxing.EncodeHintType:
    com.google.zxing.EncodeHintType ERROR_CORRECTION -> ERROR_CORRECTION
    com.google.zxing.EncodeHintType CHARACTER_SET -> CHARACTER_SET
    com.google.zxing.EncodeHintType DATA_MATRIX_SHAPE -> DATA_MATRIX_SHAPE
    com.google.zxing.EncodeHintType MIN_SIZE -> MIN_SIZE
    com.google.zxing.EncodeHintType MAX_SIZE -> MAX_SIZE
    com.google.zxing.EncodeHintType MARGIN -> MARGIN
    com.google.zxing.EncodeHintType PDF417_COMPACT -> PDF417_COMPACT
    com.google.zxing.EncodeHintType PDF417_COMPACTION -> PDF417_COMPACTION
    com.google.zxing.EncodeHintType PDF417_DIMENSIONS -> PDF417_DIMENSIONS
    com.google.zxing.EncodeHintType AZTEC_LAYERS -> AZTEC_LAYERS
    com.google.zxing.EncodeHintType[] $VALUES -> $VALUES
    com.google.zxing.EncodeHintType[] values() -> values
    com.google.zxing.EncodeHintType valueOf(java.lang.String) -> valueOf
com.google.zxing.FormatException -> com.google.zxing.FormatException:
    com.google.zxing.FormatException instance -> instance
    com.google.zxing.FormatException getFormatInstance() -> getFormatInstance
com.google.zxing.InvertedLuminanceSource -> com.google.zxing.InvertedLuminanceSource:
    com.google.zxing.LuminanceSource delegate -> delegate
    byte[] getRow(int,byte[]) -> getRow
    byte[] getMatrix() -> getMatrix
    boolean isCropSupported() -> isCropSupported
    com.google.zxing.LuminanceSource crop(int,int,int,int) -> crop
    boolean isRotateSupported() -> isRotateSupported
    com.google.zxing.LuminanceSource invert() -> invert
    com.google.zxing.LuminanceSource rotateCounterClockwise() -> rotateCounterClockwise
    com.google.zxing.LuminanceSource rotateCounterClockwise45() -> rotateCounterClockwise45
com.google.zxing.LuminanceSource -> com.google.zxing.LuminanceSource:
    int width -> width
    int height -> height
    byte[] getRow(int,byte[]) -> getRow
    byte[] getMatrix() -> getMatrix
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    boolean isCropSupported() -> isCropSupported
    com.google.zxing.LuminanceSource crop(int,int,int,int) -> crop
    boolean isRotateSupported() -> isRotateSupported
    com.google.zxing.LuminanceSource invert() -> invert
    com.google.zxing.LuminanceSource rotateCounterClockwise() -> rotateCounterClockwise
    com.google.zxing.LuminanceSource rotateCounterClockwise45() -> rotateCounterClockwise45
    java.lang.String toString() -> toString
com.google.zxing.MultiFormatReader -> com.google.zxing.MultiFormatReader:
    java.util.Map hints -> hints
    com.google.zxing.Reader[] readers -> readers
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap) -> decode
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> decode
    com.google.zxing.Result decodeWithState(com.google.zxing.BinaryBitmap) -> decodeWithState
    void setHints(java.util.Map) -> setHints
    void reset() -> reset
    com.google.zxing.Result decodeInternal(com.google.zxing.BinaryBitmap) -> decodeInternal
com.google.zxing.MultiFormatWriter -> com.google.zxing.MultiFormatWriter:
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int) -> encode
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
com.google.zxing.MultiFormatWriter$1 -> com.google.zxing.MultiFormatWriter$1:
    int[] $SwitchMap$com$google$zxing$BarcodeFormat -> $SwitchMap$com$google$zxing$BarcodeFormat
com.google.zxing.NotFoundException -> com.google.zxing.NotFoundException:
    com.google.zxing.NotFoundException instance -> instance
    com.google.zxing.NotFoundException getNotFoundInstance() -> getNotFoundInstance
com.google.zxing.PlanarYUVLuminanceSource -> com.google.zxing.PlanarYUVLuminanceSource:
    int THUMBNAIL_SCALE_FACTOR -> THUMBNAIL_SCALE_FACTOR
    byte[] yuvData -> yuvData
    int dataWidth -> dataWidth
    int dataHeight -> dataHeight
    int left -> left
    int top -> top
    byte[] getRow(int,byte[]) -> getRow
    byte[] getMatrix() -> getMatrix
    boolean isCropSupported() -> isCropSupported
    com.google.zxing.LuminanceSource crop(int,int,int,int) -> crop
    int[] renderThumbnail() -> renderThumbnail
    int getThumbnailWidth() -> getThumbnailWidth
    int getThumbnailHeight() -> getThumbnailHeight
    void reverseHorizontal(int,int) -> reverseHorizontal
com.google.zxing.RGBLuminanceSource -> com.google.zxing.RGBLuminanceSource:
    byte[] luminances -> luminances
    int dataWidth -> dataWidth
    int dataHeight -> dataHeight
    int left -> left
    int top -> top
    byte[] getRow(int,byte[]) -> getRow
    byte[] getMatrix() -> getMatrix
    boolean isCropSupported() -> isCropSupported
    com.google.zxing.LuminanceSource crop(int,int,int,int) -> crop
com.google.zxing.Reader -> com.google.zxing.Reader:
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap) -> decode
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> decode
    void reset() -> reset
com.google.zxing.ReaderException -> com.google.zxing.ReaderException:
    java.lang.Throwable fillInStackTrace() -> fillInStackTrace
com.google.zxing.Result -> com.google.zxing.Result:
    java.lang.String text -> text
    byte[] rawBytes -> rawBytes
    com.google.zxing.ResultPoint[] resultPoints -> resultPoints
    com.google.zxing.BarcodeFormat format -> format
    java.util.Map resultMetadata -> resultMetadata
    long timestamp -> timestamp
    java.lang.String getText() -> getText
    byte[] getRawBytes() -> getRawBytes
    com.google.zxing.ResultPoint[] getResultPoints() -> getResultPoints
    com.google.zxing.BarcodeFormat getBarcodeFormat() -> getBarcodeFormat
    java.util.Map getResultMetadata() -> getResultMetadata
    void putMetadata(com.google.zxing.ResultMetadataType,java.lang.Object) -> putMetadata
    void putAllMetadata(java.util.Map) -> putAllMetadata
    void addResultPoints(com.google.zxing.ResultPoint[]) -> addResultPoints
    long getTimestamp() -> getTimestamp
    java.lang.String toString() -> toString
com.google.zxing.ResultMetadataType -> com.google.zxing.ResultMetadataType:
    com.google.zxing.ResultMetadataType OTHER -> OTHER
    com.google.zxing.ResultMetadataType ORIENTATION -> ORIENTATION
    com.google.zxing.ResultMetadataType BYTE_SEGMENTS -> BYTE_SEGMENTS
    com.google.zxing.ResultMetadataType ERROR_CORRECTION_LEVEL -> ERROR_CORRECTION_LEVEL
    com.google.zxing.ResultMetadataType ISSUE_NUMBER -> ISSUE_NUMBER
    com.google.zxing.ResultMetadataType SUGGESTED_PRICE -> SUGGESTED_PRICE
    com.google.zxing.ResultMetadataType POSSIBLE_COUNTRY -> POSSIBLE_COUNTRY
    com.google.zxing.ResultMetadataType UPC_EAN_EXTENSION -> UPC_EAN_EXTENSION
    com.google.zxing.ResultMetadataType PDF417_EXTRA_METADATA -> PDF417_EXTRA_METADATA
    com.google.zxing.ResultMetadataType[] $VALUES -> $VALUES
    com.google.zxing.ResultMetadataType[] values() -> values
    com.google.zxing.ResultMetadataType valueOf(java.lang.String) -> valueOf
com.google.zxing.ResultPoint -> com.google.zxing.ResultPoint:
    float x -> x
    float y -> y
    float getX() -> getX
    float getY() -> getY
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    void orderBestPatterns(com.google.zxing.ResultPoint[]) -> orderBestPatterns
    float distance(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> distance
    float crossProductZ(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> crossProductZ
com.google.zxing.ResultPointCallback -> com.google.zxing.ResultPointCallback:
    void foundPossibleResultPoint(com.google.zxing.ResultPoint) -> foundPossibleResultPoint
com.google.zxing.Writer -> com.google.zxing.Writer:
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int) -> encode
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
com.google.zxing.WriterException -> com.google.zxing.WriterException:
com.google.zxing.aztec.AztecDetectorResult -> com.google.zxing.aztec.AztecDetectorResult:
    boolean compact -> compact
    int nbDatablocks -> nbDatablocks
    int nbLayers -> nbLayers
    int getNbLayers() -> getNbLayers
    int getNbDatablocks() -> getNbDatablocks
    boolean isCompact() -> isCompact
com.google.zxing.aztec.AztecReader -> com.google.zxing.aztec.AztecReader:
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap) -> decode
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> decode
    void reset() -> reset
com.google.zxing.aztec.AztecWriter -> com.google.zxing.aztec.AztecWriter:
    java.nio.charset.Charset DEFAULT_CHARSET -> DEFAULT_CHARSET
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int) -> encode
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.nio.charset.Charset,int,int) -> encode
    com.google.zxing.common.BitMatrix renderResult(com.google.zxing.aztec.encoder.AztecCode,int,int) -> renderResult
com.google.zxing.aztec.decoder.Decoder -> com.google.zxing.aztec.decoder.Decoder:
    java.lang.String[] UPPER_TABLE -> UPPER_TABLE
    java.lang.String[] LOWER_TABLE -> LOWER_TABLE
    java.lang.String[] MIXED_TABLE -> MIXED_TABLE
    java.lang.String[] PUNCT_TABLE -> PUNCT_TABLE
    java.lang.String[] DIGIT_TABLE -> DIGIT_TABLE
    com.google.zxing.aztec.AztecDetectorResult ddata -> ddata
    com.google.zxing.common.DecoderResult decode(com.google.zxing.aztec.AztecDetectorResult) -> decode
    java.lang.String highLevelDecode(boolean[]) -> highLevelDecode
    java.lang.String getEncodedData(boolean[]) -> getEncodedData
    com.google.zxing.aztec.decoder.Decoder$Table getTable(char) -> getTable
    java.lang.String getCharacter(com.google.zxing.aztec.decoder.Decoder$Table,int) -> getCharacter
    boolean[] correctBits(boolean[]) -> correctBits
    boolean[] extractBits(com.google.zxing.common.BitMatrix) -> extractBits
    int readCode(boolean[],int,int) -> readCode
    int totalBitsInLayer(int,boolean) -> totalBitsInLayer
com.google.zxing.aztec.decoder.Decoder$1 -> com.google.zxing.aztec.decoder.Decoder$1:
    int[] $SwitchMap$com$google$zxing$aztec$decoder$Decoder$Table -> $SwitchMap$com$google$zxing$aztec$decoder$Decoder$Table
com.google.zxing.aztec.decoder.Decoder$Table -> com.google.zxing.aztec.decoder.Decoder$Table:
    com.google.zxing.aztec.decoder.Decoder$Table UPPER -> UPPER
    com.google.zxing.aztec.decoder.Decoder$Table LOWER -> LOWER
    com.google.zxing.aztec.decoder.Decoder$Table MIXED -> MIXED
    com.google.zxing.aztec.decoder.Decoder$Table DIGIT -> DIGIT
    com.google.zxing.aztec.decoder.Decoder$Table PUNCT -> PUNCT
    com.google.zxing.aztec.decoder.Decoder$Table BINARY -> BINARY
    com.google.zxing.aztec.decoder.Decoder$Table[] $VALUES -> $VALUES
    com.google.zxing.aztec.decoder.Decoder$Table[] values() -> values
    com.google.zxing.aztec.decoder.Decoder$Table valueOf(java.lang.String) -> valueOf
com.google.zxing.aztec.detector.Detector -> com.google.zxing.aztec.detector.Detector:
    com.google.zxing.common.BitMatrix image -> image
    boolean compact -> compact
    int nbLayers -> nbLayers
    int nbDataBlocks -> nbDataBlocks
    int nbCenterLayers -> nbCenterLayers
    int shift -> shift
    int[] EXPECTED_CORNER_BITS -> EXPECTED_CORNER_BITS
    com.google.zxing.aztec.AztecDetectorResult detect() -> detect
    com.google.zxing.aztec.AztecDetectorResult detect(boolean) -> detect
    void extractParameters(com.google.zxing.ResultPoint[]) -> extractParameters
    int getRotation(int[],int) -> getRotation
    int getCorrectedParameterData(long,boolean) -> getCorrectedParameterData
    com.google.zxing.ResultPoint[] getBullsEyeCorners(com.google.zxing.aztec.detector.Detector$Point) -> getBullsEyeCorners
    com.google.zxing.aztec.detector.Detector$Point getMatrixCenter() -> getMatrixCenter
    com.google.zxing.ResultPoint[] getMatrixCornerPoints(com.google.zxing.ResultPoint[]) -> getMatrixCornerPoints
    com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> sampleGrid
    int sampleLine(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,int) -> sampleLine
    boolean isWhiteOrBlackRectangle(com.google.zxing.aztec.detector.Detector$Point,com.google.zxing.aztec.detector.Detector$Point,com.google.zxing.aztec.detector.Detector$Point,com.google.zxing.aztec.detector.Detector$Point) -> isWhiteOrBlackRectangle
    int getColor(com.google.zxing.aztec.detector.Detector$Point,com.google.zxing.aztec.detector.Detector$Point) -> getColor
    com.google.zxing.aztec.detector.Detector$Point getFirstDifferent(com.google.zxing.aztec.detector.Detector$Point,boolean,int,int) -> getFirstDifferent
    com.google.zxing.ResultPoint[] expandSquare(com.google.zxing.ResultPoint[],float,float) -> expandSquare
    boolean isValid(int,int) -> isValid
    boolean isValid(com.google.zxing.ResultPoint) -> isValid
    float distance(com.google.zxing.aztec.detector.Detector$Point,com.google.zxing.aztec.detector.Detector$Point) -> distance
    float distance(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> distance
    int getDimension() -> getDimension
com.google.zxing.aztec.detector.Detector$Point -> com.google.zxing.aztec.detector.Detector$Point:
    int x -> x
    int y -> y
    com.google.zxing.ResultPoint toResultPoint() -> toResultPoint
    int getX() -> getX
    int getY() -> getY
    java.lang.String toString() -> toString
com.google.zxing.aztec.encoder.AztecCode -> com.google.zxing.aztec.encoder.AztecCode:
    boolean compact -> compact
    int size -> size
    int layers -> layers
    int codeWords -> codeWords
    com.google.zxing.common.BitMatrix matrix -> matrix
    boolean isCompact() -> isCompact
    void setCompact(boolean) -> setCompact
    int getSize() -> getSize
    void setSize(int) -> setSize
    int getLayers() -> getLayers
    void setLayers(int) -> setLayers
    int getCodeWords() -> getCodeWords
    void setCodeWords(int) -> setCodeWords
    com.google.zxing.common.BitMatrix getMatrix() -> getMatrix
    void setMatrix(com.google.zxing.common.BitMatrix) -> setMatrix
com.google.zxing.aztec.encoder.BinaryShiftToken -> com.google.zxing.aztec.encoder.BinaryShiftToken:
    short binaryShiftStart -> binaryShiftStart
    short binaryShiftByteCount -> binaryShiftByteCount
    void appendTo(com.google.zxing.common.BitArray,byte[]) -> appendTo
    java.lang.String toString() -> toString
com.google.zxing.aztec.encoder.Encoder -> com.google.zxing.aztec.encoder.Encoder:
    int DEFAULT_EC_PERCENT -> DEFAULT_EC_PERCENT
    int DEFAULT_AZTEC_LAYERS -> DEFAULT_AZTEC_LAYERS
    int MAX_NB_BITS -> MAX_NB_BITS
    int MAX_NB_BITS_COMPACT -> MAX_NB_BITS_COMPACT
    int[] WORD_SIZE -> WORD_SIZE
    com.google.zxing.aztec.encoder.AztecCode encode(byte[]) -> encode
    com.google.zxing.aztec.encoder.AztecCode encode(byte[],int,int) -> encode
    void drawBullsEye(com.google.zxing.common.BitMatrix,int,int) -> drawBullsEye
    com.google.zxing.common.BitArray generateModeMessage(boolean,int,int) -> generateModeMessage
    void drawModeMessage(com.google.zxing.common.BitMatrix,boolean,int,com.google.zxing.common.BitArray) -> drawModeMessage
    com.google.zxing.common.BitArray generateCheckWords(com.google.zxing.common.BitArray,int,int) -> generateCheckWords
    int[] bitsToWords(com.google.zxing.common.BitArray,int,int) -> bitsToWords
    com.google.zxing.common.reedsolomon.GenericGF getGF(int) -> getGF
    com.google.zxing.common.BitArray stuffBits(com.google.zxing.common.BitArray,int) -> stuffBits
    int totalBitsInLayer(int,boolean) -> totalBitsInLayer
com.google.zxing.aztec.encoder.HighLevelEncoder -> com.google.zxing.aztec.encoder.HighLevelEncoder:
    java.lang.String[] MODE_NAMES -> MODE_NAMES
    int MODE_UPPER -> MODE_UPPER
    int MODE_LOWER -> MODE_LOWER
    int MODE_DIGIT -> MODE_DIGIT
    int MODE_MIXED -> MODE_MIXED
    int MODE_PUNCT -> MODE_PUNCT
    int[][] LATCH_TABLE -> LATCH_TABLE
    int[][] CHAR_MAP -> CHAR_MAP
    int[][] SHIFT_TABLE -> SHIFT_TABLE
    byte[] text -> text
    com.google.zxing.common.BitArray encode() -> encode
    java.util.Collection updateStateListForChar(java.lang.Iterable,int) -> updateStateListForChar
    void updateStateForChar(com.google.zxing.aztec.encoder.State,int,java.util.Collection) -> updateStateForChar
    java.util.Collection updateStateListForPair(java.lang.Iterable,int,int) -> updateStateListForPair
    void updateStateForPair(com.google.zxing.aztec.encoder.State,int,int,java.util.Collection) -> updateStateForPair
    java.util.Collection simplifyStates(java.lang.Iterable) -> simplifyStates
com.google.zxing.aztec.encoder.HighLevelEncoder$1 -> com.google.zxing.aztec.encoder.HighLevelEncoder$1:
    com.google.zxing.aztec.encoder.HighLevelEncoder this$0 -> this$0
    int compare(com.google.zxing.aztec.encoder.State,com.google.zxing.aztec.encoder.State) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.zxing.aztec.encoder.SimpleToken -> com.google.zxing.aztec.encoder.SimpleToken:
    short value -> value
    short bitCount -> bitCount
    void appendTo(com.google.zxing.common.BitArray,byte[]) -> appendTo
    java.lang.String toString() -> toString
com.google.zxing.aztec.encoder.State -> com.google.zxing.aztec.encoder.State:
    com.google.zxing.aztec.encoder.State INITIAL_STATE -> INITIAL_STATE
    int mode -> mode
    com.google.zxing.aztec.encoder.Token token -> token
    int binaryShiftByteCount -> binaryShiftByteCount
    int bitCount -> bitCount
    int getMode() -> getMode
    com.google.zxing.aztec.encoder.Token getToken() -> getToken
    int getBinaryShiftByteCount() -> getBinaryShiftByteCount
    int getBitCount() -> getBitCount
    com.google.zxing.aztec.encoder.State latchAndAppend(int,int) -> latchAndAppend
    com.google.zxing.aztec.encoder.State shiftAndAppend(int,int) -> shiftAndAppend
    com.google.zxing.aztec.encoder.State addBinaryShiftChar(int) -> addBinaryShiftChar
    com.google.zxing.aztec.encoder.State endBinaryShift(int) -> endBinaryShift
    boolean isBetterThanOrEqualTo(com.google.zxing.aztec.encoder.State) -> isBetterThanOrEqualTo
    com.google.zxing.common.BitArray toBitArray(byte[]) -> toBitArray
    java.lang.String toString() -> toString
com.google.zxing.aztec.encoder.Token -> com.google.zxing.aztec.encoder.Token:
    com.google.zxing.aztec.encoder.Token EMPTY -> EMPTY
    com.google.zxing.aztec.encoder.Token previous -> previous
    com.google.zxing.aztec.encoder.Token getPrevious() -> getPrevious
    com.google.zxing.aztec.encoder.Token add(int,int) -> add
    com.google.zxing.aztec.encoder.Token addBinaryShift(int,int) -> addBinaryShift
    void appendTo(com.google.zxing.common.BitArray,byte[]) -> appendTo
com.google.zxing.client.result.AbstractDoCoMoResultParser -> com.google.zxing.client.result.AbstractDoCoMoResultParser:
    java.lang.String[] matchDoCoMoPrefixedField(java.lang.String,java.lang.String,boolean) -> matchDoCoMoPrefixedField
    java.lang.String matchSingleDoCoMoPrefixedField(java.lang.String,java.lang.String,boolean) -> matchSingleDoCoMoPrefixedField
com.google.zxing.client.result.AddressBookAUResultParser -> com.google.zxing.client.result.AddressBookAUResultParser:
    com.google.zxing.client.result.AddressBookParsedResult parse(com.google.zxing.Result) -> parse
    java.lang.String[] matchMultipleValuePrefix(java.lang.String,int,java.lang.String,boolean) -> matchMultipleValuePrefix
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.AddressBookDoCoMoResultParser -> com.google.zxing.client.result.AddressBookDoCoMoResultParser:
    com.google.zxing.client.result.AddressBookParsedResult parse(com.google.zxing.Result) -> parse
    java.lang.String parseName(java.lang.String) -> parseName
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.AddressBookParsedResult -> com.google.zxing.client.result.AddressBookParsedResult:
    java.lang.String[] names -> names
    java.lang.String[] nicknames -> nicknames
    java.lang.String pronunciation -> pronunciation
    java.lang.String[] phoneNumbers -> phoneNumbers
    java.lang.String[] phoneTypes -> phoneTypes
    java.lang.String[] emails -> emails
    java.lang.String[] emailTypes -> emailTypes
    java.lang.String instantMessenger -> instantMessenger
    java.lang.String note -> note
    java.lang.String[] addresses -> addresses
    java.lang.String[] addressTypes -> addressTypes
    java.lang.String org -> org
    java.lang.String birthday -> birthday
    java.lang.String title -> title
    java.lang.String[] urls -> urls
    java.lang.String[] geo -> geo
    java.lang.String[] getNames() -> getNames
    java.lang.String[] getNicknames() -> getNicknames
    java.lang.String getPronunciation() -> getPronunciation
    java.lang.String[] getPhoneNumbers() -> getPhoneNumbers
    java.lang.String[] getPhoneTypes() -> getPhoneTypes
    java.lang.String[] getEmails() -> getEmails
    java.lang.String[] getEmailTypes() -> getEmailTypes
    java.lang.String getInstantMessenger() -> getInstantMessenger
    java.lang.String getNote() -> getNote
    java.lang.String[] getAddresses() -> getAddresses
    java.lang.String[] getAddressTypes() -> getAddressTypes
    java.lang.String getTitle() -> getTitle
    java.lang.String getOrg() -> getOrg
    java.lang.String[] getURLs() -> getURLs
    java.lang.String getBirthday() -> getBirthday
    java.lang.String[] getGeo() -> getGeo
    java.lang.String getDisplayResult() -> getDisplayResult
com.google.zxing.client.result.BizcardResultParser -> com.google.zxing.client.result.BizcardResultParser:
    com.google.zxing.client.result.AddressBookParsedResult parse(com.google.zxing.Result) -> parse
    java.lang.String[] buildPhoneNumbers(java.lang.String,java.lang.String,java.lang.String) -> buildPhoneNumbers
    java.lang.String buildName(java.lang.String,java.lang.String) -> buildName
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.BookmarkDoCoMoResultParser -> com.google.zxing.client.result.BookmarkDoCoMoResultParser:
    com.google.zxing.client.result.URIParsedResult parse(com.google.zxing.Result) -> parse
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.CalendarParsedResult -> com.google.zxing.client.result.CalendarParsedResult:
    java.util.regex.Pattern RFC2445_DURATION -> RFC2445_DURATION
    long[] RFC2445_DURATION_FIELD_UNITS -> RFC2445_DURATION_FIELD_UNITS
    java.util.regex.Pattern DATE_TIME -> DATE_TIME
    java.text.DateFormat DATE_FORMAT -> DATE_FORMAT
    java.text.DateFormat DATE_TIME_FORMAT -> DATE_TIME_FORMAT
    java.lang.String summary -> summary
    java.util.Date start -> start
    boolean startAllDay -> startAllDay
    java.util.Date end -> end
    boolean endAllDay -> endAllDay
    java.lang.String location -> location
    java.lang.String organizer -> organizer
    java.lang.String[] attendees -> attendees
    java.lang.String description -> description
    double latitude -> latitude
    double longitude -> longitude
    java.lang.String getSummary() -> getSummary
    java.util.Date getStart() -> getStart
    boolean isStartAllDay() -> isStartAllDay
    java.util.Date getEnd() -> getEnd
    boolean isEndAllDay() -> isEndAllDay
    java.lang.String getLocation() -> getLocation
    java.lang.String getOrganizer() -> getOrganizer
    java.lang.String[] getAttendees() -> getAttendees
    java.lang.String getDescription() -> getDescription
    double getLatitude() -> getLatitude
    double getLongitude() -> getLongitude
    java.lang.String getDisplayResult() -> getDisplayResult
    java.util.Date parseDate(java.lang.String) -> parseDate
    java.lang.String format(boolean,java.util.Date) -> format
    long parseDurationMS(java.lang.CharSequence) -> parseDurationMS
com.google.zxing.client.result.EmailAddressParsedResult -> com.google.zxing.client.result.EmailAddressParsedResult:
    java.lang.String emailAddress -> emailAddress
    java.lang.String subject -> subject
    java.lang.String body -> body
    java.lang.String mailtoURI -> mailtoURI
    java.lang.String getEmailAddress() -> getEmailAddress
    java.lang.String getSubject() -> getSubject
    java.lang.String getBody() -> getBody
    java.lang.String getMailtoURI() -> getMailtoURI
    java.lang.String getDisplayResult() -> getDisplayResult
com.google.zxing.client.result.EmailAddressResultParser -> com.google.zxing.client.result.EmailAddressResultParser:
    com.google.zxing.client.result.EmailAddressParsedResult parse(com.google.zxing.Result) -> parse
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.EmailDoCoMoResultParser -> com.google.zxing.client.result.EmailDoCoMoResultParser:
    java.util.regex.Pattern ATEXT_ALPHANUMERIC -> ATEXT_ALPHANUMERIC
    com.google.zxing.client.result.EmailAddressParsedResult parse(com.google.zxing.Result) -> parse
    boolean isBasicallyValidEmailAddress(java.lang.String) -> isBasicallyValidEmailAddress
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.ExpandedProductParsedResult -> com.google.zxing.client.result.ExpandedProductParsedResult:
    java.lang.String KILOGRAM -> KILOGRAM
    java.lang.String POUND -> POUND
    java.lang.String rawText -> rawText
    java.lang.String productID -> productID
    java.lang.String sscc -> sscc
    java.lang.String lotNumber -> lotNumber
    java.lang.String productionDate -> productionDate
    java.lang.String packagingDate -> packagingDate
    java.lang.String bestBeforeDate -> bestBeforeDate
    java.lang.String expirationDate -> expirationDate
    java.lang.String weight -> weight
    java.lang.String weightType -> weightType
    java.lang.String weightIncrement -> weightIncrement
    java.lang.String price -> price
    java.lang.String priceIncrement -> priceIncrement
    java.lang.String priceCurrency -> priceCurrency
    java.util.Map uncommonAIs -> uncommonAIs
    boolean equals(java.lang.Object) -> equals
    boolean equalsOrNull(java.lang.Object,java.lang.Object) -> equalsOrNull
    int hashCode() -> hashCode
    int hashNotNull(java.lang.Object) -> hashNotNull
    java.lang.String getRawText() -> getRawText
    java.lang.String getProductID() -> getProductID
    java.lang.String getSscc() -> getSscc
    java.lang.String getLotNumber() -> getLotNumber
    java.lang.String getProductionDate() -> getProductionDate
    java.lang.String getPackagingDate() -> getPackagingDate
    java.lang.String getBestBeforeDate() -> getBestBeforeDate
    java.lang.String getExpirationDate() -> getExpirationDate
    java.lang.String getWeight() -> getWeight
    java.lang.String getWeightType() -> getWeightType
    java.lang.String getWeightIncrement() -> getWeightIncrement
    java.lang.String getPrice() -> getPrice
    java.lang.String getPriceIncrement() -> getPriceIncrement
    java.lang.String getPriceCurrency() -> getPriceCurrency
    java.util.Map getUncommonAIs() -> getUncommonAIs
    java.lang.String getDisplayResult() -> getDisplayResult
com.google.zxing.client.result.ExpandedProductResultParser -> com.google.zxing.client.result.ExpandedProductResultParser:
    com.google.zxing.client.result.ExpandedProductParsedResult parse(com.google.zxing.Result) -> parse
    java.lang.String findAIvalue(int,java.lang.String) -> findAIvalue
    java.lang.String findValue(int,java.lang.String) -> findValue
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.GeoParsedResult -> com.google.zxing.client.result.GeoParsedResult:
    double latitude -> latitude
    double longitude -> longitude
    double altitude -> altitude
    java.lang.String query -> query
    java.lang.String getGeoURI() -> getGeoURI
    double getLatitude() -> getLatitude
    double getLongitude() -> getLongitude
    double getAltitude() -> getAltitude
    java.lang.String getQuery() -> getQuery
    java.lang.String getDisplayResult() -> getDisplayResult
com.google.zxing.client.result.GeoResultParser -> com.google.zxing.client.result.GeoResultParser:
    java.util.regex.Pattern GEO_URL_PATTERN -> GEO_URL_PATTERN
    com.google.zxing.client.result.GeoParsedResult parse(com.google.zxing.Result) -> parse
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.ISBNParsedResult -> com.google.zxing.client.result.ISBNParsedResult:
    java.lang.String isbn -> isbn
    java.lang.String getISBN() -> getISBN
    java.lang.String getDisplayResult() -> getDisplayResult
com.google.zxing.client.result.ISBNResultParser -> com.google.zxing.client.result.ISBNResultParser:
    com.google.zxing.client.result.ISBNParsedResult parse(com.google.zxing.Result) -> parse
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.ParsedResult -> com.google.zxing.client.result.ParsedResult:
    com.google.zxing.client.result.ParsedResultType type -> type
    com.google.zxing.client.result.ParsedResultType getType() -> getType
    java.lang.String getDisplayResult() -> getDisplayResult
    java.lang.String toString() -> toString
    void maybeAppend(java.lang.String,java.lang.StringBuilder) -> maybeAppend
    void maybeAppend(java.lang.String[],java.lang.StringBuilder) -> maybeAppend
com.google.zxing.client.result.ParsedResultType -> com.google.zxing.client.result.ParsedResultType:
    com.google.zxing.client.result.ParsedResultType ADDRESSBOOK -> ADDRESSBOOK
    com.google.zxing.client.result.ParsedResultType EMAIL_ADDRESS -> EMAIL_ADDRESS
    com.google.zxing.client.result.ParsedResultType PRODUCT -> PRODUCT
    com.google.zxing.client.result.ParsedResultType URI -> URI
    com.google.zxing.client.result.ParsedResultType TEXT -> TEXT
    com.google.zxing.client.result.ParsedResultType GEO -> GEO
    com.google.zxing.client.result.ParsedResultType TEL -> TEL
    com.google.zxing.client.result.ParsedResultType SMS -> SMS
    com.google.zxing.client.result.ParsedResultType CALENDAR -> CALENDAR
    com.google.zxing.client.result.ParsedResultType WIFI -> WIFI
    com.google.zxing.client.result.ParsedResultType ISBN -> ISBN
    com.google.zxing.client.result.ParsedResultType[] $VALUES -> $VALUES
    com.google.zxing.client.result.ParsedResultType[] values() -> values
    com.google.zxing.client.result.ParsedResultType valueOf(java.lang.String) -> valueOf
com.google.zxing.client.result.ProductParsedResult -> com.google.zxing.client.result.ProductParsedResult:
    java.lang.String productID -> productID
    java.lang.String normalizedProductID -> normalizedProductID
    java.lang.String getProductID() -> getProductID
    java.lang.String getNormalizedProductID() -> getNormalizedProductID
    java.lang.String getDisplayResult() -> getDisplayResult
com.google.zxing.client.result.ProductResultParser -> com.google.zxing.client.result.ProductResultParser:
    com.google.zxing.client.result.ProductParsedResult parse(com.google.zxing.Result) -> parse
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.ResultParser -> com.google.zxing.client.result.ResultParser:
    com.google.zxing.client.result.ResultParser[] PARSERS -> PARSERS
    java.util.regex.Pattern DIGITS -> DIGITS
    java.util.regex.Pattern ALPHANUM -> ALPHANUM
    java.util.regex.Pattern AMPERSAND -> AMPERSAND
    java.util.regex.Pattern EQUALS -> EQUALS
    java.lang.String BYTE_ORDER_MARK -> BYTE_ORDER_MARK
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
    java.lang.String getMassagedText(com.google.zxing.Result) -> getMassagedText
    com.google.zxing.client.result.ParsedResult parseResult(com.google.zxing.Result) -> parseResult
    void maybeAppend(java.lang.String,java.lang.StringBuilder) -> maybeAppend
    void maybeAppend(java.lang.String[],java.lang.StringBuilder) -> maybeAppend
    java.lang.String[] maybeWrap(java.lang.String) -> maybeWrap
    java.lang.String unescapeBackslash(java.lang.String) -> unescapeBackslash
    int parseHexDigit(char) -> parseHexDigit
    boolean isStringOfDigits(java.lang.CharSequence,int) -> isStringOfDigits
    boolean isSubstringOfDigits(java.lang.CharSequence,int,int) -> isSubstringOfDigits
    boolean isSubstringOfAlphaNumeric(java.lang.CharSequence,int,int) -> isSubstringOfAlphaNumeric
    java.util.Map parseNameValuePairs(java.lang.String) -> parseNameValuePairs
    void appendKeyValue(java.lang.CharSequence,java.util.Map) -> appendKeyValue
    java.lang.String urlDecode(java.lang.String) -> urlDecode
    java.lang.String[] matchPrefixedField(java.lang.String,java.lang.String,char,boolean) -> matchPrefixedField
    java.lang.String matchSinglePrefixedField(java.lang.String,java.lang.String,char,boolean) -> matchSinglePrefixedField
com.google.zxing.client.result.SMSMMSResultParser -> com.google.zxing.client.result.SMSMMSResultParser:
    com.google.zxing.client.result.SMSParsedResult parse(com.google.zxing.Result) -> parse
    void addNumberVia(java.util.Collection,java.util.Collection,java.lang.String) -> addNumberVia
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.SMSParsedResult -> com.google.zxing.client.result.SMSParsedResult:
    java.lang.String[] numbers -> numbers
    java.lang.String[] vias -> vias
    java.lang.String subject -> subject
    java.lang.String body -> body
    java.lang.String getSMSURI() -> getSMSURI
    java.lang.String[] getNumbers() -> getNumbers
    java.lang.String[] getVias() -> getVias
    java.lang.String getSubject() -> getSubject
    java.lang.String getBody() -> getBody
    java.lang.String getDisplayResult() -> getDisplayResult
com.google.zxing.client.result.SMSTOMMSTOResultParser -> com.google.zxing.client.result.SMSTOMMSTOResultParser:
    com.google.zxing.client.result.SMSParsedResult parse(com.google.zxing.Result) -> parse
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.SMTPResultParser -> com.google.zxing.client.result.SMTPResultParser:
    com.google.zxing.client.result.EmailAddressParsedResult parse(com.google.zxing.Result) -> parse
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.TelParsedResult -> com.google.zxing.client.result.TelParsedResult:
    java.lang.String number -> number
    java.lang.String telURI -> telURI
    java.lang.String title -> title
    java.lang.String getNumber() -> getNumber
    java.lang.String getTelURI() -> getTelURI
    java.lang.String getTitle() -> getTitle
    java.lang.String getDisplayResult() -> getDisplayResult
com.google.zxing.client.result.TelResultParser -> com.google.zxing.client.result.TelResultParser:
    com.google.zxing.client.result.TelParsedResult parse(com.google.zxing.Result) -> parse
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.TextParsedResult -> com.google.zxing.client.result.TextParsedResult:
    java.lang.String text -> text
    java.lang.String language -> language
    java.lang.String getText() -> getText
    java.lang.String getLanguage() -> getLanguage
    java.lang.String getDisplayResult() -> getDisplayResult
com.google.zxing.client.result.URIParsedResult -> com.google.zxing.client.result.URIParsedResult:
    java.util.regex.Pattern USER_IN_HOST -> USER_IN_HOST
    java.lang.String uri -> uri
    java.lang.String title -> title
    java.lang.String getURI() -> getURI
    java.lang.String getTitle() -> getTitle
    boolean isPossiblyMaliciousURI() -> isPossiblyMaliciousURI
    java.lang.String getDisplayResult() -> getDisplayResult
    java.lang.String massageURI(java.lang.String) -> massageURI
    boolean isColonFollowedByPortNumber(java.lang.String,int) -> isColonFollowedByPortNumber
com.google.zxing.client.result.URIResultParser -> com.google.zxing.client.result.URIResultParser:
    java.util.regex.Pattern URL_WITH_PROTOCOL_PATTERN -> URL_WITH_PROTOCOL_PATTERN
    java.util.regex.Pattern URL_WITHOUT_PROTOCOL_PATTERN -> URL_WITHOUT_PROTOCOL_PATTERN
    com.google.zxing.client.result.URIParsedResult parse(com.google.zxing.Result) -> parse
    boolean isBasicallyValidURI(java.lang.String) -> isBasicallyValidURI
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.URLTOResultParser -> com.google.zxing.client.result.URLTOResultParser:
    com.google.zxing.client.result.URIParsedResult parse(com.google.zxing.Result) -> parse
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.VCardResultParser -> com.google.zxing.client.result.VCardResultParser:
    java.util.regex.Pattern BEGIN_VCARD -> BEGIN_VCARD
    java.util.regex.Pattern VCARD_LIKE_DATE -> VCARD_LIKE_DATE
    java.util.regex.Pattern CR_LF_SPACE_TAB -> CR_LF_SPACE_TAB
    java.util.regex.Pattern NEWLINE_ESCAPE -> NEWLINE_ESCAPE
    java.util.regex.Pattern VCARD_ESCAPES -> VCARD_ESCAPES
    java.util.regex.Pattern EQUALS -> EQUALS
    java.util.regex.Pattern SEMICOLON -> SEMICOLON
    java.util.regex.Pattern UNESCAPED_SEMICOLONS -> UNESCAPED_SEMICOLONS
    java.util.regex.Pattern COMMA -> COMMA
    java.util.regex.Pattern SEMICOLON_OR_COMMA -> SEMICOLON_OR_COMMA
    com.google.zxing.client.result.AddressBookParsedResult parse(com.google.zxing.Result) -> parse
    java.util.List matchVCardPrefixedField(java.lang.CharSequence,java.lang.String,boolean,boolean) -> matchVCardPrefixedField
    java.lang.String decodeQuotedPrintable(java.lang.CharSequence,java.lang.String) -> decodeQuotedPrintable
    void maybeAppendFragment(java.io.ByteArrayOutputStream,java.lang.String,java.lang.StringBuilder) -> maybeAppendFragment
    java.util.List matchSingleVCardPrefixedField(java.lang.CharSequence,java.lang.String,boolean,boolean) -> matchSingleVCardPrefixedField
    java.lang.String toPrimaryValue(java.util.List) -> toPrimaryValue
    java.lang.String[] toPrimaryValues(java.util.Collection) -> toPrimaryValues
    java.lang.String[] toTypes(java.util.Collection) -> toTypes
    boolean isLikeVCardDate(java.lang.CharSequence) -> isLikeVCardDate
    void formatNames(java.lang.Iterable) -> formatNames
    void maybeAppendComponent(java.lang.String[],int,java.lang.StringBuilder) -> maybeAppendComponent
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.VEventResultParser -> com.google.zxing.client.result.VEventResultParser:
    com.google.zxing.client.result.CalendarParsedResult parse(com.google.zxing.Result) -> parse
    java.lang.String matchSingleVCardPrefixedField(java.lang.CharSequence,java.lang.String,boolean) -> matchSingleVCardPrefixedField
    java.lang.String[] matchVCardPrefixedField(java.lang.CharSequence,java.lang.String,boolean) -> matchVCardPrefixedField
    java.lang.String stripMailto(java.lang.String) -> stripMailto
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.WifiParsedResult -> com.google.zxing.client.result.WifiParsedResult:
    java.lang.String ssid -> ssid
    java.lang.String networkEncryption -> networkEncryption
    java.lang.String password -> password
    boolean hidden -> hidden
    java.lang.String getSsid() -> getSsid
    java.lang.String getNetworkEncryption() -> getNetworkEncryption
    java.lang.String getPassword() -> getPassword
    boolean isHidden() -> isHidden
    java.lang.String getDisplayResult() -> getDisplayResult
com.google.zxing.client.result.WifiResultParser -> com.google.zxing.client.result.WifiResultParser:
    com.google.zxing.client.result.WifiParsedResult parse(com.google.zxing.Result) -> parse
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.common.BitArray -> com.google.zxing.common.BitArray:
    int[] bits -> bits
    int size -> size
    int getSize() -> getSize
    int getSizeInBytes() -> getSizeInBytes
    void ensureCapacity(int) -> ensureCapacity
    boolean get(int) -> get
    void set(int) -> set
    void flip(int) -> flip
    int getNextSet(int) -> getNextSet
    int getNextUnset(int) -> getNextUnset
    void setBulk(int,int) -> setBulk
    void setRange(int,int) -> setRange
    void clear() -> clear
    boolean isRange(int,int,boolean) -> isRange
    void appendBit(boolean) -> appendBit
    void appendBits(int,int) -> appendBits
    void appendBitArray(com.google.zxing.common.BitArray) -> appendBitArray
    void xor(com.google.zxing.common.BitArray) -> xor
    void toBytes(int,byte[],int,int) -> toBytes
    int[] getBitArray() -> getBitArray
    void reverse() -> reverse
    int[] makeArray(int) -> makeArray
    java.lang.String toString() -> toString
com.google.zxing.common.BitMatrix -> com.google.zxing.common.BitMatrix:
    int width -> width
    int height -> height
    int rowSize -> rowSize
    int[] bits -> bits
    boolean get(int,int) -> get
    void set(int,int) -> set
    void flip(int,int) -> flip
    void clear() -> clear
    void setRegion(int,int,int,int) -> setRegion
    com.google.zxing.common.BitArray getRow(int,com.google.zxing.common.BitArray) -> getRow
    void setRow(int,com.google.zxing.common.BitArray) -> setRow
    int[] getEnclosingRectangle() -> getEnclosingRectangle
    int[] getTopLeftOnBit() -> getTopLeftOnBit
    int[] getBottomRightOnBit() -> getBottomRightOnBit
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.zxing.common.BitSource -> com.google.zxing.common.BitSource:
    byte[] bytes -> bytes
    int byteOffset -> byteOffset
    int bitOffset -> bitOffset
    int getBitOffset() -> getBitOffset
    int getByteOffset() -> getByteOffset
    int readBits(int) -> readBits
    int available() -> available
com.google.zxing.common.CharacterSetECI -> com.google.zxing.common.CharacterSetECI:
    com.google.zxing.common.CharacterSetECI Cp437 -> Cp437
    com.google.zxing.common.CharacterSetECI ISO8859_1 -> ISO8859_1
    com.google.zxing.common.CharacterSetECI ISO8859_2 -> ISO8859_2
    com.google.zxing.common.CharacterSetECI ISO8859_3 -> ISO8859_3
    com.google.zxing.common.CharacterSetECI ISO8859_4 -> ISO8859_4
    com.google.zxing.common.CharacterSetECI ISO8859_5 -> ISO8859_5
    com.google.zxing.common.CharacterSetECI ISO8859_6 -> ISO8859_6
    com.google.zxing.common.CharacterSetECI ISO8859_7 -> ISO8859_7
    com.google.zxing.common.CharacterSetECI ISO8859_8 -> ISO8859_8
    com.google.zxing.common.CharacterSetECI ISO8859_9 -> ISO8859_9
    com.google.zxing.common.CharacterSetECI ISO8859_10 -> ISO8859_10
    com.google.zxing.common.CharacterSetECI ISO8859_11 -> ISO8859_11
    com.google.zxing.common.CharacterSetECI ISO8859_13 -> ISO8859_13
    com.google.zxing.common.CharacterSetECI ISO8859_14 -> ISO8859_14
    com.google.zxing.common.CharacterSetECI ISO8859_15 -> ISO8859_15
    com.google.zxing.common.CharacterSetECI ISO8859_16 -> ISO8859_16
    com.google.zxing.common.CharacterSetECI SJIS -> SJIS
    com.google.zxing.common.CharacterSetECI Cp1250 -> Cp1250
    com.google.zxing.common.CharacterSetECI Cp1251 -> Cp1251
    com.google.zxing.common.CharacterSetECI Cp1252 -> Cp1252
    com.google.zxing.common.CharacterSetECI Cp1256 -> Cp1256
    com.google.zxing.common.CharacterSetECI UnicodeBigUnmarked -> UnicodeBigUnmarked
    com.google.zxing.common.CharacterSetECI UTF8 -> UTF8
    com.google.zxing.common.CharacterSetECI ASCII -> ASCII
    com.google.zxing.common.CharacterSetECI Big5 -> Big5
    com.google.zxing.common.CharacterSetECI GB18030 -> GB18030
    com.google.zxing.common.CharacterSetECI EUC_KR -> EUC_KR
    java.util.Map VALUE_TO_ECI -> VALUE_TO_ECI
    java.util.Map NAME_TO_ECI -> NAME_TO_ECI
    int[] values -> values
    java.lang.String[] otherEncodingNames -> otherEncodingNames
    com.google.zxing.common.CharacterSetECI[] $VALUES -> $VALUES
    com.google.zxing.common.CharacterSetECI[] values() -> values
    com.google.zxing.common.CharacterSetECI valueOf(java.lang.String) -> valueOf
    int getValue() -> getValue
    com.google.zxing.common.CharacterSetECI getCharacterSetECIByValue(int) -> getCharacterSetECIByValue
    com.google.zxing.common.CharacterSetECI getCharacterSetECIByName(java.lang.String) -> getCharacterSetECIByName
com.google.zxing.common.DecoderResult -> com.google.zxing.common.DecoderResult:
    byte[] rawBytes -> rawBytes
    java.lang.String text -> text
    java.util.List byteSegments -> byteSegments
    java.lang.String ecLevel -> ecLevel
    java.lang.Integer errorsCorrected -> errorsCorrected
    java.lang.Integer erasures -> erasures
    java.lang.Object other -> other
    byte[] getRawBytes() -> getRawBytes
    java.lang.String getText() -> getText
    java.util.List getByteSegments() -> getByteSegments
    java.lang.String getECLevel() -> getECLevel
    java.lang.Integer getErrorsCorrected() -> getErrorsCorrected
    void setErrorsCorrected(java.lang.Integer) -> setErrorsCorrected
    java.lang.Integer getErasures() -> getErasures
    void setErasures(java.lang.Integer) -> setErasures
    java.lang.Object getOther() -> getOther
    void setOther(java.lang.Object) -> setOther
com.google.zxing.common.DefaultGridSampler -> com.google.zxing.common.DefaultGridSampler:
    com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,int,int,float,float,float,float,float,float,float,float,float,float,float,float,float,float,float,float) -> sampleGrid
    com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,int,int,com.google.zxing.common.PerspectiveTransform) -> sampleGrid
com.google.zxing.common.DetectorResult -> com.google.zxing.common.DetectorResult:
    com.google.zxing.common.BitMatrix bits -> bits
    com.google.zxing.ResultPoint[] points -> points
    com.google.zxing.common.BitMatrix getBits() -> getBits
    com.google.zxing.ResultPoint[] getPoints() -> getPoints
com.google.zxing.common.GlobalHistogramBinarizer -> com.google.zxing.common.GlobalHistogramBinarizer:
    int LUMINANCE_BITS -> LUMINANCE_BITS
    int LUMINANCE_SHIFT -> LUMINANCE_SHIFT
    int LUMINANCE_BUCKETS -> LUMINANCE_BUCKETS
    byte[] EMPTY -> EMPTY
    byte[] luminances -> luminances
    int[] buckets -> buckets
    com.google.zxing.common.BitArray getBlackRow(int,com.google.zxing.common.BitArray) -> getBlackRow
    com.google.zxing.common.BitMatrix getBlackMatrix() -> getBlackMatrix
    com.google.zxing.Binarizer createBinarizer(com.google.zxing.LuminanceSource) -> createBinarizer
    void initArrays(int) -> initArrays
    int estimateBlackPoint(int[]) -> estimateBlackPoint
com.google.zxing.common.GridSampler -> com.google.zxing.common.GridSampler:
    com.google.zxing.common.GridSampler gridSampler -> gridSampler
    void setGridSampler(com.google.zxing.common.GridSampler) -> setGridSampler
    com.google.zxing.common.GridSampler getInstance() -> getInstance
    com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,int,int,float,float,float,float,float,float,float,float,float,float,float,float,float,float,float,float) -> sampleGrid
    com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,int,int,com.google.zxing.common.PerspectiveTransform) -> sampleGrid
    void checkAndNudgePoints(com.google.zxing.common.BitMatrix,float[]) -> checkAndNudgePoints
com.google.zxing.common.HybridBinarizer -> com.google.zxing.common.HybridBinarizer:
    int BLOCK_SIZE_POWER -> BLOCK_SIZE_POWER
    int BLOCK_SIZE -> BLOCK_SIZE
    int BLOCK_SIZE_MASK -> BLOCK_SIZE_MASK
    int MINIMUM_DIMENSION -> MINIMUM_DIMENSION
    int MIN_DYNAMIC_RANGE -> MIN_DYNAMIC_RANGE
    com.google.zxing.common.BitMatrix matrix -> matrix
    com.google.zxing.common.BitMatrix getBlackMatrix() -> getBlackMatrix
    com.google.zxing.Binarizer createBinarizer(com.google.zxing.LuminanceSource) -> createBinarizer
    void calculateThresholdForBlock(byte[],int,int,int,int,int[][],com.google.zxing.common.BitMatrix) -> calculateThresholdForBlock
    int cap(int,int,int) -> cap
    void thresholdBlock(byte[],int,int,int,int,com.google.zxing.common.BitMatrix) -> thresholdBlock
    int[][] calculateBlackPoints(byte[],int,int,int,int) -> calculateBlackPoints
com.google.zxing.common.PerspectiveTransform -> com.google.zxing.common.PerspectiveTransform:
    float a11 -> a11
    float a12 -> a12
    float a13 -> a13
    float a21 -> a21
    float a22 -> a22
    float a23 -> a23
    float a31 -> a31
    float a32 -> a32
    float a33 -> a33
    com.google.zxing.common.PerspectiveTransform quadrilateralToQuadrilateral(float,float,float,float,float,float,float,float,float,float,float,float,float,float,float,float) -> quadrilateralToQuadrilateral
    void transformPoints(float[]) -> transformPoints
    void transformPoints(float[],float[]) -> transformPoints
    com.google.zxing.common.PerspectiveTransform squareToQuadrilateral(float,float,float,float,float,float,float,float) -> squareToQuadrilateral
    com.google.zxing.common.PerspectiveTransform quadrilateralToSquare(float,float,float,float,float,float,float,float) -> quadrilateralToSquare
    com.google.zxing.common.PerspectiveTransform buildAdjoint() -> buildAdjoint
    com.google.zxing.common.PerspectiveTransform times(com.google.zxing.common.PerspectiveTransform) -> times
com.google.zxing.common.StringUtils -> com.google.zxing.common.StringUtils:
    java.lang.String PLATFORM_DEFAULT_ENCODING -> PLATFORM_DEFAULT_ENCODING
    java.lang.String SHIFT_JIS -> SHIFT_JIS
    java.lang.String GB2312 -> GB2312
    java.lang.String EUC_JP -> EUC_JP
    java.lang.String UTF8 -> UTF8
    java.lang.String ISO88591 -> ISO88591
    boolean ASSUME_SHIFT_JIS -> ASSUME_SHIFT_JIS
    java.lang.String guessEncoding(byte[],java.util.Map) -> guessEncoding
com.google.zxing.common.detector.MathUtils -> com.google.zxing.common.detector.MathUtils:
    int round(float) -> round
    float distance(float,float,float,float) -> distance
    float distance(int,int,int,int) -> distance
com.google.zxing.common.detector.MonochromeRectangleDetector -> com.google.zxing.common.detector.MonochromeRectangleDetector:
    int MAX_MODULES -> MAX_MODULES
    com.google.zxing.common.BitMatrix image -> image
    com.google.zxing.ResultPoint[] detect() -> detect
    com.google.zxing.ResultPoint findCornerFromCenter(int,int,int,int,int,int,int,int,int) -> findCornerFromCenter
    int[] blackWhiteRange(int,int,int,int,boolean) -> blackWhiteRange
com.google.zxing.common.detector.WhiteRectangleDetector -> com.google.zxing.common.detector.WhiteRectangleDetector:
    int INIT_SIZE -> INIT_SIZE
    int CORR -> CORR
    com.google.zxing.common.BitMatrix image -> image
    int height -> height
    int width -> width
    int leftInit -> leftInit
    int rightInit -> rightInit
    int downInit -> downInit
    int upInit -> upInit
    com.google.zxing.ResultPoint[] detect() -> detect
    com.google.zxing.ResultPoint getBlackPointOnSegment(float,float,float,float) -> getBlackPointOnSegment
    com.google.zxing.ResultPoint[] centerEdges(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> centerEdges
    boolean containsBlackPoint(int,int,int,boolean) -> containsBlackPoint
com.google.zxing.common.reedsolomon.GenericGF -> com.google.zxing.common.reedsolomon.GenericGF:
    com.google.zxing.common.reedsolomon.GenericGF AZTEC_DATA_12 -> AZTEC_DATA_12
    com.google.zxing.common.reedsolomon.GenericGF AZTEC_DATA_10 -> AZTEC_DATA_10
    com.google.zxing.common.reedsolomon.GenericGF AZTEC_DATA_6 -> AZTEC_DATA_6
    com.google.zxing.common.reedsolomon.GenericGF AZTEC_PARAM -> AZTEC_PARAM
    com.google.zxing.common.reedsolomon.GenericGF QR_CODE_FIELD_256 -> QR_CODE_FIELD_256
    com.google.zxing.common.reedsolomon.GenericGF DATA_MATRIX_FIELD_256 -> DATA_MATRIX_FIELD_256
    com.google.zxing.common.reedsolomon.GenericGF AZTEC_DATA_8 -> AZTEC_DATA_8
    com.google.zxing.common.reedsolomon.GenericGF MAXICODE_FIELD_64 -> MAXICODE_FIELD_64
    int INITIALIZATION_THRESHOLD -> INITIALIZATION_THRESHOLD
    int[] expTable -> expTable
    int[] logTable -> logTable
    com.google.zxing.common.reedsolomon.GenericGFPoly zero -> zero
    com.google.zxing.common.reedsolomon.GenericGFPoly one -> one
    int size -> size
    int primitive -> primitive
    int generatorBase -> generatorBase
    boolean initialized -> initialized
    void initialize() -> initialize
    void checkInit() -> checkInit
    com.google.zxing.common.reedsolomon.GenericGFPoly getZero() -> getZero
    com.google.zxing.common.reedsolomon.GenericGFPoly getOne() -> getOne
    com.google.zxing.common.reedsolomon.GenericGFPoly buildMonomial(int,int) -> buildMonomial
    int addOrSubtract(int,int) -> addOrSubtract
    int exp(int) -> exp
    int log(int) -> log
    int inverse(int) -> inverse
    int multiply(int,int) -> multiply
    int getSize() -> getSize
    int getGeneratorBase() -> getGeneratorBase
    java.lang.String toString() -> toString
com.google.zxing.common.reedsolomon.GenericGFPoly -> com.google.zxing.common.reedsolomon.GenericGFPoly:
    com.google.zxing.common.reedsolomon.GenericGF field -> field
    int[] coefficients -> coefficients
    int[] getCoefficients() -> getCoefficients
    int getDegree() -> getDegree
    boolean isZero() -> isZero
    int getCoefficient(int) -> getCoefficient
    int evaluateAt(int) -> evaluateAt
    com.google.zxing.common.reedsolomon.GenericGFPoly addOrSubtract(com.google.zxing.common.reedsolomon.GenericGFPoly) -> addOrSubtract
    com.google.zxing.common.reedsolomon.GenericGFPoly multiply(com.google.zxing.common.reedsolomon.GenericGFPoly) -> multiply
    com.google.zxing.common.reedsolomon.GenericGFPoly multiply(int) -> multiply
    com.google.zxing.common.reedsolomon.GenericGFPoly multiplyByMonomial(int,int) -> multiplyByMonomial
    com.google.zxing.common.reedsolomon.GenericGFPoly[] divide(com.google.zxing.common.reedsolomon.GenericGFPoly) -> divide
    java.lang.String toString() -> toString
com.google.zxing.common.reedsolomon.ReedSolomonDecoder -> com.google.zxing.common.reedsolomon.ReedSolomonDecoder:
    com.google.zxing.common.reedsolomon.GenericGF field -> field
    void decode(int[],int) -> decode
    com.google.zxing.common.reedsolomon.GenericGFPoly[] runEuclideanAlgorithm(com.google.zxing.common.reedsolomon.GenericGFPoly,com.google.zxing.common.reedsolomon.GenericGFPoly,int) -> runEuclideanAlgorithm
    int[] findErrorLocations(com.google.zxing.common.reedsolomon.GenericGFPoly) -> findErrorLocations
    int[] findErrorMagnitudes(com.google.zxing.common.reedsolomon.GenericGFPoly,int[]) -> findErrorMagnitudes
com.google.zxing.common.reedsolomon.ReedSolomonEncoder -> com.google.zxing.common.reedsolomon.ReedSolomonEncoder:
    com.google.zxing.common.reedsolomon.GenericGF field -> field
    java.util.List cachedGenerators -> cachedGenerators
    com.google.zxing.common.reedsolomon.GenericGFPoly buildGenerator(int) -> buildGenerator
    void encode(int[],int) -> encode
com.google.zxing.common.reedsolomon.ReedSolomonException -> com.google.zxing.common.reedsolomon.ReedSolomonException:
com.google.zxing.datamatrix.DataMatrixReader -> com.google.zxing.datamatrix.DataMatrixReader:
    com.google.zxing.ResultPoint[] NO_POINTS -> NO_POINTS
    com.google.zxing.datamatrix.decoder.Decoder decoder -> decoder
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap) -> decode
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> decode
    void reset() -> reset
    com.google.zxing.common.BitMatrix extractPureBits(com.google.zxing.common.BitMatrix) -> extractPureBits
    int moduleSize(int[],com.google.zxing.common.BitMatrix) -> moduleSize
com.google.zxing.datamatrix.DataMatrixWriter -> com.google.zxing.datamatrix.DataMatrixWriter:
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int) -> encode
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
    com.google.zxing.common.BitMatrix encodeLowLevel(com.google.zxing.datamatrix.encoder.DefaultPlacement,com.google.zxing.datamatrix.encoder.SymbolInfo) -> encodeLowLevel
    com.google.zxing.common.BitMatrix convertByteMatrixToBitMatrix(com.google.zxing.qrcode.encoder.ByteMatrix) -> convertByteMatrixToBitMatrix
com.google.zxing.datamatrix.decoder.BitMatrixParser -> com.google.zxing.datamatrix.decoder.BitMatrixParser:
    com.google.zxing.common.BitMatrix mappingBitMatrix -> mappingBitMatrix
    com.google.zxing.common.BitMatrix readMappingMatrix -> readMappingMatrix
    com.google.zxing.datamatrix.decoder.Version version -> version
    com.google.zxing.datamatrix.decoder.Version getVersion() -> getVersion
    com.google.zxing.datamatrix.decoder.Version readVersion(com.google.zxing.common.BitMatrix) -> readVersion
    byte[] readCodewords() -> readCodewords
    boolean readModule(int,int,int,int) -> readModule
    int readUtah(int,int,int,int) -> readUtah
    int readCorner1(int,int) -> readCorner1
    int readCorner2(int,int) -> readCorner2
    int readCorner3(int,int) -> readCorner3
    int readCorner4(int,int) -> readCorner4
    com.google.zxing.common.BitMatrix extractDataRegion(com.google.zxing.common.BitMatrix) -> extractDataRegion
com.google.zxing.datamatrix.decoder.DataBlock -> com.google.zxing.datamatrix.decoder.DataBlock:
    int numDataCodewords -> numDataCodewords
    byte[] codewords -> codewords
    com.google.zxing.datamatrix.decoder.DataBlock[] getDataBlocks(byte[],com.google.zxing.datamatrix.decoder.Version) -> getDataBlocks
    int getNumDataCodewords() -> getNumDataCodewords
    byte[] getCodewords() -> getCodewords
com.google.zxing.datamatrix.decoder.DecodedBitStreamParser -> com.google.zxing.datamatrix.decoder.DecodedBitStreamParser:
    char[] C40_BASIC_SET_CHARS -> C40_BASIC_SET_CHARS
    char[] C40_SHIFT2_SET_CHARS -> C40_SHIFT2_SET_CHARS
    char[] TEXT_BASIC_SET_CHARS -> TEXT_BASIC_SET_CHARS
    char[] TEXT_SHIFT3_SET_CHARS -> TEXT_SHIFT3_SET_CHARS
    com.google.zxing.common.DecoderResult decode(byte[]) -> decode
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode decodeAsciiSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder,java.lang.StringBuilder) -> decodeAsciiSegment
    void decodeC40Segment(com.google.zxing.common.BitSource,java.lang.StringBuilder) -> decodeC40Segment
    void decodeTextSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder) -> decodeTextSegment
    void decodeAnsiX12Segment(com.google.zxing.common.BitSource,java.lang.StringBuilder) -> decodeAnsiX12Segment
    void parseTwoBytes(int,int,int[]) -> parseTwoBytes
    void decodeEdifactSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder) -> decodeEdifactSegment
    void decodeBase256Segment(com.google.zxing.common.BitSource,java.lang.StringBuilder,java.util.Collection) -> decodeBase256Segment
    int unrandomize255State(int,int) -> unrandomize255State
com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$1 -> com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$1:
    int[] $SwitchMap$com$google$zxing$datamatrix$decoder$DecodedBitStreamParser$Mode -> $SwitchMap$com$google$zxing$datamatrix$decoder$DecodedBitStreamParser$Mode
com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode -> com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode:
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode PAD_ENCODE -> PAD_ENCODE
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode ASCII_ENCODE -> ASCII_ENCODE
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode C40_ENCODE -> C40_ENCODE
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode TEXT_ENCODE -> TEXT_ENCODE
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode ANSIX12_ENCODE -> ANSIX12_ENCODE
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode EDIFACT_ENCODE -> EDIFACT_ENCODE
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode BASE256_ENCODE -> BASE256_ENCODE
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode[] $VALUES -> $VALUES
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode[] values() -> values
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode valueOf(java.lang.String) -> valueOf
com.google.zxing.datamatrix.decoder.Decoder -> com.google.zxing.datamatrix.decoder.Decoder:
    com.google.zxing.common.reedsolomon.ReedSolomonDecoder rsDecoder -> rsDecoder
    com.google.zxing.common.DecoderResult decode(boolean[][]) -> decode
    com.google.zxing.common.DecoderResult decode(com.google.zxing.common.BitMatrix) -> decode
    void correctErrors(byte[],int) -> correctErrors
com.google.zxing.datamatrix.decoder.Version -> com.google.zxing.datamatrix.decoder.Version:
    com.google.zxing.datamatrix.decoder.Version[] VERSIONS -> VERSIONS
    int versionNumber -> versionNumber
    int symbolSizeRows -> symbolSizeRows
    int symbolSizeColumns -> symbolSizeColumns
    int dataRegionSizeRows -> dataRegionSizeRows
    int dataRegionSizeColumns -> dataRegionSizeColumns
    com.google.zxing.datamatrix.decoder.Version$ECBlocks ecBlocks -> ecBlocks
    int totalCodewords -> totalCodewords
    int getVersionNumber() -> getVersionNumber
    int getSymbolSizeRows() -> getSymbolSizeRows
    int getSymbolSizeColumns() -> getSymbolSizeColumns
    int getDataRegionSizeRows() -> getDataRegionSizeRows
    int getDataRegionSizeColumns() -> getDataRegionSizeColumns
    int getTotalCodewords() -> getTotalCodewords
    com.google.zxing.datamatrix.decoder.Version$ECBlocks getECBlocks() -> getECBlocks
    com.google.zxing.datamatrix.decoder.Version getVersionForDimensions(int,int) -> getVersionForDimensions
    java.lang.String toString() -> toString
    com.google.zxing.datamatrix.decoder.Version[] buildVersions() -> buildVersions
com.google.zxing.datamatrix.decoder.Version$1 -> com.google.zxing.datamatrix.decoder.Version$1:
com.google.zxing.datamatrix.decoder.Version$ECB -> com.google.zxing.datamatrix.decoder.Version$ECB:
    int count -> count
    int dataCodewords -> dataCodewords
    int getCount() -> getCount
    int getDataCodewords() -> getDataCodewords
com.google.zxing.datamatrix.decoder.Version$ECBlocks -> com.google.zxing.datamatrix.decoder.Version$ECBlocks:
    int ecCodewords -> ecCodewords
    com.google.zxing.datamatrix.decoder.Version$ECB[] ecBlocks -> ecBlocks
    int getECCodewords() -> getECCodewords
    com.google.zxing.datamatrix.decoder.Version$ECB[] getECBlocks() -> getECBlocks
com.google.zxing.datamatrix.detector.Detector -> com.google.zxing.datamatrix.detector.Detector:
    com.google.zxing.common.BitMatrix image -> image
    com.google.zxing.common.detector.WhiteRectangleDetector rectangleDetector -> rectangleDetector
    com.google.zxing.common.DetectorResult detect() -> detect
    com.google.zxing.ResultPoint correctTopRightRectangular(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,int,int) -> correctTopRightRectangular
    com.google.zxing.ResultPoint correctTopRight(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,int) -> correctTopRight
    boolean isValid(com.google.zxing.ResultPoint) -> isValid
    int distance(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> distance
    void increment(java.util.Map,com.google.zxing.ResultPoint) -> increment
    com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,int,int) -> sampleGrid
    com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions transitionsBetween(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> transitionsBetween
com.google.zxing.datamatrix.detector.Detector$1 -> com.google.zxing.datamatrix.detector.Detector$1:
com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions -> com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions:
    com.google.zxing.ResultPoint from -> from
    com.google.zxing.ResultPoint to -> to
    int transitions -> transitions
    com.google.zxing.ResultPoint getFrom() -> getFrom
    com.google.zxing.ResultPoint getTo() -> getTo
    int getTransitions() -> getTransitions
    java.lang.String toString() -> toString
com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitionsComparator -> com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitionsComparator:
    int compare(com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions,com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.zxing.datamatrix.encoder.ASCIIEncoder -> com.google.zxing.datamatrix.encoder.ASCIIEncoder:
    int getEncodingMode() -> getEncodingMode
    void encode(com.google.zxing.datamatrix.encoder.EncoderContext) -> encode
    char encodeASCIIDigits(char,char) -> encodeASCIIDigits
com.google.zxing.datamatrix.encoder.Base256Encoder -> com.google.zxing.datamatrix.encoder.Base256Encoder:
    int getEncodingMode() -> getEncodingMode
    void encode(com.google.zxing.datamatrix.encoder.EncoderContext) -> encode
    char randomize255State(char,int) -> randomize255State
com.google.zxing.datamatrix.encoder.C40Encoder -> com.google.zxing.datamatrix.encoder.C40Encoder:
    int getEncodingMode() -> getEncodingMode
    void encode(com.google.zxing.datamatrix.encoder.EncoderContext) -> encode
    int backtrackOneCharacter(com.google.zxing.datamatrix.encoder.EncoderContext,java.lang.StringBuilder,java.lang.StringBuilder,int) -> backtrackOneCharacter
    void writeNextTriplet(com.google.zxing.datamatrix.encoder.EncoderContext,java.lang.StringBuilder) -> writeNextTriplet
    void handleEOD(com.google.zxing.datamatrix.encoder.EncoderContext,java.lang.StringBuilder) -> handleEOD
    int encodeChar(char,java.lang.StringBuilder) -> encodeChar
    java.lang.String encodeToCodewords(java.lang.CharSequence,int) -> encodeToCodewords
com.google.zxing.datamatrix.encoder.DataMatrixSymbolInfo144 -> com.google.zxing.datamatrix.encoder.DataMatrixSymbolInfo144:
    int getInterleavedBlockCount() -> getInterleavedBlockCount
    int getDataLengthForInterleavedBlock(int) -> getDataLengthForInterleavedBlock
com.google.zxing.datamatrix.encoder.DefaultPlacement -> com.google.zxing.datamatrix.encoder.DefaultPlacement:
    java.lang.CharSequence codewords -> codewords
    int numrows -> numrows
    int numcols -> numcols
    byte[] bits -> bits
    int getNumrows() -> getNumrows
    int getNumcols() -> getNumcols
    byte[] getBits() -> getBits
    boolean getBit(int,int) -> getBit
    void setBit(int,int,boolean) -> setBit
    boolean hasBit(int,int) -> hasBit
    void place() -> place
    void module(int,int,int,int) -> module
    void utah(int,int,int) -> utah
    void corner1(int) -> corner1
    void corner2(int) -> corner2
    void corner3(int) -> corner3
    void corner4(int) -> corner4
com.google.zxing.datamatrix.encoder.EdifactEncoder -> com.google.zxing.datamatrix.encoder.EdifactEncoder:
    int getEncodingMode() -> getEncodingMode
    void encode(com.google.zxing.datamatrix.encoder.EncoderContext) -> encode
    void handleEOD(com.google.zxing.datamatrix.encoder.EncoderContext,java.lang.CharSequence) -> handleEOD
    void encodeChar(char,java.lang.StringBuilder) -> encodeChar
    java.lang.String encodeToCodewords(java.lang.CharSequence,int) -> encodeToCodewords
com.google.zxing.datamatrix.encoder.Encoder -> com.google.zxing.datamatrix.encoder.Encoder:
    int getEncodingMode() -> getEncodingMode
    void encode(com.google.zxing.datamatrix.encoder.EncoderContext) -> encode
com.google.zxing.datamatrix.encoder.EncoderContext -> com.google.zxing.datamatrix.encoder.EncoderContext:
    java.lang.String msg -> msg
    com.google.zxing.datamatrix.encoder.SymbolShapeHint shape -> shape
    com.google.zxing.Dimension minSize -> minSize
    com.google.zxing.Dimension maxSize -> maxSize
    java.lang.StringBuilder codewords -> codewords
    int pos -> pos
    int newEncoding -> newEncoding
    com.google.zxing.datamatrix.encoder.SymbolInfo symbolInfo -> symbolInfo
    int skipAtEnd -> skipAtEnd
    void setSymbolShape(com.google.zxing.datamatrix.encoder.SymbolShapeHint) -> setSymbolShape
    void setSizeConstraints(com.google.zxing.Dimension,com.google.zxing.Dimension) -> setSizeConstraints
    java.lang.String getMessage() -> getMessage
    void setSkipAtEnd(int) -> setSkipAtEnd
    char getCurrentChar() -> getCurrentChar
    char getCurrent() -> getCurrent
    java.lang.StringBuilder getCodewords() -> getCodewords
    void writeCodewords(java.lang.String) -> writeCodewords
    void writeCodeword(char) -> writeCodeword
    int getCodewordCount() -> getCodewordCount
    int getNewEncoding() -> getNewEncoding
    void signalEncoderChange(int) -> signalEncoderChange
    void resetEncoderSignal() -> resetEncoderSignal
    boolean hasMoreCharacters() -> hasMoreCharacters
    int getTotalMessageCharCount() -> getTotalMessageCharCount
    int getRemainingCharacters() -> getRemainingCharacters
    com.google.zxing.datamatrix.encoder.SymbolInfo getSymbolInfo() -> getSymbolInfo
    void updateSymbolInfo() -> updateSymbolInfo
    void updateSymbolInfo(int) -> updateSymbolInfo
    void resetSymbolInfo() -> resetSymbolInfo
com.google.zxing.datamatrix.encoder.ErrorCorrection -> com.google.zxing.datamatrix.encoder.ErrorCorrection:
    int[] FACTOR_SETS -> FACTOR_SETS
    int[][] FACTORS -> FACTORS
    int MODULO_VALUE -> MODULO_VALUE
    int[] LOG -> LOG
    int[] ALOG -> ALOG
    java.lang.String encodeECC200(java.lang.String,com.google.zxing.datamatrix.encoder.SymbolInfo) -> encodeECC200
    java.lang.String createECCBlock(java.lang.CharSequence,int) -> createECCBlock
    java.lang.String createECCBlock(java.lang.CharSequence,int,int,int) -> createECCBlock
com.google.zxing.datamatrix.encoder.HighLevelEncoder -> com.google.zxing.datamatrix.encoder.HighLevelEncoder:
    char PAD -> PAD
    char LATCH_TO_C40 -> LATCH_TO_C40
    char LATCH_TO_BASE256 -> LATCH_TO_BASE256
    char UPPER_SHIFT -> UPPER_SHIFT
    char MACRO_05 -> MACRO_05
    char MACRO_06 -> MACRO_06
    char LATCH_TO_ANSIX12 -> LATCH_TO_ANSIX12
    char LATCH_TO_TEXT -> LATCH_TO_TEXT
    char LATCH_TO_EDIFACT -> LATCH_TO_EDIFACT
    char C40_UNLATCH -> C40_UNLATCH
    char X12_UNLATCH -> X12_UNLATCH
    java.lang.String MACRO_05_HEADER -> MACRO_05_HEADER
    java.lang.String MACRO_06_HEADER -> MACRO_06_HEADER
    java.lang.String MACRO_TRAILER -> MACRO_TRAILER
    int ASCII_ENCODATION -> ASCII_ENCODATION
    int C40_ENCODATION -> C40_ENCODATION
    int TEXT_ENCODATION -> TEXT_ENCODATION
    int X12_ENCODATION -> X12_ENCODATION
    int EDIFACT_ENCODATION -> EDIFACT_ENCODATION
    int BASE256_ENCODATION -> BASE256_ENCODATION
    char randomize253State(char,int) -> randomize253State
    java.lang.String encodeHighLevel(java.lang.String) -> encodeHighLevel
    java.lang.String encodeHighLevel(java.lang.String,com.google.zxing.datamatrix.encoder.SymbolShapeHint,com.google.zxing.Dimension,com.google.zxing.Dimension) -> encodeHighLevel
    int lookAheadTest(java.lang.CharSequence,int,int) -> lookAheadTest
    int findMinimums(float[],int[],int,byte[]) -> findMinimums
    int getMinimumCount(byte[]) -> getMinimumCount
    boolean isDigit(char) -> isDigit
    boolean isExtendedASCII(char) -> isExtendedASCII
    boolean isNativeC40(char) -> isNativeC40
    boolean isNativeText(char) -> isNativeText
    boolean isNativeX12(char) -> isNativeX12
    boolean isX12TermSep(char) -> isX12TermSep
    boolean isNativeEDIFACT(char) -> isNativeEDIFACT
    boolean isSpecialB256(char) -> isSpecialB256
    int determineConsecutiveDigitCount(java.lang.CharSequence,int) -> determineConsecutiveDigitCount
    void illegalCharacter(char) -> illegalCharacter
com.google.zxing.datamatrix.encoder.SymbolInfo -> com.google.zxing.datamatrix.encoder.SymbolInfo:
    com.google.zxing.datamatrix.encoder.SymbolInfo[] PROD_SYMBOLS -> PROD_SYMBOLS
    com.google.zxing.datamatrix.encoder.SymbolInfo[] symbols -> symbols
    boolean rectangular -> rectangular
    int dataCapacity -> dataCapacity
    int errorCodewords -> errorCodewords
    int matrixWidth -> matrixWidth
    int matrixHeight -> matrixHeight
    int dataRegions -> dataRegions
    int rsBlockData -> rsBlockData
    int rsBlockError -> rsBlockError
    void overrideSymbolSet(com.google.zxing.datamatrix.encoder.SymbolInfo[]) -> overrideSymbolSet
    com.google.zxing.datamatrix.encoder.SymbolInfo lookup(int) -> lookup
    com.google.zxing.datamatrix.encoder.SymbolInfo lookup(int,com.google.zxing.datamatrix.encoder.SymbolShapeHint) -> lookup
    com.google.zxing.datamatrix.encoder.SymbolInfo lookup(int,boolean,boolean) -> lookup
    com.google.zxing.datamatrix.encoder.SymbolInfo lookup(int,com.google.zxing.datamatrix.encoder.SymbolShapeHint,boolean) -> lookup
    com.google.zxing.datamatrix.encoder.SymbolInfo lookup(int,com.google.zxing.datamatrix.encoder.SymbolShapeHint,com.google.zxing.Dimension,com.google.zxing.Dimension,boolean) -> lookup
    int getHorizontalDataRegions() -> getHorizontalDataRegions
    int getVerticalDataRegions() -> getVerticalDataRegions
    int getSymbolDataWidth() -> getSymbolDataWidth
    int getSymbolDataHeight() -> getSymbolDataHeight
    int getSymbolWidth() -> getSymbolWidth
    int getSymbolHeight() -> getSymbolHeight
    int getCodewordCount() -> getCodewordCount
    int getInterleavedBlockCount() -> getInterleavedBlockCount
    int getDataCapacity() -> getDataCapacity
    int getErrorCodewords() -> getErrorCodewords
    int getDataLengthForInterleavedBlock(int) -> getDataLengthForInterleavedBlock
    int getErrorLengthForInterleavedBlock(int) -> getErrorLengthForInterleavedBlock
    java.lang.String toString() -> toString
com.google.zxing.datamatrix.encoder.SymbolShapeHint -> com.google.zxing.datamatrix.encoder.SymbolShapeHint:
    com.google.zxing.datamatrix.encoder.SymbolShapeHint FORCE_NONE -> FORCE_NONE
    com.google.zxing.datamatrix.encoder.SymbolShapeHint FORCE_SQUARE -> FORCE_SQUARE
    com.google.zxing.datamatrix.encoder.SymbolShapeHint FORCE_RECTANGLE -> FORCE_RECTANGLE
    com.google.zxing.datamatrix.encoder.SymbolShapeHint[] $VALUES -> $VALUES
    com.google.zxing.datamatrix.encoder.SymbolShapeHint[] values() -> values
    com.google.zxing.datamatrix.encoder.SymbolShapeHint valueOf(java.lang.String) -> valueOf
com.google.zxing.datamatrix.encoder.TextEncoder -> com.google.zxing.datamatrix.encoder.TextEncoder:
    int getEncodingMode() -> getEncodingMode
    int encodeChar(char,java.lang.StringBuilder) -> encodeChar
com.google.zxing.datamatrix.encoder.X12Encoder -> com.google.zxing.datamatrix.encoder.X12Encoder:
    int getEncodingMode() -> getEncodingMode
    void encode(com.google.zxing.datamatrix.encoder.EncoderContext) -> encode
    int encodeChar(char,java.lang.StringBuilder) -> encodeChar
    void handleEOD(com.google.zxing.datamatrix.encoder.EncoderContext,java.lang.StringBuilder) -> handleEOD
com.google.zxing.maxicode.MaxiCodeReader -> com.google.zxing.maxicode.MaxiCodeReader:
    com.google.zxing.ResultPoint[] NO_POINTS -> NO_POINTS
    int MATRIX_WIDTH -> MATRIX_WIDTH
    int MATRIX_HEIGHT -> MATRIX_HEIGHT
    com.google.zxing.maxicode.decoder.Decoder decoder -> decoder
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap) -> decode
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> decode
    void reset() -> reset
    com.google.zxing.common.BitMatrix extractPureBits(com.google.zxing.common.BitMatrix) -> extractPureBits
com.google.zxing.maxicode.decoder.BitMatrixParser -> com.google.zxing.maxicode.decoder.BitMatrixParser:
    int[][] BITNR -> BITNR
    com.google.zxing.common.BitMatrix bitMatrix -> bitMatrix
    byte[] readCodewords() -> readCodewords
com.google.zxing.maxicode.decoder.DecodedBitStreamParser -> com.google.zxing.maxicode.decoder.DecodedBitStreamParser:
    char SHIFTA -> SHIFTA
    char SHIFTB -> SHIFTB
    char SHIFTC -> SHIFTC
    char SHIFTD -> SHIFTD
    char SHIFTE -> SHIFTE
    char TWOSHIFTA -> TWOSHIFTA
    char THREESHIFTA -> THREESHIFTA
    char LATCHA -> LATCHA
    char LATCHB -> LATCHB
    char LOCK -> LOCK
    char ECI -> ECI
    char NS -> NS
    char PAD -> PAD
    char FS -> FS
    char GS -> GS
    char RS -> RS
    java.text.NumberFormat NINE_DIGITS -> NINE_DIGITS
    java.text.NumberFormat THREE_DIGITS -> THREE_DIGITS
    java.lang.String[] SETS -> SETS
    com.google.zxing.common.DecoderResult decode(byte[],int) -> decode
    int getBit(int,byte[]) -> getBit
    int getInt(byte[],byte[]) -> getInt
    int getCountry(byte[]) -> getCountry
    int getServiceClass(byte[]) -> getServiceClass
    int getPostCode2Length(byte[]) -> getPostCode2Length
    int getPostCode2(byte[]) -> getPostCode2
    java.lang.String getPostCode3(byte[]) -> getPostCode3
    java.lang.String getMessage(byte[],int,int) -> getMessage
com.google.zxing.maxicode.decoder.Decoder -> com.google.zxing.maxicode.decoder.Decoder:
    int ALL -> ALL
    int EVEN -> EVEN
    int ODD -> ODD
    com.google.zxing.common.reedsolomon.ReedSolomonDecoder rsDecoder -> rsDecoder
    com.google.zxing.common.DecoderResult decode(com.google.zxing.common.BitMatrix) -> decode
    com.google.zxing.common.DecoderResult decode(com.google.zxing.common.BitMatrix,java.util.Map) -> decode
    void correctErrors(byte[],int,int,int,int) -> correctErrors
com.google.zxing.multi.ByQuadrantReader -> com.google.zxing.multi.ByQuadrantReader:
    com.google.zxing.Reader delegate -> delegate
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap) -> decode
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> decode
    void reset() -> reset
com.google.zxing.multi.GenericMultipleBarcodeReader -> com.google.zxing.multi.GenericMultipleBarcodeReader:
    int MIN_DIMENSION_TO_RECUR -> MIN_DIMENSION_TO_RECUR
    int MAX_DEPTH -> MAX_DEPTH
    com.google.zxing.Reader delegate -> delegate
    com.google.zxing.Result[] decodeMultiple(com.google.zxing.BinaryBitmap) -> decodeMultiple
    com.google.zxing.Result[] decodeMultiple(com.google.zxing.BinaryBitmap,java.util.Map) -> decodeMultiple
    void doDecodeMultiple(com.google.zxing.BinaryBitmap,java.util.Map,java.util.List,int,int,int) -> doDecodeMultiple
    com.google.zxing.Result translateResultPoints(com.google.zxing.Result,int,int) -> translateResultPoints
com.google.zxing.multi.MultipleBarcodeReader -> com.google.zxing.multi.MultipleBarcodeReader:
    com.google.zxing.Result[] decodeMultiple(com.google.zxing.BinaryBitmap) -> decodeMultiple
    com.google.zxing.Result[] decodeMultiple(com.google.zxing.BinaryBitmap,java.util.Map) -> decodeMultiple
com.google.zxing.multi.qrcode.QRCodeMultiReader -> com.google.zxing.multi.qrcode.QRCodeMultiReader:
    com.google.zxing.Result[] EMPTY_RESULT_ARRAY -> EMPTY_RESULT_ARRAY
    com.google.zxing.Result[] decodeMultiple(com.google.zxing.BinaryBitmap) -> decodeMultiple
    com.google.zxing.Result[] decodeMultiple(com.google.zxing.BinaryBitmap,java.util.Map) -> decodeMultiple
com.google.zxing.multi.qrcode.detector.MultiDetector -> com.google.zxing.multi.qrcode.detector.MultiDetector:
    com.google.zxing.common.DetectorResult[] EMPTY_DETECTOR_RESULTS -> EMPTY_DETECTOR_RESULTS
    com.google.zxing.common.DetectorResult[] detectMulti(java.util.Map) -> detectMulti
com.google.zxing.multi.qrcode.detector.MultiFinderPatternFinder -> com.google.zxing.multi.qrcode.detector.MultiFinderPatternFinder:
    com.google.zxing.qrcode.detector.FinderPatternInfo[] EMPTY_RESULT_ARRAY -> EMPTY_RESULT_ARRAY
    float MAX_MODULE_COUNT_PER_EDGE -> MAX_MODULE_COUNT_PER_EDGE
    float MIN_MODULE_COUNT_PER_EDGE -> MIN_MODULE_COUNT_PER_EDGE
    float DIFF_MODSIZE_CUTOFF_PERCENT -> DIFF_MODSIZE_CUTOFF_PERCENT
    float DIFF_MODSIZE_CUTOFF -> DIFF_MODSIZE_CUTOFF
    com.google.zxing.qrcode.detector.FinderPattern[][] selectMutipleBestPatterns() -> selectMutipleBestPatterns
    com.google.zxing.qrcode.detector.FinderPatternInfo[] findMulti(java.util.Map) -> findMulti
com.google.zxing.multi.qrcode.detector.MultiFinderPatternFinder$1 -> com.google.zxing.multi.qrcode.detector.MultiFinderPatternFinder$1:
com.google.zxing.multi.qrcode.detector.MultiFinderPatternFinder$ModuleSizeComparator -> com.google.zxing.multi.qrcode.detector.MultiFinderPatternFinder$ModuleSizeComparator:
    int compare(com.google.zxing.qrcode.detector.FinderPattern,com.google.zxing.qrcode.detector.FinderPattern) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.zxing.oned.CodaBarReader -> com.google.zxing.oned.CodaBarReader:
    int MAX_ACCEPTABLE -> MAX_ACCEPTABLE
    int PADDING -> PADDING
    java.lang.String ALPHABET_STRING -> ALPHABET_STRING
    char[] ALPHABET -> ALPHABET
    int[] CHARACTER_ENCODINGS -> CHARACTER_ENCODINGS
    int MIN_CHARACTER_LENGTH -> MIN_CHARACTER_LENGTH
    char[] STARTEND_ENCODING -> STARTEND_ENCODING
    java.lang.StringBuilder decodeRowResult -> decodeRowResult
    int[] counters -> counters
    int counterLength -> counterLength
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
    void validatePattern(int) -> validatePattern
    void setCounters(com.google.zxing.common.BitArray) -> setCounters
    void counterAppend(int) -> counterAppend
    int findStartPattern() -> findStartPattern
    boolean arrayContains(char[],char) -> arrayContains
    int toNarrowWidePattern(int) -> toNarrowWidePattern
com.google.zxing.oned.CodaBarWriter -> com.google.zxing.oned.CodaBarWriter:
    char[] START_END_CHARS -> START_END_CHARS
    char[] ALT_START_END_CHARS -> ALT_START_END_CHARS
    boolean[] encode(java.lang.String) -> encode
com.google.zxing.oned.Code128Reader -> com.google.zxing.oned.Code128Reader:
    int[][] CODE_PATTERNS -> CODE_PATTERNS
    int MAX_AVG_VARIANCE -> MAX_AVG_VARIANCE
    int MAX_INDIVIDUAL_VARIANCE -> MAX_INDIVIDUAL_VARIANCE
    int CODE_SHIFT -> CODE_SHIFT
    int CODE_CODE_C -> CODE_CODE_C
    int CODE_CODE_B -> CODE_CODE_B
    int CODE_CODE_A -> CODE_CODE_A
    int CODE_FNC_1 -> CODE_FNC_1
    int CODE_FNC_2 -> CODE_FNC_2
    int CODE_FNC_3 -> CODE_FNC_3
    int CODE_FNC_4_A -> CODE_FNC_4_A
    int CODE_FNC_4_B -> CODE_FNC_4_B
    int CODE_START_A -> CODE_START_A
    int CODE_START_B -> CODE_START_B
    int CODE_START_C -> CODE_START_C
    int CODE_STOP -> CODE_STOP
    int[] findStartPattern(com.google.zxing.common.BitArray) -> findStartPattern
    int decodeCode(com.google.zxing.common.BitArray,int[],int) -> decodeCode
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
com.google.zxing.oned.Code128Writer -> com.google.zxing.oned.Code128Writer:
    int CODE_START_B -> CODE_START_B
    int CODE_START_C -> CODE_START_C
    int CODE_CODE_B -> CODE_CODE_B
    int CODE_CODE_C -> CODE_CODE_C
    int CODE_STOP -> CODE_STOP
    char ESCAPE_FNC_1 -> ESCAPE_FNC_1
    char ESCAPE_FNC_2 -> ESCAPE_FNC_2
    char ESCAPE_FNC_3 -> ESCAPE_FNC_3
    char ESCAPE_FNC_4 -> ESCAPE_FNC_4
    int CODE_FNC_1 -> CODE_FNC_1
    int CODE_FNC_2 -> CODE_FNC_2
    int CODE_FNC_3 -> CODE_FNC_3
    int CODE_FNC_4_B -> CODE_FNC_4_B
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
    boolean[] encode(java.lang.String) -> encode
    boolean isDigits(java.lang.CharSequence,int,int) -> isDigits
com.google.zxing.oned.Code39Reader -> com.google.zxing.oned.Code39Reader:
    java.lang.String ALPHABET_STRING -> ALPHABET_STRING
    char[] ALPHABET -> ALPHABET
    int[] CHARACTER_ENCODINGS -> CHARACTER_ENCODINGS
    int ASTERISK_ENCODING -> ASTERISK_ENCODING
    boolean usingCheckDigit -> usingCheckDigit
    boolean extendedMode -> extendedMode
    java.lang.StringBuilder decodeRowResult -> decodeRowResult
    int[] counters -> counters
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
    int[] findAsteriskPattern(com.google.zxing.common.BitArray,int[]) -> findAsteriskPattern
    int toNarrowWidePattern(int[]) -> toNarrowWidePattern
    char patternToChar(int) -> patternToChar
    java.lang.String decodeExtended(java.lang.CharSequence) -> decodeExtended
com.google.zxing.oned.Code39Writer -> com.google.zxing.oned.Code39Writer:
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
    boolean[] encode(java.lang.String) -> encode
    void toIntArray(int,int[]) -> toIntArray
com.google.zxing.oned.Code93Reader -> com.google.zxing.oned.Code93Reader:
    java.lang.String ALPHABET_STRING -> ALPHABET_STRING
    char[] ALPHABET -> ALPHABET
    int[] CHARACTER_ENCODINGS -> CHARACTER_ENCODINGS
    int ASTERISK_ENCODING -> ASTERISK_ENCODING
    java.lang.StringBuilder decodeRowResult -> decodeRowResult
    int[] counters -> counters
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
    int[] findAsteriskPattern(com.google.zxing.common.BitArray) -> findAsteriskPattern
    int toPattern(int[]) -> toPattern
    char patternToChar(int) -> patternToChar
    java.lang.String decodeExtended(java.lang.CharSequence) -> decodeExtended
    void checkChecksums(java.lang.CharSequence) -> checkChecksums
    void checkOneChecksum(java.lang.CharSequence,int,int) -> checkOneChecksum
com.google.zxing.oned.EAN13Reader -> com.google.zxing.oned.EAN13Reader:
    int[] FIRST_DIGIT_ENCODINGS -> FIRST_DIGIT_ENCODINGS
    int[] decodeMiddleCounters -> decodeMiddleCounters
    int decodeMiddle(com.google.zxing.common.BitArray,int[],java.lang.StringBuilder) -> decodeMiddle
    com.google.zxing.BarcodeFormat getBarcodeFormat() -> getBarcodeFormat
    void determineFirstDigit(java.lang.StringBuilder,int) -> determineFirstDigit
com.google.zxing.oned.EAN13Writer -> com.google.zxing.oned.EAN13Writer:
    int CODE_WIDTH -> CODE_WIDTH
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
    boolean[] encode(java.lang.String) -> encode
com.google.zxing.oned.EAN8Reader -> com.google.zxing.oned.EAN8Reader:
    int[] decodeMiddleCounters -> decodeMiddleCounters
    int decodeMiddle(com.google.zxing.common.BitArray,int[],java.lang.StringBuilder) -> decodeMiddle
    com.google.zxing.BarcodeFormat getBarcodeFormat() -> getBarcodeFormat
com.google.zxing.oned.EAN8Writer -> com.google.zxing.oned.EAN8Writer:
    int CODE_WIDTH -> CODE_WIDTH
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
    boolean[] encode(java.lang.String) -> encode
com.google.zxing.oned.EANManufacturerOrgSupport -> com.google.zxing.oned.EANManufacturerOrgSupport:
    java.util.List ranges -> ranges
    java.util.List countryIdentifiers -> countryIdentifiers
    java.lang.String lookupCountryIdentifier(java.lang.String) -> lookupCountryIdentifier
    void add(int[],java.lang.String) -> add
    void initIfNeeded() -> initIfNeeded
com.google.zxing.oned.ITFReader -> com.google.zxing.oned.ITFReader:
    int MAX_AVG_VARIANCE -> MAX_AVG_VARIANCE
    int MAX_INDIVIDUAL_VARIANCE -> MAX_INDIVIDUAL_VARIANCE
    int W -> W
    int N -> N
    int[] DEFAULT_ALLOWED_LENGTHS -> DEFAULT_ALLOWED_LENGTHS
    int narrowLineWidth -> narrowLineWidth
    int[] START_PATTERN -> START_PATTERN
    int[] END_PATTERN_REVERSED -> END_PATTERN_REVERSED
    int[][] PATTERNS -> PATTERNS
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
    void decodeMiddle(com.google.zxing.common.BitArray,int,int,java.lang.StringBuilder) -> decodeMiddle
    int[] decodeStart(com.google.zxing.common.BitArray) -> decodeStart
    void validateQuietZone(com.google.zxing.common.BitArray,int) -> validateQuietZone
    int skipWhiteSpace(com.google.zxing.common.BitArray) -> skipWhiteSpace
    int[] decodeEnd(com.google.zxing.common.BitArray) -> decodeEnd
    int[] findGuardPattern(com.google.zxing.common.BitArray,int,int[]) -> findGuardPattern
    int decodeDigit(int[]) -> decodeDigit
com.google.zxing.oned.ITFWriter -> com.google.zxing.oned.ITFWriter:
    int[] START_PATTERN -> START_PATTERN
    int[] END_PATTERN -> END_PATTERN
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
    boolean[] encode(java.lang.String) -> encode
com.google.zxing.oned.MultiFormatOneDReader -> com.google.zxing.oned.MultiFormatOneDReader:
    com.google.zxing.oned.OneDReader[] readers -> readers
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
    void reset() -> reset
com.google.zxing.oned.MultiFormatUPCEANReader -> com.google.zxing.oned.MultiFormatUPCEANReader:
    com.google.zxing.oned.UPCEANReader[] readers -> readers
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
    void reset() -> reset
com.google.zxing.oned.OneDReader -> com.google.zxing.oned.OneDReader:
    int INTEGER_MATH_SHIFT -> INTEGER_MATH_SHIFT
    int PATTERN_MATCH_RESULT_SCALE_FACTOR -> PATTERN_MATCH_RESULT_SCALE_FACTOR
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap) -> decode
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> decode
    void reset() -> reset
    com.google.zxing.Result doDecode(com.google.zxing.BinaryBitmap,java.util.Map) -> doDecode
    void recordPattern(com.google.zxing.common.BitArray,int,int[]) -> recordPattern
    void recordPatternInReverse(com.google.zxing.common.BitArray,int,int[]) -> recordPatternInReverse
    int patternMatchVariance(int[],int[],int) -> patternMatchVariance
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
com.google.zxing.oned.OneDimensionalCodeWriter -> com.google.zxing.oned.OneDimensionalCodeWriter:
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int) -> encode
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
    com.google.zxing.common.BitMatrix renderResult(boolean[],int,int,int) -> renderResult
    int appendPattern(boolean[],int,int[],boolean) -> appendPattern
    int getDefaultMargin() -> getDefaultMargin
    boolean[] encode(java.lang.String) -> encode
com.google.zxing.oned.UPCAReader -> com.google.zxing.oned.UPCAReader:
    com.google.zxing.oned.UPCEANReader ean13Reader -> ean13Reader
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,int[],java.util.Map) -> decodeRow
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap) -> decode
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> decode
    com.google.zxing.BarcodeFormat getBarcodeFormat() -> getBarcodeFormat
    int decodeMiddle(com.google.zxing.common.BitArray,int[],java.lang.StringBuilder) -> decodeMiddle
    com.google.zxing.Result maybeReturnResult(com.google.zxing.Result) -> maybeReturnResult
com.google.zxing.oned.UPCAWriter -> com.google.zxing.oned.UPCAWriter:
    com.google.zxing.oned.EAN13Writer subWriter -> subWriter
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int) -> encode
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
    java.lang.String preencode(java.lang.String) -> preencode
com.google.zxing.oned.UPCEANExtension2Support -> com.google.zxing.oned.UPCEANExtension2Support:
    int[] decodeMiddleCounters -> decodeMiddleCounters
    java.lang.StringBuilder decodeRowStringBuffer -> decodeRowStringBuffer
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,int[]) -> decodeRow
    int decodeMiddle(com.google.zxing.common.BitArray,int[],java.lang.StringBuilder) -> decodeMiddle
    java.util.Map parseExtensionString(java.lang.String) -> parseExtensionString
com.google.zxing.oned.UPCEANExtension5Support -> com.google.zxing.oned.UPCEANExtension5Support:
    int[] CHECK_DIGIT_ENCODINGS -> CHECK_DIGIT_ENCODINGS
    int[] decodeMiddleCounters -> decodeMiddleCounters
    java.lang.StringBuilder decodeRowStringBuffer -> decodeRowStringBuffer
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,int[]) -> decodeRow
    int decodeMiddle(com.google.zxing.common.BitArray,int[],java.lang.StringBuilder) -> decodeMiddle
    int extensionChecksum(java.lang.CharSequence) -> extensionChecksum
    int determineCheckDigit(int) -> determineCheckDigit
    java.util.Map parseExtensionString(java.lang.String) -> parseExtensionString
    java.lang.String parseExtension5String(java.lang.String) -> parseExtension5String
com.google.zxing.oned.UPCEANExtensionSupport -> com.google.zxing.oned.UPCEANExtensionSupport:
    int[] EXTENSION_START_PATTERN -> EXTENSION_START_PATTERN
    com.google.zxing.oned.UPCEANExtension2Support twoSupport -> twoSupport
    com.google.zxing.oned.UPCEANExtension5Support fiveSupport -> fiveSupport
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,int) -> decodeRow
com.google.zxing.oned.UPCEANReader -> com.google.zxing.oned.UPCEANReader:
    int MAX_AVG_VARIANCE -> MAX_AVG_VARIANCE
    int MAX_INDIVIDUAL_VARIANCE -> MAX_INDIVIDUAL_VARIANCE
    int[] START_END_PATTERN -> START_END_PATTERN
    int[] MIDDLE_PATTERN -> MIDDLE_PATTERN
    int[][] L_PATTERNS -> L_PATTERNS
    int[][] L_AND_G_PATTERNS -> L_AND_G_PATTERNS
    java.lang.StringBuilder decodeRowStringBuffer -> decodeRowStringBuffer
    com.google.zxing.oned.UPCEANExtensionSupport extensionReader -> extensionReader
    com.google.zxing.oned.EANManufacturerOrgSupport eanManSupport -> eanManSupport
    int[] findStartGuardPattern(com.google.zxing.common.BitArray) -> findStartGuardPattern
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,int[],java.util.Map) -> decodeRow
    boolean checkChecksum(java.lang.String) -> checkChecksum
    boolean checkStandardUPCEANChecksum(java.lang.CharSequence) -> checkStandardUPCEANChecksum
    int[] decodeEnd(com.google.zxing.common.BitArray,int) -> decodeEnd
    int[] findGuardPattern(com.google.zxing.common.BitArray,int,boolean,int[]) -> findGuardPattern
    int[] findGuardPattern(com.google.zxing.common.BitArray,int,boolean,int[],int[]) -> findGuardPattern
    int decodeDigit(com.google.zxing.common.BitArray,int[],int,int[][]) -> decodeDigit
    com.google.zxing.BarcodeFormat getBarcodeFormat() -> getBarcodeFormat
    int decodeMiddle(com.google.zxing.common.BitArray,int[],java.lang.StringBuilder) -> decodeMiddle
com.google.zxing.oned.UPCEANWriter -> com.google.zxing.oned.UPCEANWriter:
    int getDefaultMargin() -> getDefaultMargin
com.google.zxing.oned.UPCEReader -> com.google.zxing.oned.UPCEReader:
    int[] MIDDLE_END_PATTERN -> MIDDLE_END_PATTERN
    int[][] NUMSYS_AND_CHECK_DIGIT_PATTERNS -> NUMSYS_AND_CHECK_DIGIT_PATTERNS
    int[] decodeMiddleCounters -> decodeMiddleCounters
    int decodeMiddle(com.google.zxing.common.BitArray,int[],java.lang.StringBuilder) -> decodeMiddle
    int[] decodeEnd(com.google.zxing.common.BitArray,int) -> decodeEnd
    boolean checkChecksum(java.lang.String) -> checkChecksum
    void determineNumSysAndCheckDigit(java.lang.StringBuilder,int) -> determineNumSysAndCheckDigit
    com.google.zxing.BarcodeFormat getBarcodeFormat() -> getBarcodeFormat
    java.lang.String convertUPCEtoUPCA(java.lang.String) -> convertUPCEtoUPCA
com.google.zxing.oned.rss.AbstractRSSReader -> com.google.zxing.oned.rss.AbstractRSSReader:
    int MAX_AVG_VARIANCE -> MAX_AVG_VARIANCE
    int MAX_INDIVIDUAL_VARIANCE -> MAX_INDIVIDUAL_VARIANCE
    float MIN_FINDER_PATTERN_RATIO -> MIN_FINDER_PATTERN_RATIO
    float MAX_FINDER_PATTERN_RATIO -> MAX_FINDER_PATTERN_RATIO
    int[] decodeFinderCounters -> decodeFinderCounters
    int[] dataCharacterCounters -> dataCharacterCounters
    float[] oddRoundingErrors -> oddRoundingErrors
    float[] evenRoundingErrors -> evenRoundingErrors
    int[] oddCounts -> oddCounts
    int[] evenCounts -> evenCounts
    int[] getDecodeFinderCounters() -> getDecodeFinderCounters
    int[] getDataCharacterCounters() -> getDataCharacterCounters
    float[] getOddRoundingErrors() -> getOddRoundingErrors
    float[] getEvenRoundingErrors() -> getEvenRoundingErrors
    int[] getOddCounts() -> getOddCounts
    int[] getEvenCounts() -> getEvenCounts
    int parseFinderValue(int[],int[][]) -> parseFinderValue
    int count(int[]) -> count
    void increment(int[],float[]) -> increment
    void decrement(int[],float[]) -> decrement
    boolean isFinderPattern(int[]) -> isFinderPattern
com.google.zxing.oned.rss.DataCharacter -> com.google.zxing.oned.rss.DataCharacter:
    int value -> value
    int checksumPortion -> checksumPortion
    int getValue() -> getValue
    int getChecksumPortion() -> getChecksumPortion
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.zxing.oned.rss.FinderPattern -> com.google.zxing.oned.rss.FinderPattern:
    int value -> value
    int[] startEnd -> startEnd
    com.google.zxing.ResultPoint[] resultPoints -> resultPoints
    int getValue() -> getValue
    int[] getStartEnd() -> getStartEnd
    com.google.zxing.ResultPoint[] getResultPoints() -> getResultPoints
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.zxing.oned.rss.Pair -> com.google.zxing.oned.rss.Pair:
    com.google.zxing.oned.rss.FinderPattern finderPattern -> finderPattern
    int count -> count
    com.google.zxing.oned.rss.FinderPattern getFinderPattern() -> getFinderPattern
    int getCount() -> getCount
    void incrementCount() -> incrementCount
com.google.zxing.oned.rss.RSS14Reader -> com.google.zxing.oned.rss.RSS14Reader:
    int[] OUTSIDE_EVEN_TOTAL_SUBSET -> OUTSIDE_EVEN_TOTAL_SUBSET
    int[] INSIDE_ODD_TOTAL_SUBSET -> INSIDE_ODD_TOTAL_SUBSET
    int[] OUTSIDE_GSUM -> OUTSIDE_GSUM
    int[] INSIDE_GSUM -> INSIDE_GSUM
    int[] OUTSIDE_ODD_WIDEST -> OUTSIDE_ODD_WIDEST
    int[] INSIDE_ODD_WIDEST -> INSIDE_ODD_WIDEST
    int[][] FINDER_PATTERNS -> FINDER_PATTERNS
    java.util.List possibleLeftPairs -> possibleLeftPairs
    java.util.List possibleRightPairs -> possibleRightPairs
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
    void addOrTally(java.util.Collection,com.google.zxing.oned.rss.Pair) -> addOrTally
    void reset() -> reset
    com.google.zxing.Result constructResult(com.google.zxing.oned.rss.Pair,com.google.zxing.oned.rss.Pair) -> constructResult
    boolean checkChecksum(com.google.zxing.oned.rss.Pair,com.google.zxing.oned.rss.Pair) -> checkChecksum
    com.google.zxing.oned.rss.Pair decodePair(com.google.zxing.common.BitArray,boolean,int,java.util.Map) -> decodePair
    com.google.zxing.oned.rss.DataCharacter decodeDataCharacter(com.google.zxing.common.BitArray,com.google.zxing.oned.rss.FinderPattern,boolean) -> decodeDataCharacter
    int[] findFinderPattern(com.google.zxing.common.BitArray,int,boolean) -> findFinderPattern
    com.google.zxing.oned.rss.FinderPattern parseFoundFinderPattern(com.google.zxing.common.BitArray,int,boolean,int[]) -> parseFoundFinderPattern
    void adjustOddEvenCounts(boolean,int) -> adjustOddEvenCounts
com.google.zxing.oned.rss.RSSUtils -> com.google.zxing.oned.rss.RSSUtils:
    int getRSSvalue(int[],int,boolean) -> getRSSvalue
    int combins(int,int) -> combins
com.google.zxing.oned.rss.expanded.BitArrayBuilder -> com.google.zxing.oned.rss.expanded.BitArrayBuilder:
    com.google.zxing.common.BitArray buildBitArray(java.util.List) -> buildBitArray
com.google.zxing.oned.rss.expanded.ExpandedPair -> com.google.zxing.oned.rss.expanded.ExpandedPair:
    boolean mayBeLast -> mayBeLast
    com.google.zxing.oned.rss.DataCharacter leftChar -> leftChar
    com.google.zxing.oned.rss.DataCharacter rightChar -> rightChar
    com.google.zxing.oned.rss.FinderPattern finderPattern -> finderPattern
    boolean mayBeLast() -> mayBeLast
    com.google.zxing.oned.rss.DataCharacter getLeftChar() -> getLeftChar
    com.google.zxing.oned.rss.DataCharacter getRightChar() -> getRightChar
    com.google.zxing.oned.rss.FinderPattern getFinderPattern() -> getFinderPattern
    boolean mustBeLast() -> mustBeLast
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    boolean equalsOrNull(java.lang.Object,java.lang.Object) -> equalsOrNull
    int hashCode() -> hashCode
    int hashNotNull(java.lang.Object) -> hashNotNull
com.google.zxing.oned.rss.expanded.ExpandedRow -> com.google.zxing.oned.rss.expanded.ExpandedRow:
    java.util.List pairs -> pairs
    int rowNumber -> rowNumber
    boolean wasReversed -> wasReversed
    java.util.List getPairs() -> getPairs
    int getRowNumber() -> getRowNumber
    boolean isReversed() -> isReversed
    boolean isEquivalent(java.util.List) -> isEquivalent
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.zxing.oned.rss.expanded.RSSExpandedReader -> com.google.zxing.oned.rss.expanded.RSSExpandedReader:
    int[] SYMBOL_WIDEST -> SYMBOL_WIDEST
    int[] EVEN_TOTAL_SUBSET -> EVEN_TOTAL_SUBSET
    int[] GSUM -> GSUM
    int[][] FINDER_PATTERNS -> FINDER_PATTERNS
    int[][] WEIGHTS -> WEIGHTS
    int FINDER_PAT_A -> FINDER_PAT_A
    int FINDER_PAT_B -> FINDER_PAT_B
    int FINDER_PAT_C -> FINDER_PAT_C
    int FINDER_PAT_D -> FINDER_PAT_D
    int FINDER_PAT_E -> FINDER_PAT_E
    int FINDER_PAT_F -> FINDER_PAT_F
    int[][] FINDER_PATTERN_SEQUENCES -> FINDER_PATTERN_SEQUENCES
    int MAX_PAIRS -> MAX_PAIRS
    java.util.List pairs -> pairs
    java.util.List rows -> rows
    int[] startEnd -> startEnd
    boolean startFromEven -> startFromEven
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
    void reset() -> reset
    java.util.List decodeRow2pairs(int,com.google.zxing.common.BitArray) -> decodeRow2pairs
    java.util.List checkRows(boolean) -> checkRows
    java.util.List checkRows(java.util.List,int) -> checkRows
    boolean isValidSequence(java.util.List) -> isValidSequence
    void storeRow(int,boolean) -> storeRow
    void removePartialRows(java.util.List,java.util.List) -> removePartialRows
    boolean isPartialRow(java.lang.Iterable,java.lang.Iterable) -> isPartialRow
    java.util.List getRows() -> getRows
    com.google.zxing.Result constructResult(java.util.List) -> constructResult
    boolean checkChecksum() -> checkChecksum
    int getNextSecondBar(com.google.zxing.common.BitArray,int) -> getNextSecondBar
    com.google.zxing.oned.rss.expanded.ExpandedPair retrieveNextPair(com.google.zxing.common.BitArray,java.util.List,int) -> retrieveNextPair
    void findNextPair(com.google.zxing.common.BitArray,java.util.List,int) -> findNextPair
    void reverseCounters(int[]) -> reverseCounters
    com.google.zxing.oned.rss.FinderPattern parseFoundFinderPattern(com.google.zxing.common.BitArray,int,boolean) -> parseFoundFinderPattern
    com.google.zxing.oned.rss.DataCharacter decodeDataCharacter(com.google.zxing.common.BitArray,com.google.zxing.oned.rss.FinderPattern,boolean,boolean) -> decodeDataCharacter
    boolean isNotA1left(com.google.zxing.oned.rss.FinderPattern,boolean,boolean) -> isNotA1left
    void adjustOddEvenCounts(int) -> adjustOddEvenCounts
com.google.zxing.oned.rss.expanded.decoders.AI013103decoder -> com.google.zxing.oned.rss.expanded.decoders.AI013103decoder:
    void addWeightCode(java.lang.StringBuilder,int) -> addWeightCode
    int checkWeight(int) -> checkWeight
com.google.zxing.oned.rss.expanded.decoders.AI01320xDecoder -> com.google.zxing.oned.rss.expanded.decoders.AI01320xDecoder:
    void addWeightCode(java.lang.StringBuilder,int) -> addWeightCode
    int checkWeight(int) -> checkWeight
com.google.zxing.oned.rss.expanded.decoders.AI01392xDecoder -> com.google.zxing.oned.rss.expanded.decoders.AI01392xDecoder:
    int HEADER_SIZE -> HEADER_SIZE
    int LAST_DIGIT_SIZE -> LAST_DIGIT_SIZE
    java.lang.String parseInformation() -> parseInformation
com.google.zxing.oned.rss.expanded.decoders.AI01393xDecoder -> com.google.zxing.oned.rss.expanded.decoders.AI01393xDecoder:
    int HEADER_SIZE -> HEADER_SIZE
    int LAST_DIGIT_SIZE -> LAST_DIGIT_SIZE
    int FIRST_THREE_DIGITS_SIZE -> FIRST_THREE_DIGITS_SIZE
    java.lang.String parseInformation() -> parseInformation
com.google.zxing.oned.rss.expanded.decoders.AI013x0x1xDecoder -> com.google.zxing.oned.rss.expanded.decoders.AI013x0x1xDecoder:
    int HEADER_SIZE -> HEADER_SIZE
    int WEIGHT_SIZE -> WEIGHT_SIZE
    int DATE_SIZE -> DATE_SIZE
    java.lang.String dateCode -> dateCode
    java.lang.String firstAIdigits -> firstAIdigits
    java.lang.String parseInformation() -> parseInformation
    void encodeCompressedDate(java.lang.StringBuilder,int) -> encodeCompressedDate
    void addWeightCode(java.lang.StringBuilder,int) -> addWeightCode
    int checkWeight(int) -> checkWeight
com.google.zxing.oned.rss.expanded.decoders.AI013x0xDecoder -> com.google.zxing.oned.rss.expanded.decoders.AI013x0xDecoder:
    int HEADER_SIZE -> HEADER_SIZE
    int WEIGHT_SIZE -> WEIGHT_SIZE
    java.lang.String parseInformation() -> parseInformation
com.google.zxing.oned.rss.expanded.decoders.AI01AndOtherAIs -> com.google.zxing.oned.rss.expanded.decoders.AI01AndOtherAIs:
    int HEADER_SIZE -> HEADER_SIZE
    java.lang.String parseInformation() -> parseInformation
com.google.zxing.oned.rss.expanded.decoders.AI01decoder -> com.google.zxing.oned.rss.expanded.decoders.AI01decoder:
    int GTIN_SIZE -> GTIN_SIZE
    void encodeCompressedGtin(java.lang.StringBuilder,int) -> encodeCompressedGtin
    void encodeCompressedGtinWithoutAI(java.lang.StringBuilder,int,int) -> encodeCompressedGtinWithoutAI
    void appendCheckDigit(java.lang.StringBuilder,int) -> appendCheckDigit
com.google.zxing.oned.rss.expanded.decoders.AI01weightDecoder -> com.google.zxing.oned.rss.expanded.decoders.AI01weightDecoder:
    void encodeCompressedWeight(java.lang.StringBuilder,int,int) -> encodeCompressedWeight
    void addWeightCode(java.lang.StringBuilder,int) -> addWeightCode
    int checkWeight(int) -> checkWeight
com.google.zxing.oned.rss.expanded.decoders.AbstractExpandedDecoder -> com.google.zxing.oned.rss.expanded.decoders.AbstractExpandedDecoder:
    com.google.zxing.common.BitArray information -> information
    com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder generalDecoder -> generalDecoder
    com.google.zxing.common.BitArray getInformation() -> getInformation
    com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder getGeneralDecoder() -> getGeneralDecoder
    java.lang.String parseInformation() -> parseInformation
    com.google.zxing.oned.rss.expanded.decoders.AbstractExpandedDecoder createDecoder(com.google.zxing.common.BitArray) -> createDecoder
com.google.zxing.oned.rss.expanded.decoders.AnyAIDecoder -> com.google.zxing.oned.rss.expanded.decoders.AnyAIDecoder:
    int HEADER_SIZE -> HEADER_SIZE
    java.lang.String parseInformation() -> parseInformation
com.google.zxing.oned.rss.expanded.decoders.BlockParsedResult -> com.google.zxing.oned.rss.expanded.decoders.BlockParsedResult:
    com.google.zxing.oned.rss.expanded.decoders.DecodedInformation decodedInformation -> decodedInformation
    boolean finished -> finished
    com.google.zxing.oned.rss.expanded.decoders.DecodedInformation getDecodedInformation() -> getDecodedInformation
    boolean isFinished() -> isFinished
com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState -> com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState:
    int position -> position
    com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State encoding -> encoding
    int getPosition() -> getPosition
    void setPosition(int) -> setPosition
    void incrementPosition(int) -> incrementPosition
    boolean isAlpha() -> isAlpha
    boolean isNumeric() -> isNumeric
    boolean isIsoIec646() -> isIsoIec646
    void setNumeric() -> setNumeric
    void setAlpha() -> setAlpha
    void setIsoIec646() -> setIsoIec646
com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State -> com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State:
    com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State NUMERIC -> NUMERIC
    com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State ALPHA -> ALPHA
    com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State ISO_IEC_646 -> ISO_IEC_646
    com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State[] $VALUES -> $VALUES
    com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State[] values() -> values
    com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State valueOf(java.lang.String) -> valueOf
com.google.zxing.oned.rss.expanded.decoders.DecodedChar -> com.google.zxing.oned.rss.expanded.decoders.DecodedChar:
    char value -> value
    char FNC1 -> FNC1
    char getValue() -> getValue
    boolean isFNC1() -> isFNC1
com.google.zxing.oned.rss.expanded.decoders.DecodedInformation -> com.google.zxing.oned.rss.expanded.decoders.DecodedInformation:
    java.lang.String newString -> newString
    int remainingValue -> remainingValue
    boolean remaining -> remaining
    java.lang.String getNewString() -> getNewString
    boolean isRemaining() -> isRemaining
    int getRemainingValue() -> getRemainingValue
com.google.zxing.oned.rss.expanded.decoders.DecodedNumeric -> com.google.zxing.oned.rss.expanded.decoders.DecodedNumeric:
    int firstDigit -> firstDigit
    int secondDigit -> secondDigit
    int FNC1 -> FNC1
    int getFirstDigit() -> getFirstDigit
    int getSecondDigit() -> getSecondDigit
    int getValue() -> getValue
    boolean isFirstDigitFNC1() -> isFirstDigitFNC1
    boolean isSecondDigitFNC1() -> isSecondDigitFNC1
    boolean isAnyFNC1() -> isAnyFNC1
com.google.zxing.oned.rss.expanded.decoders.DecodedObject -> com.google.zxing.oned.rss.expanded.decoders.DecodedObject:
    int newPosition -> newPosition
    int getNewPosition() -> getNewPosition
com.google.zxing.oned.rss.expanded.decoders.FieldParser -> com.google.zxing.oned.rss.expanded.decoders.FieldParser:
    java.lang.Object VARIABLE_LENGTH -> VARIABLE_LENGTH
    java.lang.Object[][] TWO_DIGIT_DATA_LENGTH -> TWO_DIGIT_DATA_LENGTH
    java.lang.Object[][] THREE_DIGIT_DATA_LENGTH -> THREE_DIGIT_DATA_LENGTH
    java.lang.Object[][] THREE_DIGIT_PLUS_DIGIT_DATA_LENGTH -> THREE_DIGIT_PLUS_DIGIT_DATA_LENGTH
    java.lang.Object[][] FOUR_DIGIT_DATA_LENGTH -> FOUR_DIGIT_DATA_LENGTH
    java.lang.String parseFieldsInGeneralPurpose(java.lang.String) -> parseFieldsInGeneralPurpose
    java.lang.String processFixedAI(int,int,java.lang.String) -> processFixedAI
    java.lang.String processVariableAI(int,int,java.lang.String) -> processVariableAI
com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder -> com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder:
    com.google.zxing.common.BitArray information -> information
    com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState current -> current
    java.lang.StringBuilder buffer -> buffer
    java.lang.String decodeAllCodes(java.lang.StringBuilder,int) -> decodeAllCodes
    boolean isStillNumeric(int) -> isStillNumeric
    com.google.zxing.oned.rss.expanded.decoders.DecodedNumeric decodeNumeric(int) -> decodeNumeric
    int extractNumericValueFromBitArray(int,int) -> extractNumericValueFromBitArray
    int extractNumericValueFromBitArray(com.google.zxing.common.BitArray,int,int) -> extractNumericValueFromBitArray
    com.google.zxing.oned.rss.expanded.decoders.DecodedInformation decodeGeneralPurposeField(int,java.lang.String) -> decodeGeneralPurposeField
    com.google.zxing.oned.rss.expanded.decoders.DecodedInformation parseBlocks() -> parseBlocks
    com.google.zxing.oned.rss.expanded.decoders.BlockParsedResult parseNumericBlock() -> parseNumericBlock
    com.google.zxing.oned.rss.expanded.decoders.BlockParsedResult parseIsoIec646Block() -> parseIsoIec646Block
    com.google.zxing.oned.rss.expanded.decoders.BlockParsedResult parseAlphaBlock() -> parseAlphaBlock
    boolean isStillIsoIec646(int) -> isStillIsoIec646
    com.google.zxing.oned.rss.expanded.decoders.DecodedChar decodeIsoIec646(int) -> decodeIsoIec646
    boolean isStillAlpha(int) -> isStillAlpha
    com.google.zxing.oned.rss.expanded.decoders.DecodedChar decodeAlphanumeric(int) -> decodeAlphanumeric
    boolean isAlphaTo646ToAlphaLatch(int) -> isAlphaTo646ToAlphaLatch
    boolean isAlphaOr646ToNumericLatch(int) -> isAlphaOr646ToNumericLatch
    boolean isNumericToAlphaNumericLatch(int) -> isNumericToAlphaNumericLatch
com.google.zxing.pdf417.PDF417Common -> com.google.zxing.pdf417.PDF417Common:
    int NUMBER_OF_CODEWORDS -> NUMBER_OF_CODEWORDS
    int MAX_CODEWORDS_IN_BARCODE -> MAX_CODEWORDS_IN_BARCODE
    int MIN_ROWS_IN_BARCODE -> MIN_ROWS_IN_BARCODE
    int MAX_ROWS_IN_BARCODE -> MAX_ROWS_IN_BARCODE
    int MODULES_IN_CODEWORD -> MODULES_IN_CODEWORD
    int MODULES_IN_STOP_PATTERN -> MODULES_IN_STOP_PATTERN
    int BARS_IN_MODULE -> BARS_IN_MODULE
    int[] EMPTY_INT_ARRAY -> EMPTY_INT_ARRAY
    int[] SYMBOL_TABLE -> SYMBOL_TABLE
    int[] CODEWORD_TABLE -> CODEWORD_TABLE
    int getBitCountSum(int[]) -> getBitCountSum
    int[] toIntArray(java.util.Collection) -> toIntArray
    int getCodeword(long) -> getCodeword
    int findCodewordIndex(long) -> findCodewordIndex
com.google.zxing.pdf417.PDF417Reader -> com.google.zxing.pdf417.PDF417Reader:
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap) -> decode
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> decode
    com.google.zxing.Result[] decodeMultiple(com.google.zxing.BinaryBitmap) -> decodeMultiple
    com.google.zxing.Result[] decodeMultiple(com.google.zxing.BinaryBitmap,java.util.Map) -> decodeMultiple
    com.google.zxing.Result[] decode(com.google.zxing.BinaryBitmap,java.util.Map,boolean) -> decode
    int getMaxWidth(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> getMaxWidth
    int getMinWidth(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> getMinWidth
    int getMaxCodewordWidth(com.google.zxing.ResultPoint[]) -> getMaxCodewordWidth
    int getMinCodewordWidth(com.google.zxing.ResultPoint[]) -> getMinCodewordWidth
    void reset() -> reset
com.google.zxing.pdf417.PDF417ResultMetadata -> com.google.zxing.pdf417.PDF417ResultMetadata:
    int segmentIndex -> segmentIndex
    java.lang.String fileId -> fileId
    int[] optionalData -> optionalData
    boolean lastSegment -> lastSegment
    int getSegmentIndex() -> getSegmentIndex
    void setSegmentIndex(int) -> setSegmentIndex
    java.lang.String getFileId() -> getFileId
    void setFileId(java.lang.String) -> setFileId
    int[] getOptionalData() -> getOptionalData
    void setOptionalData(int[]) -> setOptionalData
    boolean isLastSegment() -> isLastSegment
    void setLastSegment(boolean) -> setLastSegment
com.google.zxing.pdf417.PDF417Writer -> com.google.zxing.pdf417.PDF417Writer:
    int WHITE_SPACE -> WHITE_SPACE
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int) -> encode
    com.google.zxing.common.BitMatrix bitMatrixFromEncoder(com.google.zxing.pdf417.encoder.PDF417,java.lang.String,int,int,int) -> bitMatrixFromEncoder
    com.google.zxing.common.BitMatrix bitMatrixFrombitArray(byte[][],int) -> bitMatrixFrombitArray
    byte[][] rotateArray(byte[][]) -> rotateArray
com.google.zxing.pdf417.decoder.BarcodeMetadata -> com.google.zxing.pdf417.decoder.BarcodeMetadata:
    int columnCount -> columnCount
    int errorCorrectionLevel -> errorCorrectionLevel
    int rowCountUpperPart -> rowCountUpperPart
    int rowCountLowerPart -> rowCountLowerPart
    int rowCount -> rowCount
    int getColumnCount() -> getColumnCount
    int getErrorCorrectionLevel() -> getErrorCorrectionLevel
    int getRowCount() -> getRowCount
    int getRowCountUpperPart() -> getRowCountUpperPart
    int getRowCountLowerPart() -> getRowCountLowerPart
com.google.zxing.pdf417.decoder.BarcodeValue -> com.google.zxing.pdf417.decoder.BarcodeValue:
    java.util.Map values -> values
    void setValue(int) -> setValue
    int[] getValue() -> getValue
    java.lang.Integer getConfidence(int) -> getConfidence
com.google.zxing.pdf417.decoder.BoundingBox -> com.google.zxing.pdf417.decoder.BoundingBox:
    com.google.zxing.common.BitMatrix image -> image
    com.google.zxing.ResultPoint topLeft -> topLeft
    com.google.zxing.ResultPoint bottomLeft -> bottomLeft
    com.google.zxing.ResultPoint topRight -> topRight
    com.google.zxing.ResultPoint bottomRight -> bottomRight
    int minX -> minX
    int maxX -> maxX
    int minY -> minY
    int maxY -> maxY
    void init(com.google.zxing.common.BitMatrix,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> init
    com.google.zxing.pdf417.decoder.BoundingBox merge(com.google.zxing.pdf417.decoder.BoundingBox,com.google.zxing.pdf417.decoder.BoundingBox) -> merge
    com.google.zxing.pdf417.decoder.BoundingBox addMissingRows(int,int,boolean) -> addMissingRows
    void calculateMinMaxValues() -> calculateMinMaxValues
    int getMinX() -> getMinX
    int getMaxX() -> getMaxX
    int getMinY() -> getMinY
    int getMaxY() -> getMaxY
    com.google.zxing.ResultPoint getTopLeft() -> getTopLeft
    com.google.zxing.ResultPoint getTopRight() -> getTopRight
    com.google.zxing.ResultPoint getBottomLeft() -> getBottomLeft
    com.google.zxing.ResultPoint getBottomRight() -> getBottomRight
com.google.zxing.pdf417.decoder.Codeword -> com.google.zxing.pdf417.decoder.Codeword:
    int BARCODE_ROW_UNKNOWN -> BARCODE_ROW_UNKNOWN
    int startX -> startX
    int endX -> endX
    int bucket -> bucket
    int value -> value
    int rowNumber -> rowNumber
    boolean hasValidRowNumber() -> hasValidRowNumber
    boolean isValidRowNumber(int) -> isValidRowNumber
    void setRowNumberAsRowIndicatorColumn() -> setRowNumberAsRowIndicatorColumn
    int getWidth() -> getWidth
    int getStartX() -> getStartX
    int getEndX() -> getEndX
    int getBucket() -> getBucket
    int getValue() -> getValue
    int getRowNumber() -> getRowNumber
    void setRowNumber(int) -> setRowNumber
    java.lang.String toString() -> toString
com.google.zxing.pdf417.decoder.DecodedBitStreamParser -> com.google.zxing.pdf417.decoder.DecodedBitStreamParser:
    int TEXT_COMPACTION_MODE_LATCH -> TEXT_COMPACTION_MODE_LATCH
    int BYTE_COMPACTION_MODE_LATCH -> BYTE_COMPACTION_MODE_LATCH
    int NUMERIC_COMPACTION_MODE_LATCH -> NUMERIC_COMPACTION_MODE_LATCH
    int BYTE_COMPACTION_MODE_LATCH_6 -> BYTE_COMPACTION_MODE_LATCH_6
    int BEGIN_MACRO_PDF417_CONTROL_BLOCK -> BEGIN_MACRO_PDF417_CONTROL_BLOCK
    int BEGIN_MACRO_PDF417_OPTIONAL_FIELD -> BEGIN_MACRO_PDF417_OPTIONAL_FIELD
    int MACRO_PDF417_TERMINATOR -> MACRO_PDF417_TERMINATOR
    int MODE_SHIFT_TO_BYTE_COMPACTION_MODE -> MODE_SHIFT_TO_BYTE_COMPACTION_MODE
    int MAX_NUMERIC_CODEWORDS -> MAX_NUMERIC_CODEWORDS
    int PL -> PL
    int LL -> LL
    int AS -> AS
    int ML -> ML
    int AL -> AL
    int PS -> PS
    int PAL -> PAL
    char[] PUNCT_CHARS -> PUNCT_CHARS
    char[] MIXED_CHARS -> MIXED_CHARS
    java.math.BigInteger[] EXP900 -> EXP900
    int NUMBER_OF_SEQUENCE_CODEWORDS -> NUMBER_OF_SEQUENCE_CODEWORDS
    com.google.zxing.common.DecoderResult decode(int[],java.lang.String) -> decode
    int decodeMacroBlock(int[],int,com.google.zxing.pdf417.PDF417ResultMetadata) -> decodeMacroBlock
    int textCompaction(int[],int,java.lang.StringBuilder) -> textCompaction
    void decodeTextCompaction(int[],int[],int,java.lang.StringBuilder) -> decodeTextCompaction
    int byteCompaction(int,int[],int,java.lang.StringBuilder) -> byteCompaction
    int numericCompaction(int[],int,java.lang.StringBuilder) -> numericCompaction
    java.lang.String decodeBase900toBase10(int[],int) -> decodeBase900toBase10
com.google.zxing.pdf417.decoder.DecodedBitStreamParser$1 -> com.google.zxing.pdf417.decoder.DecodedBitStreamParser$1:
    int[] $SwitchMap$com$google$zxing$pdf417$decoder$DecodedBitStreamParser$Mode -> $SwitchMap$com$google$zxing$pdf417$decoder$DecodedBitStreamParser$Mode
com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode -> com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode:
    com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode ALPHA -> ALPHA
    com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode LOWER -> LOWER
    com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode MIXED -> MIXED
    com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode PUNCT -> PUNCT
    com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode ALPHA_SHIFT -> ALPHA_SHIFT
    com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode PUNCT_SHIFT -> PUNCT_SHIFT
    com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode[] $VALUES -> $VALUES
    com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode[] values() -> values
    com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode valueOf(java.lang.String) -> valueOf
com.google.zxing.pdf417.decoder.DetectionResult -> com.google.zxing.pdf417.decoder.DetectionResult:
    int ADJUST_ROW_NUMBER_SKIP -> ADJUST_ROW_NUMBER_SKIP
    com.google.zxing.pdf417.decoder.BarcodeMetadata barcodeMetadata -> barcodeMetadata
    com.google.zxing.pdf417.decoder.DetectionResultColumn[] detectionResultColumns -> detectionResultColumns
    com.google.zxing.pdf417.decoder.BoundingBox boundingBox -> boundingBox
    int barcodeColumnCount -> barcodeColumnCount
    com.google.zxing.pdf417.decoder.DetectionResultColumn[] getDetectionResultColumns() -> getDetectionResultColumns
    void adjustIndicatorColumnRowNumbers(com.google.zxing.pdf417.decoder.DetectionResultColumn) -> adjustIndicatorColumnRowNumbers
    int adjustRowNumbers() -> adjustRowNumbers
    int adjustRowNumbersByRow() -> adjustRowNumbersByRow
    void adjustRowNumbersFromBothRI() -> adjustRowNumbersFromBothRI
    int adjustRowNumbersFromRRI() -> adjustRowNumbersFromRRI
    int adjustRowNumbersFromLRI() -> adjustRowNumbersFromLRI
    int adjustRowNumberIfValid(int,int,com.google.zxing.pdf417.decoder.Codeword) -> adjustRowNumberIfValid
    void adjustRowNumbers(int,int,com.google.zxing.pdf417.decoder.Codeword[]) -> adjustRowNumbers
    boolean adjustRowNumber(com.google.zxing.pdf417.decoder.Codeword,com.google.zxing.pdf417.decoder.Codeword) -> adjustRowNumber
    int getBarcodeColumnCount() -> getBarcodeColumnCount
    int getBarcodeRowCount() -> getBarcodeRowCount
    int getBarcodeECLevel() -> getBarcodeECLevel
    void setBoundingBox(com.google.zxing.pdf417.decoder.BoundingBox) -> setBoundingBox
    com.google.zxing.pdf417.decoder.BoundingBox getBoundingBox() -> getBoundingBox
    void setDetectionResultColumn(int,com.google.zxing.pdf417.decoder.DetectionResultColumn) -> setDetectionResultColumn
    com.google.zxing.pdf417.decoder.DetectionResultColumn getDetectionResultColumn(int) -> getDetectionResultColumn
    java.lang.String toString() -> toString
com.google.zxing.pdf417.decoder.DetectionResultColumn -> com.google.zxing.pdf417.decoder.DetectionResultColumn:
    int MAX_NEARBY_DISTANCE -> MAX_NEARBY_DISTANCE
    com.google.zxing.pdf417.decoder.BoundingBox boundingBox -> boundingBox
    com.google.zxing.pdf417.decoder.Codeword[] codewords -> codewords
    com.google.zxing.pdf417.decoder.Codeword getCodewordNearby(int) -> getCodewordNearby
    int imageRowToCodewordIndex(int) -> imageRowToCodewordIndex
    void setCodeword(int,com.google.zxing.pdf417.decoder.Codeword) -> setCodeword
    com.google.zxing.pdf417.decoder.Codeword getCodeword(int) -> getCodeword
    com.google.zxing.pdf417.decoder.BoundingBox getBoundingBox() -> getBoundingBox
    com.google.zxing.pdf417.decoder.Codeword[] getCodewords() -> getCodewords
    java.lang.String toString() -> toString
com.google.zxing.pdf417.decoder.DetectionResultRowIndicatorColumn -> com.google.zxing.pdf417.decoder.DetectionResultRowIndicatorColumn:
    boolean isLeft -> isLeft
    void setRowNumbers() -> setRowNumbers
    int adjustCompleteIndicatorColumnRowNumbers(com.google.zxing.pdf417.decoder.BarcodeMetadata) -> adjustCompleteIndicatorColumnRowNumbers
    int[] getRowHeights() -> getRowHeights
    int adjustIncompleteIndicatorColumnRowNumbers(com.google.zxing.pdf417.decoder.BarcodeMetadata) -> adjustIncompleteIndicatorColumnRowNumbers
    com.google.zxing.pdf417.decoder.BarcodeMetadata getBarcodeMetadata() -> getBarcodeMetadata
    void removeIncorrectCodewords(com.google.zxing.pdf417.decoder.Codeword[],com.google.zxing.pdf417.decoder.BarcodeMetadata) -> removeIncorrectCodewords
    boolean isLeft() -> isLeft
    java.lang.String toString() -> toString
com.google.zxing.pdf417.decoder.PDF417CodewordDecoder -> com.google.zxing.pdf417.decoder.PDF417CodewordDecoder:
    float[][] RATIOS_TABLE -> RATIOS_TABLE
    int getDecodedValue(int[]) -> getDecodedValue
    int[] sampleBitCounts(int[]) -> sampleBitCounts
    int getDecodedCodewordValue(int[]) -> getDecodedCodewordValue
    int getBitValue(int[]) -> getBitValue
    int getClosestDecodedValue(int[]) -> getClosestDecodedValue
com.google.zxing.pdf417.decoder.PDF417ScanningDecoder -> com.google.zxing.pdf417.decoder.PDF417ScanningDecoder:
    int CODEWORD_SKEW_SIZE -> CODEWORD_SKEW_SIZE
    int MAX_ERRORS -> MAX_ERRORS
    int MAX_EC_CODEWORDS -> MAX_EC_CODEWORDS
    com.google.zxing.pdf417.decoder.ec.ErrorCorrection errorCorrection -> errorCorrection
    com.google.zxing.common.DecoderResult decode(com.google.zxing.common.BitMatrix,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,int,int) -> decode
    com.google.zxing.pdf417.decoder.DetectionResult merge(com.google.zxing.pdf417.decoder.DetectionResultRowIndicatorColumn,com.google.zxing.pdf417.decoder.DetectionResultRowIndicatorColumn) -> merge
    com.google.zxing.pdf417.decoder.BoundingBox adjustBoundingBox(com.google.zxing.pdf417.decoder.DetectionResultRowIndicatorColumn) -> adjustBoundingBox
    int getMax(int[]) -> getMax
    com.google.zxing.pdf417.decoder.BarcodeMetadata getBarcodeMetadata(com.google.zxing.pdf417.decoder.DetectionResultRowIndicatorColumn,com.google.zxing.pdf417.decoder.DetectionResultRowIndicatorColumn) -> getBarcodeMetadata
    com.google.zxing.pdf417.decoder.DetectionResultRowIndicatorColumn getRowIndicatorColumn(com.google.zxing.common.BitMatrix,com.google.zxing.pdf417.decoder.BoundingBox,com.google.zxing.ResultPoint,boolean,int,int) -> getRowIndicatorColumn
    void adjustCodewordCount(com.google.zxing.pdf417.decoder.DetectionResult,com.google.zxing.pdf417.decoder.BarcodeValue[][]) -> adjustCodewordCount
    com.google.zxing.common.DecoderResult createDecoderResult(com.google.zxing.pdf417.decoder.DetectionResult) -> createDecoderResult
    com.google.zxing.common.DecoderResult createDecoderResultFromAmbiguousValues(int,int[],int[],int[],int[][]) -> createDecoderResultFromAmbiguousValues
    com.google.zxing.pdf417.decoder.BarcodeValue[][] createBarcodeMatrix(com.google.zxing.pdf417.decoder.DetectionResult) -> createBarcodeMatrix
    boolean isValidBarcodeColumn(com.google.zxing.pdf417.decoder.DetectionResult,int) -> isValidBarcodeColumn
    int getStartColumn(com.google.zxing.pdf417.decoder.DetectionResult,int,int,boolean) -> getStartColumn
    com.google.zxing.pdf417.decoder.Codeword detectCodeword(com.google.zxing.common.BitMatrix,int,int,boolean,int,int,int,int) -> detectCodeword
    int[] getModuleBitCount(com.google.zxing.common.BitMatrix,int,int,boolean,int,int) -> getModuleBitCount
    int getNumberOfECCodeWords(int) -> getNumberOfECCodeWords
    int adjustCodewordStartColumn(com.google.zxing.common.BitMatrix,int,int,boolean,int,int) -> adjustCodewordStartColumn
    boolean checkCodewordSkew(int,int,int) -> checkCodewordSkew
    com.google.zxing.common.DecoderResult decodeCodewords(int[],int,int[]) -> decodeCodewords
    int correctErrors(int[],int[],int) -> correctErrors
    void verifyCodewordCount(int[],int) -> verifyCodewordCount
    int[] getBitCountForCodeword(int) -> getBitCountForCodeword
    int getCodewordBucketNumber(int) -> getCodewordBucketNumber
    int getCodewordBucketNumber(int[]) -> getCodewordBucketNumber
    java.lang.String toString(com.google.zxing.pdf417.decoder.BarcodeValue[][]) -> toString
com.google.zxing.pdf417.decoder.ec.ErrorCorrection -> com.google.zxing.pdf417.decoder.ec.ErrorCorrection:
    com.google.zxing.pdf417.decoder.ec.ModulusGF field -> field
    int decode(int[],int,int[]) -> decode
    com.google.zxing.pdf417.decoder.ec.ModulusPoly[] runEuclideanAlgorithm(com.google.zxing.pdf417.decoder.ec.ModulusPoly,com.google.zxing.pdf417.decoder.ec.ModulusPoly,int) -> runEuclideanAlgorithm
    int[] findErrorLocations(com.google.zxing.pdf417.decoder.ec.ModulusPoly) -> findErrorLocations
    int[] findErrorMagnitudes(com.google.zxing.pdf417.decoder.ec.ModulusPoly,com.google.zxing.pdf417.decoder.ec.ModulusPoly,int[]) -> findErrorMagnitudes
com.google.zxing.pdf417.decoder.ec.ModulusGF -> com.google.zxing.pdf417.decoder.ec.ModulusGF:
    com.google.zxing.pdf417.decoder.ec.ModulusGF PDF417_GF -> PDF417_GF
    int[] expTable -> expTable
    int[] logTable -> logTable
    com.google.zxing.pdf417.decoder.ec.ModulusPoly zero -> zero
    com.google.zxing.pdf417.decoder.ec.ModulusPoly one -> one
    int modulus -> modulus
    com.google.zxing.pdf417.decoder.ec.ModulusPoly getZero() -> getZero
    com.google.zxing.pdf417.decoder.ec.ModulusPoly getOne() -> getOne
    com.google.zxing.pdf417.decoder.ec.ModulusPoly buildMonomial(int,int) -> buildMonomial
    int add(int,int) -> add
    int subtract(int,int) -> subtract
    int exp(int) -> exp
    int log(int) -> log
    int inverse(int) -> inverse
    int multiply(int,int) -> multiply
    int getSize() -> getSize
com.google.zxing.pdf417.decoder.ec.ModulusPoly -> com.google.zxing.pdf417.decoder.ec.ModulusPoly:
    com.google.zxing.pdf417.decoder.ec.ModulusGF field -> field
    int[] coefficients -> coefficients
    int[] getCoefficients() -> getCoefficients
    int getDegree() -> getDegree
    boolean isZero() -> isZero
    int getCoefficient(int) -> getCoefficient
    int evaluateAt(int) -> evaluateAt
    com.google.zxing.pdf417.decoder.ec.ModulusPoly add(com.google.zxing.pdf417.decoder.ec.ModulusPoly) -> add
    com.google.zxing.pdf417.decoder.ec.ModulusPoly subtract(com.google.zxing.pdf417.decoder.ec.ModulusPoly) -> subtract
    com.google.zxing.pdf417.decoder.ec.ModulusPoly multiply(com.google.zxing.pdf417.decoder.ec.ModulusPoly) -> multiply
    com.google.zxing.pdf417.decoder.ec.ModulusPoly negative() -> negative
    com.google.zxing.pdf417.decoder.ec.ModulusPoly multiply(int) -> multiply
    com.google.zxing.pdf417.decoder.ec.ModulusPoly multiplyByMonomial(int,int) -> multiplyByMonomial
    com.google.zxing.pdf417.decoder.ec.ModulusPoly[] divide(com.google.zxing.pdf417.decoder.ec.ModulusPoly) -> divide
    java.lang.String toString() -> toString
com.google.zxing.pdf417.detector.Detector -> com.google.zxing.pdf417.detector.Detector:
    int[] INDEXES_START_PATTERN -> INDEXES_START_PATTERN
    int[] INDEXES_STOP_PATTERN -> INDEXES_STOP_PATTERN
    int INTEGER_MATH_SHIFT -> INTEGER_MATH_SHIFT
    int PATTERN_MATCH_RESULT_SCALE_FACTOR -> PATTERN_MATCH_RESULT_SCALE_FACTOR
    int MAX_AVG_VARIANCE -> MAX_AVG_VARIANCE
    int MAX_INDIVIDUAL_VARIANCE -> MAX_INDIVIDUAL_VARIANCE
    int[] START_PATTERN -> START_PATTERN
    int[] STOP_PATTERN -> STOP_PATTERN
    int MAX_PIXEL_DRIFT -> MAX_PIXEL_DRIFT
    int MAX_PATTERN_DRIFT -> MAX_PATTERN_DRIFT
    int SKIPPED_ROW_COUNT_MAX -> SKIPPED_ROW_COUNT_MAX
    int ROW_STEP -> ROW_STEP
    int BARCODE_MIN_HEIGHT -> BARCODE_MIN_HEIGHT
    com.google.zxing.pdf417.detector.PDF417DetectorResult detect(com.google.zxing.BinaryBitmap,java.util.Map,boolean) -> detect
    java.util.List detect(boolean,com.google.zxing.common.BitMatrix) -> detect
    void rotate180(com.google.zxing.common.BitMatrix) -> rotate180
    com.google.zxing.common.BitArray mirror(com.google.zxing.common.BitArray,com.google.zxing.common.BitArray) -> mirror
    com.google.zxing.ResultPoint[] findVertices(com.google.zxing.common.BitMatrix,int,int) -> findVertices
    void copyToResult(com.google.zxing.ResultPoint[],com.google.zxing.ResultPoint[],int[]) -> copyToResult
    com.google.zxing.ResultPoint[] findRowsWithPattern(com.google.zxing.common.BitMatrix,int,int,int,int,int[]) -> findRowsWithPattern
    int[] findGuardPattern(com.google.zxing.common.BitMatrix,int,int,int,boolean,int[],int[]) -> findGuardPattern
    int patternMatchVariance(int[],int[],int) -> patternMatchVariance
com.google.zxing.pdf417.detector.PDF417DetectorResult -> com.google.zxing.pdf417.detector.PDF417DetectorResult:
    com.google.zxing.common.BitMatrix bits -> bits
    java.util.List points -> points
    com.google.zxing.common.BitMatrix getBits() -> getBits
    java.util.List getPoints() -> getPoints
com.google.zxing.pdf417.encoder.BarcodeMatrix -> com.google.zxing.pdf417.encoder.BarcodeMatrix:
    com.google.zxing.pdf417.encoder.BarcodeRow[] matrix -> matrix
    int currentRow -> currentRow
    int height -> height
    int width -> width
    void set(int,int,byte) -> set
    void startRow() -> startRow
    com.google.zxing.pdf417.encoder.BarcodeRow getCurrentRow() -> getCurrentRow
    byte[][] getMatrix() -> getMatrix
    byte[][] getScaledMatrix(int,int) -> getScaledMatrix
com.google.zxing.pdf417.encoder.BarcodeRow -> com.google.zxing.pdf417.encoder.BarcodeRow:
    byte[] row -> row
    int currentLocation -> currentLocation
    void set(int,byte) -> set
    void set(int,boolean) -> set
    void addBar(boolean,int) -> addBar
    byte[] getScaledRow(int) -> getScaledRow
com.google.zxing.pdf417.encoder.Compaction -> com.google.zxing.pdf417.encoder.Compaction:
    com.google.zxing.pdf417.encoder.Compaction AUTO -> AUTO
    com.google.zxing.pdf417.encoder.Compaction TEXT -> TEXT
    com.google.zxing.pdf417.encoder.Compaction BYTE -> BYTE
    com.google.zxing.pdf417.encoder.Compaction NUMERIC -> NUMERIC
    com.google.zxing.pdf417.encoder.Compaction[] $VALUES -> $VALUES
    com.google.zxing.pdf417.encoder.Compaction[] values() -> values
    com.google.zxing.pdf417.encoder.Compaction valueOf(java.lang.String) -> valueOf
com.google.zxing.pdf417.encoder.Dimensions -> com.google.zxing.pdf417.encoder.Dimensions:
    int minCols -> minCols
    int maxCols -> maxCols
    int minRows -> minRows
    int maxRows -> maxRows
    int getMinCols() -> getMinCols
    int getMaxCols() -> getMaxCols
    int getMinRows() -> getMinRows
    int getMaxRows() -> getMaxRows
com.google.zxing.pdf417.encoder.PDF417 -> com.google.zxing.pdf417.encoder.PDF417:
    int START_PATTERN -> START_PATTERN
    int STOP_PATTERN -> STOP_PATTERN
    int[][] CODEWORD_TABLE -> CODEWORD_TABLE
    float PREFERRED_RATIO -> PREFERRED_RATIO
    float DEFAULT_MODULE_WIDTH -> DEFAULT_MODULE_WIDTH
    float HEIGHT -> HEIGHT
    com.google.zxing.pdf417.encoder.BarcodeMatrix barcodeMatrix -> barcodeMatrix
    boolean compact -> compact
    com.google.zxing.pdf417.encoder.Compaction compaction -> compaction
    int minCols -> minCols
    int maxCols -> maxCols
    int maxRows -> maxRows
    int minRows -> minRows
    com.google.zxing.pdf417.encoder.BarcodeMatrix getBarcodeMatrix() -> getBarcodeMatrix
    int calculateNumberOfRows(int,int,int) -> calculateNumberOfRows
    int getNumberOfPadCodewords(int,int,int,int) -> getNumberOfPadCodewords
    void encodeChar(int,int,com.google.zxing.pdf417.encoder.BarcodeRow) -> encodeChar
    void encodeLowLevel(java.lang.CharSequence,int,int,int,com.google.zxing.pdf417.encoder.BarcodeMatrix) -> encodeLowLevel
    void generateBarcodeLogic(java.lang.String,int) -> generateBarcodeLogic
    int[] determineDimensions(int,int) -> determineDimensions
    void setDimensions(int,int,int,int) -> setDimensions
    void setCompaction(com.google.zxing.pdf417.encoder.Compaction) -> setCompaction
    void setCompact(boolean) -> setCompact
com.google.zxing.pdf417.encoder.PDF417ErrorCorrection -> com.google.zxing.pdf417.encoder.PDF417ErrorCorrection:
    int[][] EC_COEFFICIENTS -> EC_COEFFICIENTS
    int getErrorCorrectionCodewordCount(int) -> getErrorCorrectionCodewordCount
    int getRecommendedMinimumErrorCorrectionLevel(int) -> getRecommendedMinimumErrorCorrectionLevel
    java.lang.String generateErrorCorrection(java.lang.CharSequence,int) -> generateErrorCorrection
com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder -> com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder:
    int TEXT_COMPACTION -> TEXT_COMPACTION
    int BYTE_COMPACTION -> BYTE_COMPACTION
    int NUMERIC_COMPACTION -> NUMERIC_COMPACTION
    int SUBMODE_ALPHA -> SUBMODE_ALPHA
    int SUBMODE_LOWER -> SUBMODE_LOWER
    int SUBMODE_MIXED -> SUBMODE_MIXED
    int SUBMODE_PUNCTUATION -> SUBMODE_PUNCTUATION
    int LATCH_TO_TEXT -> LATCH_TO_TEXT
    int LATCH_TO_BYTE_PADDED -> LATCH_TO_BYTE_PADDED
    int LATCH_TO_NUMERIC -> LATCH_TO_NUMERIC
    int SHIFT_TO_BYTE -> SHIFT_TO_BYTE
    int LATCH_TO_BYTE -> LATCH_TO_BYTE
    byte[] TEXT_MIXED_RAW -> TEXT_MIXED_RAW
    byte[] TEXT_PUNCTUATION_RAW -> TEXT_PUNCTUATION_RAW
    byte[] MIXED -> MIXED
    byte[] PUNCTUATION -> PUNCTUATION
    byte[] getBytesForMessage(java.lang.String) -> getBytesForMessage
    java.lang.String encodeHighLevel(java.lang.String,com.google.zxing.pdf417.encoder.Compaction) -> encodeHighLevel
    int encodeText(java.lang.CharSequence,int,int,java.lang.StringBuilder,int) -> encodeText
    void encodeBinary(byte[],int,int,int,java.lang.StringBuilder) -> encodeBinary
    void encodeNumeric(java.lang.String,int,int,java.lang.StringBuilder) -> encodeNumeric
    boolean isDigit(char) -> isDigit
    boolean isAlphaUpper(char) -> isAlphaUpper
    boolean isAlphaLower(char) -> isAlphaLower
    boolean isMixed(char) -> isMixed
    boolean isPunctuation(char) -> isPunctuation
    boolean isText(char) -> isText
    int determineConsecutiveDigitCount(java.lang.CharSequence,int) -> determineConsecutiveDigitCount
    int determineConsecutiveTextCount(java.lang.CharSequence,int) -> determineConsecutiveTextCount
    int determineConsecutiveBinaryCount(java.lang.CharSequence,byte[],int) -> determineConsecutiveBinaryCount
com.google.zxing.qrcode.QRCodeReader -> com.google.zxing.qrcode.QRCodeReader:
    com.google.zxing.ResultPoint[] NO_POINTS -> NO_POINTS
    com.google.zxing.qrcode.decoder.Decoder decoder -> decoder
    com.google.zxing.qrcode.decoder.Decoder getDecoder() -> getDecoder
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap) -> decode
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> decode
    void reset() -> reset
    com.google.zxing.common.BitMatrix extractPureBits(com.google.zxing.common.BitMatrix) -> extractPureBits
    float moduleSize(int[],com.google.zxing.common.BitMatrix) -> moduleSize
com.google.zxing.qrcode.QRCodeWriter -> com.google.zxing.qrcode.QRCodeWriter:
    int QUIET_ZONE_SIZE -> QUIET_ZONE_SIZE
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int) -> encode
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
    com.google.zxing.common.BitMatrix renderResult(com.google.zxing.qrcode.encoder.QRCode,int,int,int) -> renderResult
com.google.zxing.qrcode.decoder.BitMatrixParser -> com.google.zxing.qrcode.decoder.BitMatrixParser:
    com.google.zxing.common.BitMatrix bitMatrix -> bitMatrix
    com.google.zxing.qrcode.decoder.Version parsedVersion -> parsedVersion
    com.google.zxing.qrcode.decoder.FormatInformation parsedFormatInfo -> parsedFormatInfo
    boolean mirror -> mirror
    com.google.zxing.qrcode.decoder.FormatInformation readFormatInformation() -> readFormatInformation
    com.google.zxing.qrcode.decoder.Version readVersion() -> readVersion
    int copyBit(int,int,int) -> copyBit
    byte[] readCodewords() -> readCodewords
    void remask() -> remask
    void setMirror(boolean) -> setMirror
    void mirror() -> mirror
com.google.zxing.qrcode.decoder.DataBlock -> com.google.zxing.qrcode.decoder.DataBlock:
    int numDataCodewords -> numDataCodewords
    byte[] codewords -> codewords
    com.google.zxing.qrcode.decoder.DataBlock[] getDataBlocks(byte[],com.google.zxing.qrcode.decoder.Version,com.google.zxing.qrcode.decoder.ErrorCorrectionLevel) -> getDataBlocks
    int getNumDataCodewords() -> getNumDataCodewords
    byte[] getCodewords() -> getCodewords
com.google.zxing.qrcode.decoder.DataMask -> com.google.zxing.qrcode.decoder.DataMask:
    com.google.zxing.qrcode.decoder.DataMask[] DATA_MASKS -> DATA_MASKS
    void unmaskBitMatrix(com.google.zxing.common.BitMatrix,int) -> unmaskBitMatrix
    boolean isMasked(int,int) -> isMasked
    com.google.zxing.qrcode.decoder.DataMask forReference(int) -> forReference
com.google.zxing.qrcode.decoder.DataMask$1 -> com.google.zxing.qrcode.decoder.DataMask$1:
com.google.zxing.qrcode.decoder.DataMask$DataMask000 -> com.google.zxing.qrcode.decoder.DataMask$DataMask000:
    boolean isMasked(int,int) -> isMasked
com.google.zxing.qrcode.decoder.DataMask$DataMask001 -> com.google.zxing.qrcode.decoder.DataMask$DataMask001:
    boolean isMasked(int,int) -> isMasked
com.google.zxing.qrcode.decoder.DataMask$DataMask010 -> com.google.zxing.qrcode.decoder.DataMask$DataMask010:
    boolean isMasked(int,int) -> isMasked
com.google.zxing.qrcode.decoder.DataMask$DataMask011 -> com.google.zxing.qrcode.decoder.DataMask$DataMask011:
    boolean isMasked(int,int) -> isMasked
com.google.zxing.qrcode.decoder.DataMask$DataMask100 -> com.google.zxing.qrcode.decoder.DataMask$DataMask100:
    boolean isMasked(int,int) -> isMasked
com.google.zxing.qrcode.decoder.DataMask$DataMask101 -> com.google.zxing.qrcode.decoder.DataMask$DataMask101:
    boolean isMasked(int,int) -> isMasked
com.google.zxing.qrcode.decoder.DataMask$DataMask110 -> com.google.zxing.qrcode.decoder.DataMask$DataMask110:
    boolean isMasked(int,int) -> isMasked
com.google.zxing.qrcode.decoder.DataMask$DataMask111 -> com.google.zxing.qrcode.decoder.DataMask$DataMask111:
    boolean isMasked(int,int) -> isMasked
com.google.zxing.qrcode.decoder.DecodedBitStreamParser -> com.google.zxing.qrcode.decoder.DecodedBitStreamParser:
    char[] ALPHANUMERIC_CHARS -> ALPHANUMERIC_CHARS
    int GB2312_SUBSET -> GB2312_SUBSET
    com.google.zxing.common.DecoderResult decode(byte[],com.google.zxing.qrcode.decoder.Version,com.google.zxing.qrcode.decoder.ErrorCorrectionLevel,java.util.Map) -> decode
    void decodeHanziSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder,int) -> decodeHanziSegment
    void decodeKanjiSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder,int) -> decodeKanjiSegment
    void decodeByteSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder,int,com.google.zxing.common.CharacterSetECI,java.util.Collection,java.util.Map) -> decodeByteSegment
    char toAlphaNumericChar(int) -> toAlphaNumericChar
    void decodeAlphanumericSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder,int,boolean) -> decodeAlphanumericSegment
    void decodeNumericSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder,int) -> decodeNumericSegment
    int parseECIValue(com.google.zxing.common.BitSource) -> parseECIValue
com.google.zxing.qrcode.decoder.Decoder -> com.google.zxing.qrcode.decoder.Decoder:
    com.google.zxing.common.reedsolomon.ReedSolomonDecoder rsDecoder -> rsDecoder
    com.google.zxing.common.DecoderResult decode(boolean[][]) -> decode
    com.google.zxing.common.DecoderResult decode(boolean[][],java.util.Map) -> decode
    com.google.zxing.common.DecoderResult decode(com.google.zxing.common.BitMatrix) -> decode
    com.google.zxing.common.DecoderResult decode(com.google.zxing.common.BitMatrix,java.util.Map) -> decode
    com.google.zxing.common.DecoderResult decode(com.google.zxing.qrcode.decoder.BitMatrixParser,java.util.Map) -> decode
    void correctErrors(byte[],int) -> correctErrors
com.google.zxing.qrcode.decoder.ErrorCorrectionLevel -> com.google.zxing.qrcode.decoder.ErrorCorrectionLevel:
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel L -> L
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel M -> M
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel Q -> Q
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel H -> H
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel[] FOR_BITS -> FOR_BITS
    int bits -> bits
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel[] $VALUES -> $VALUES
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel[] values() -> values
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel valueOf(java.lang.String) -> valueOf
    int getBits() -> getBits
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel forBits(int) -> forBits
com.google.zxing.qrcode.decoder.FormatInformation -> com.google.zxing.qrcode.decoder.FormatInformation:
    int FORMAT_INFO_MASK_QR -> FORMAT_INFO_MASK_QR
    int[][] FORMAT_INFO_DECODE_LOOKUP -> FORMAT_INFO_DECODE_LOOKUP
    int[] BITS_SET_IN_HALF_BYTE -> BITS_SET_IN_HALF_BYTE
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel errorCorrectionLevel -> errorCorrectionLevel
    byte dataMask -> dataMask
    int numBitsDiffering(int,int) -> numBitsDiffering
    com.google.zxing.qrcode.decoder.FormatInformation decodeFormatInformation(int,int) -> decodeFormatInformation
    com.google.zxing.qrcode.decoder.FormatInformation doDecodeFormatInformation(int,int) -> doDecodeFormatInformation
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel getErrorCorrectionLevel() -> getErrorCorrectionLevel
    byte getDataMask() -> getDataMask
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.google.zxing.qrcode.decoder.Mode -> com.google.zxing.qrcode.decoder.Mode:
    com.google.zxing.qrcode.decoder.Mode TERMINATOR -> TERMINATOR
    com.google.zxing.qrcode.decoder.Mode NUMERIC -> NUMERIC
    com.google.zxing.qrcode.decoder.Mode ALPHANUMERIC -> ALPHANUMERIC
    com.google.zxing.qrcode.decoder.Mode STRUCTURED_APPEND -> STRUCTURED_APPEND
    com.google.zxing.qrcode.decoder.Mode BYTE -> BYTE
    com.google.zxing.qrcode.decoder.Mode ECI -> ECI
    com.google.zxing.qrcode.decoder.Mode KANJI -> KANJI
    com.google.zxing.qrcode.decoder.Mode FNC1_FIRST_POSITION -> FNC1_FIRST_POSITION
    com.google.zxing.qrcode.decoder.Mode FNC1_SECOND_POSITION -> FNC1_SECOND_POSITION
    com.google.zxing.qrcode.decoder.Mode HANZI -> HANZI
    int[] characterCountBitsForVersions -> characterCountBitsForVersions
    int bits -> bits
    com.google.zxing.qrcode.decoder.Mode[] $VALUES -> $VALUES
    com.google.zxing.qrcode.decoder.Mode[] values() -> values
    com.google.zxing.qrcode.decoder.Mode valueOf(java.lang.String) -> valueOf
    com.google.zxing.qrcode.decoder.Mode forBits(int) -> forBits
    int getCharacterCountBits(com.google.zxing.qrcode.decoder.Version) -> getCharacterCountBits
    int getBits() -> getBits
com.google.zxing.qrcode.decoder.QRCodeDecoderMetaData -> com.google.zxing.qrcode.decoder.QRCodeDecoderMetaData:
    boolean mirrored -> mirrored
    boolean isMirrored() -> isMirrored
    void applyMirroredCorrection(com.google.zxing.ResultPoint[]) -> applyMirroredCorrection
com.google.zxing.qrcode.decoder.Version -> com.google.zxing.qrcode.decoder.Version:
    int[] VERSION_DECODE_INFO -> VERSION_DECODE_INFO
    com.google.zxing.qrcode.decoder.Version[] VERSIONS -> VERSIONS
    int versionNumber -> versionNumber
    int[] alignmentPatternCenters -> alignmentPatternCenters
    com.google.zxing.qrcode.decoder.Version$ECBlocks[] ecBlocks -> ecBlocks
    int totalCodewords -> totalCodewords
    int getVersionNumber() -> getVersionNumber
    int[] getAlignmentPatternCenters() -> getAlignmentPatternCenters
    int getTotalCodewords() -> getTotalCodewords
    int getDimensionForVersion() -> getDimensionForVersion
    com.google.zxing.qrcode.decoder.Version$ECBlocks getECBlocksForLevel(com.google.zxing.qrcode.decoder.ErrorCorrectionLevel) -> getECBlocksForLevel
    com.google.zxing.qrcode.decoder.Version getProvisionalVersionForDimension(int) -> getProvisionalVersionForDimension
    com.google.zxing.qrcode.decoder.Version getVersionForNumber(int) -> getVersionForNumber
    com.google.zxing.qrcode.decoder.Version decodeVersionInformation(int) -> decodeVersionInformation
    com.google.zxing.common.BitMatrix buildFunctionPattern() -> buildFunctionPattern
    java.lang.String toString() -> toString
    com.google.zxing.qrcode.decoder.Version[] buildVersions() -> buildVersions
com.google.zxing.qrcode.decoder.Version$ECB -> com.google.zxing.qrcode.decoder.Version$ECB:
    int count -> count
    int dataCodewords -> dataCodewords
    int getCount() -> getCount
    int getDataCodewords() -> getDataCodewords
com.google.zxing.qrcode.decoder.Version$ECBlocks -> com.google.zxing.qrcode.decoder.Version$ECBlocks:
    int ecCodewordsPerBlock -> ecCodewordsPerBlock
    com.google.zxing.qrcode.decoder.Version$ECB[] ecBlocks -> ecBlocks
    int getECCodewordsPerBlock() -> getECCodewordsPerBlock
    int getNumBlocks() -> getNumBlocks
    int getTotalECCodewords() -> getTotalECCodewords
    com.google.zxing.qrcode.decoder.Version$ECB[] getECBlocks() -> getECBlocks
com.google.zxing.qrcode.detector.AlignmentPattern -> com.google.zxing.qrcode.detector.AlignmentPattern:
    float estimatedModuleSize -> estimatedModuleSize
    boolean aboutEquals(float,float,float) -> aboutEquals
    com.google.zxing.qrcode.detector.AlignmentPattern combineEstimate(float,float,float) -> combineEstimate
com.google.zxing.qrcode.detector.AlignmentPatternFinder -> com.google.zxing.qrcode.detector.AlignmentPatternFinder:
    com.google.zxing.common.BitMatrix image -> image
    java.util.List possibleCenters -> possibleCenters
    int startX -> startX
    int startY -> startY
    int width -> width
    int height -> height
    float moduleSize -> moduleSize
    int[] crossCheckStateCount -> crossCheckStateCount
    com.google.zxing.ResultPointCallback resultPointCallback -> resultPointCallback
    com.google.zxing.qrcode.detector.AlignmentPattern find() -> find
    float centerFromEnd(int[],int) -> centerFromEnd
    boolean foundPatternCross(int[]) -> foundPatternCross
    float crossCheckVertical(int,int,int,int) -> crossCheckVertical
    com.google.zxing.qrcode.detector.AlignmentPattern handlePossibleCenter(int[],int,int) -> handlePossibleCenter
com.google.zxing.qrcode.detector.Detector -> com.google.zxing.qrcode.detector.Detector:
    com.google.zxing.common.BitMatrix image -> image
    com.google.zxing.ResultPointCallback resultPointCallback -> resultPointCallback
    com.google.zxing.common.BitMatrix getImage() -> getImage
    com.google.zxing.ResultPointCallback getResultPointCallback() -> getResultPointCallback
    com.google.zxing.common.DetectorResult detect() -> detect
    com.google.zxing.common.DetectorResult detect(java.util.Map) -> detect
    com.google.zxing.common.DetectorResult processFinderPatternInfo(com.google.zxing.qrcode.detector.FinderPatternInfo) -> processFinderPatternInfo
    com.google.zxing.common.PerspectiveTransform createTransform(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,int) -> createTransform
    com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,com.google.zxing.common.PerspectiveTransform,int) -> sampleGrid
    int computeDimension(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,float) -> computeDimension
    float calculateModuleSize(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> calculateModuleSize
    float calculateModuleSizeOneWay(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> calculateModuleSizeOneWay
    float sizeOfBlackWhiteBlackRunBothWays(int,int,int,int) -> sizeOfBlackWhiteBlackRunBothWays
    float sizeOfBlackWhiteBlackRun(int,int,int,int) -> sizeOfBlackWhiteBlackRun
    com.google.zxing.qrcode.detector.AlignmentPattern findAlignmentInRegion(float,int,int,float) -> findAlignmentInRegion
com.google.zxing.qrcode.detector.FinderPattern -> com.google.zxing.qrcode.detector.FinderPattern:
    float estimatedModuleSize -> estimatedModuleSize
    int count -> count
    float getEstimatedModuleSize() -> getEstimatedModuleSize
    int getCount() -> getCount
    boolean aboutEquals(float,float,float) -> aboutEquals
    com.google.zxing.qrcode.detector.FinderPattern combineEstimate(float,float,float) -> combineEstimate
com.google.zxing.qrcode.detector.FinderPatternFinder -> com.google.zxing.qrcode.detector.FinderPatternFinder:
    int CENTER_QUORUM -> CENTER_QUORUM
    int MIN_SKIP -> MIN_SKIP
    int MAX_MODULES -> MAX_MODULES
    int INTEGER_MATH_SHIFT -> INTEGER_MATH_SHIFT
    com.google.zxing.common.BitMatrix image -> image
    java.util.List possibleCenters -> possibleCenters
    boolean hasSkipped -> hasSkipped
    int[] crossCheckStateCount -> crossCheckStateCount
    com.google.zxing.ResultPointCallback resultPointCallback -> resultPointCallback
    com.google.zxing.common.BitMatrix getImage() -> getImage
    java.util.List getPossibleCenters() -> getPossibleCenters
    com.google.zxing.qrcode.detector.FinderPatternInfo find(java.util.Map) -> find
    float centerFromEnd(int[],int) -> centerFromEnd
    boolean foundPatternCross(int[]) -> foundPatternCross
    int[] getCrossCheckStateCount() -> getCrossCheckStateCount
    float crossCheckVertical(int,int,int,int) -> crossCheckVertical
    float crossCheckHorizontal(int,int,int,int) -> crossCheckHorizontal
    boolean handlePossibleCenter(int[],int,int) -> handlePossibleCenter
    int findRowSkip() -> findRowSkip
    boolean haveMultiplyConfirmedCenters() -> haveMultiplyConfirmedCenters
    com.google.zxing.qrcode.detector.FinderPattern[] selectBestPatterns() -> selectBestPatterns
com.google.zxing.qrcode.detector.FinderPatternFinder$1 -> com.google.zxing.qrcode.detector.FinderPatternFinder$1:
com.google.zxing.qrcode.detector.FinderPatternFinder$CenterComparator -> com.google.zxing.qrcode.detector.FinderPatternFinder$CenterComparator:
    float average -> average
    int compare(com.google.zxing.qrcode.detector.FinderPattern,com.google.zxing.qrcode.detector.FinderPattern) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.zxing.qrcode.detector.FinderPatternFinder$FurthestFromAverageComparator -> com.google.zxing.qrcode.detector.FinderPatternFinder$FurthestFromAverageComparator:
    float average -> average
    int compare(com.google.zxing.qrcode.detector.FinderPattern,com.google.zxing.qrcode.detector.FinderPattern) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.zxing.qrcode.detector.FinderPatternInfo -> com.google.zxing.qrcode.detector.FinderPatternInfo:
    com.google.zxing.qrcode.detector.FinderPattern bottomLeft -> bottomLeft
    com.google.zxing.qrcode.detector.FinderPattern topLeft -> topLeft
    com.google.zxing.qrcode.detector.FinderPattern topRight -> topRight
    com.google.zxing.qrcode.detector.FinderPattern getBottomLeft() -> getBottomLeft
    com.google.zxing.qrcode.detector.FinderPattern getTopLeft() -> getTopLeft
    com.google.zxing.qrcode.detector.FinderPattern getTopRight() -> getTopRight
com.google.zxing.qrcode.encoder.BlockPair -> com.google.zxing.qrcode.encoder.BlockPair:
    byte[] dataBytes -> dataBytes
    byte[] errorCorrectionBytes -> errorCorrectionBytes
    byte[] getDataBytes() -> getDataBytes
    byte[] getErrorCorrectionBytes() -> getErrorCorrectionBytes
com.google.zxing.qrcode.encoder.ByteMatrix -> com.google.zxing.qrcode.encoder.ByteMatrix:
    byte[][] bytes -> bytes
    int width -> width
    int height -> height
    int getHeight() -> getHeight
    int getWidth() -> getWidth
    byte get(int,int) -> get
    byte[][] getArray() -> getArray
    void set(int,int,byte) -> set
    void set(int,int,int) -> set
    void set(int,int,boolean) -> set
    void clear(byte) -> clear
    java.lang.String toString() -> toString
com.google.zxing.qrcode.encoder.Encoder -> com.google.zxing.qrcode.encoder.Encoder:
    int[] ALPHANUMERIC_TABLE -> ALPHANUMERIC_TABLE
    java.lang.String DEFAULT_BYTE_MODE_ENCODING -> DEFAULT_BYTE_MODE_ENCODING
    int calculateMaskPenalty(com.google.zxing.qrcode.encoder.ByteMatrix) -> calculateMaskPenalty
    com.google.zxing.qrcode.encoder.QRCode encode(java.lang.String,com.google.zxing.qrcode.decoder.ErrorCorrectionLevel) -> encode
    com.google.zxing.qrcode.encoder.QRCode encode(java.lang.String,com.google.zxing.qrcode.decoder.ErrorCorrectionLevel,java.util.Map) -> encode
    int getAlphanumericCode(int) -> getAlphanumericCode
    com.google.zxing.qrcode.decoder.Mode chooseMode(java.lang.String) -> chooseMode
    com.google.zxing.qrcode.decoder.Mode chooseMode(java.lang.String,java.lang.String) -> chooseMode
    boolean isOnlyDoubleByteKanji(java.lang.String) -> isOnlyDoubleByteKanji
    int chooseMaskPattern(com.google.zxing.common.BitArray,com.google.zxing.qrcode.decoder.ErrorCorrectionLevel,com.google.zxing.qrcode.decoder.Version,com.google.zxing.qrcode.encoder.ByteMatrix) -> chooseMaskPattern
    com.google.zxing.qrcode.decoder.Version chooseVersion(int,com.google.zxing.qrcode.decoder.ErrorCorrectionLevel) -> chooseVersion
    void terminateBits(int,com.google.zxing.common.BitArray) -> terminateBits
    void getNumDataBytesAndNumECBytesForBlockID(int,int,int,int,int[],int[]) -> getNumDataBytesAndNumECBytesForBlockID
    com.google.zxing.common.BitArray interleaveWithECBytes(com.google.zxing.common.BitArray,int,int,int) -> interleaveWithECBytes
    byte[] generateECBytes(byte[],int) -> generateECBytes
    void appendModeInfo(com.google.zxing.qrcode.decoder.Mode,com.google.zxing.common.BitArray) -> appendModeInfo
    void appendLengthInfo(int,com.google.zxing.qrcode.decoder.Version,com.google.zxing.qrcode.decoder.Mode,com.google.zxing.common.BitArray) -> appendLengthInfo
    void appendBytes(java.lang.String,com.google.zxing.qrcode.decoder.Mode,com.google.zxing.common.BitArray,java.lang.String) -> appendBytes
    void appendNumericBytes(java.lang.CharSequence,com.google.zxing.common.BitArray) -> appendNumericBytes
    void appendAlphanumericBytes(java.lang.CharSequence,com.google.zxing.common.BitArray) -> appendAlphanumericBytes
    void append8BitBytes(java.lang.String,com.google.zxing.common.BitArray,java.lang.String) -> append8BitBytes
    void appendKanjiBytes(java.lang.String,com.google.zxing.common.BitArray) -> appendKanjiBytes
    void appendECI(com.google.zxing.common.CharacterSetECI,com.google.zxing.common.BitArray) -> appendECI
com.google.zxing.qrcode.encoder.Encoder$1 -> com.google.zxing.qrcode.encoder.Encoder$1:
    int[] $SwitchMap$com$google$zxing$qrcode$decoder$Mode -> $SwitchMap$com$google$zxing$qrcode$decoder$Mode
com.google.zxing.qrcode.encoder.MaskUtil -> com.google.zxing.qrcode.encoder.MaskUtil:
    int N1 -> N1
    int N2 -> N2
    int N3 -> N3
    int N4 -> N4
    int applyMaskPenaltyRule1(com.google.zxing.qrcode.encoder.ByteMatrix) -> applyMaskPenaltyRule1
    int applyMaskPenaltyRule2(com.google.zxing.qrcode.encoder.ByteMatrix) -> applyMaskPenaltyRule2
    int applyMaskPenaltyRule3(com.google.zxing.qrcode.encoder.ByteMatrix) -> applyMaskPenaltyRule3
    boolean isWhiteHorizontal(byte[],int,int) -> isWhiteHorizontal
    boolean isWhiteVertical(byte[][],int,int,int) -> isWhiteVertical
    int applyMaskPenaltyRule4(com.google.zxing.qrcode.encoder.ByteMatrix) -> applyMaskPenaltyRule4
    boolean getDataMaskBit(int,int,int) -> getDataMaskBit
    int applyMaskPenaltyRule1Internal(com.google.zxing.qrcode.encoder.ByteMatrix,boolean) -> applyMaskPenaltyRule1Internal
com.google.zxing.qrcode.encoder.MatrixUtil -> com.google.zxing.qrcode.encoder.MatrixUtil:
    int[][] POSITION_DETECTION_PATTERN -> POSITION_DETECTION_PATTERN
    int[][] POSITION_ADJUSTMENT_PATTERN -> POSITION_ADJUSTMENT_PATTERN
    int[][] POSITION_ADJUSTMENT_PATTERN_COORDINATE_TABLE -> POSITION_ADJUSTMENT_PATTERN_COORDINATE_TABLE
    int[][] TYPE_INFO_COORDINATES -> TYPE_INFO_COORDINATES
    int VERSION_INFO_POLY -> VERSION_INFO_POLY
    int TYPE_INFO_POLY -> TYPE_INFO_POLY
    int TYPE_INFO_MASK_PATTERN -> TYPE_INFO_MASK_PATTERN
    void clearMatrix(com.google.zxing.qrcode.encoder.ByteMatrix) -> clearMatrix
    void buildMatrix(com.google.zxing.common.BitArray,com.google.zxing.qrcode.decoder.ErrorCorrectionLevel,com.google.zxing.qrcode.decoder.Version,int,com.google.zxing.qrcode.encoder.ByteMatrix) -> buildMatrix
    void embedBasicPatterns(com.google.zxing.qrcode.decoder.Version,com.google.zxing.qrcode.encoder.ByteMatrix) -> embedBasicPatterns
    void embedTypeInfo(com.google.zxing.qrcode.decoder.ErrorCorrectionLevel,int,com.google.zxing.qrcode.encoder.ByteMatrix) -> embedTypeInfo
    void maybeEmbedVersionInfo(com.google.zxing.qrcode.decoder.Version,com.google.zxing.qrcode.encoder.ByteMatrix) -> maybeEmbedVersionInfo
    void embedDataBits(com.google.zxing.common.BitArray,int,com.google.zxing.qrcode.encoder.ByteMatrix) -> embedDataBits
    int findMSBSet(int) -> findMSBSet
    int calculateBCHCode(int,int) -> calculateBCHCode
    void makeTypeInfoBits(com.google.zxing.qrcode.decoder.ErrorCorrectionLevel,int,com.google.zxing.common.BitArray) -> makeTypeInfoBits
    void makeVersionInfoBits(com.google.zxing.qrcode.decoder.Version,com.google.zxing.common.BitArray) -> makeVersionInfoBits
    boolean isEmpty(int) -> isEmpty
    void embedTimingPatterns(com.google.zxing.qrcode.encoder.ByteMatrix) -> embedTimingPatterns
    void embedDarkDotAtLeftBottomCorner(com.google.zxing.qrcode.encoder.ByteMatrix) -> embedDarkDotAtLeftBottomCorner
    void embedHorizontalSeparationPattern(int,int,com.google.zxing.qrcode.encoder.ByteMatrix) -> embedHorizontalSeparationPattern
    void embedVerticalSeparationPattern(int,int,com.google.zxing.qrcode.encoder.ByteMatrix) -> embedVerticalSeparationPattern
    void embedPositionAdjustmentPattern(int,int,com.google.zxing.qrcode.encoder.ByteMatrix) -> embedPositionAdjustmentPattern
    void embedPositionDetectionPattern(int,int,com.google.zxing.qrcode.encoder.ByteMatrix) -> embedPositionDetectionPattern
    void embedPositionDetectionPatternsAndSeparators(com.google.zxing.qrcode.encoder.ByteMatrix) -> embedPositionDetectionPatternsAndSeparators
    void maybeEmbedPositionAdjustmentPatterns(com.google.zxing.qrcode.decoder.Version,com.google.zxing.qrcode.encoder.ByteMatrix) -> maybeEmbedPositionAdjustmentPatterns
com.google.zxing.qrcode.encoder.QRCode -> com.google.zxing.qrcode.encoder.QRCode:
    int NUM_MASK_PATTERNS -> NUM_MASK_PATTERNS
    com.google.zxing.qrcode.decoder.Mode mode -> mode
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel ecLevel -> ecLevel
    com.google.zxing.qrcode.decoder.Version version -> version
    int maskPattern -> maskPattern
    com.google.zxing.qrcode.encoder.ByteMatrix matrix -> matrix
    com.google.zxing.qrcode.decoder.Mode getMode() -> getMode
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel getECLevel() -> getECLevel
    com.google.zxing.qrcode.decoder.Version getVersion() -> getVersion
    int getMaskPattern() -> getMaskPattern
    com.google.zxing.qrcode.encoder.ByteMatrix getMatrix() -> getMatrix
    java.lang.String toString() -> toString
    void setMode(com.google.zxing.qrcode.decoder.Mode) -> setMode
    void setECLevel(com.google.zxing.qrcode.decoder.ErrorCorrectionLevel) -> setECLevel
    void setVersion(com.google.zxing.qrcode.decoder.Version) -> setVersion
    void setMaskPattern(int) -> setMaskPattern
    void setMatrix(com.google.zxing.qrcode.encoder.ByteMatrix) -> setMatrix
    boolean isValidMaskPattern(int) -> isValidMaskPattern
com.j256.ormlite.android.AndroidCompiledStatement -> com.j256.ormlite.android.AndroidCompiledStatement:
    com.j256.ormlite.logger.Logger logger -> logger
    java.lang.String[] NO_STRING_ARGS -> NO_STRING_ARGS
    com.j256.ormlite.android.compat.ApiCompatibility apiCompatibility -> apiCompatibility
    java.lang.String sql -> sql
    android.database.sqlite.SQLiteDatabase db -> db
    com.j256.ormlite.stmt.StatementBuilder$StatementType type -> type
    boolean cancelQueriesEnabled -> cancelQueriesEnabled
    android.database.Cursor cursor -> cursor
    java.util.List args -> args
    java.lang.Integer max -> max
    com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook cancellationHook -> cancellationHook
    int[] $SWITCH_TABLE$com$j256$ormlite$field$SqlType -> $SWITCH_TABLE$com$j256$ormlite$field$SqlType
    int getColumnCount() -> getColumnCount
    java.lang.String getColumnName(int) -> getColumnName
    com.j256.ormlite.support.DatabaseResults runQuery(com.j256.ormlite.dao.ObjectCache) -> runQuery
    int runUpdate() -> runUpdate
    int runExecute() -> runExecute
    void close() -> close
    void closeQuietly() -> closeQuietly
    void cancel() -> cancel
    void setObject(int,java.lang.Object,com.j256.ormlite.field.SqlType) -> setObject
    void setMaxRows(int) -> setMaxRows
    void setQueryTimeout(long) -> setQueryTimeout
    android.database.Cursor getCursor() -> getCursor
    java.lang.String toString() -> toString
    int execSql(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.Object[]) -> execSql
    void isInPrep() -> isInPrep
    java.lang.Object[] getArgArray() -> getArgArray
    java.lang.String[] getStringArray() -> getStringArray
    int[] $SWITCH_TABLE$com$j256$ormlite$field$SqlType() -> $SWITCH_TABLE$com$j256$ormlite$field$SqlType
com.j256.ormlite.android.AndroidConnectionSource -> com.j256.ormlite.android.AndroidConnectionSource:
    com.j256.ormlite.logger.Logger logger -> logger
    android.database.sqlite.SQLiteOpenHelper helper -> helper
    android.database.sqlite.SQLiteDatabase sqliteDatabase -> sqliteDatabase
    com.j256.ormlite.support.DatabaseConnection connection -> connection
    boolean isOpen -> isOpen
    com.j256.ormlite.db.DatabaseType databaseType -> databaseType
    com.j256.ormlite.support.DatabaseConnectionProxyFactory connectionProxyFactory -> connectionProxyFactory
    boolean cancelQueriesEnabled -> cancelQueriesEnabled
    com.j256.ormlite.support.DatabaseConnection getReadOnlyConnection() -> getReadOnlyConnection
    com.j256.ormlite.support.DatabaseConnection getReadWriteConnection() -> getReadWriteConnection
    void releaseConnection(com.j256.ormlite.support.DatabaseConnection) -> releaseConnection
    boolean saveSpecialConnection(com.j256.ormlite.support.DatabaseConnection) -> saveSpecialConnection
    void clearSpecialConnection(com.j256.ormlite.support.DatabaseConnection) -> clearSpecialConnection
    void close() -> close
    void closeQuietly() -> closeQuietly
    com.j256.ormlite.db.DatabaseType getDatabaseType() -> getDatabaseType
    boolean isOpen() -> isOpen
    void setDatabaseConnectionProxyFactory(com.j256.ormlite.support.DatabaseConnectionProxyFactory) -> setDatabaseConnectionProxyFactory
    boolean isCancelQueriesEnabled() -> isCancelQueriesEnabled
    void setCancelQueriesEnabled(boolean) -> setCancelQueriesEnabled
    java.lang.String toString() -> toString
com.j256.ormlite.android.AndroidDatabaseConnection -> com.j256.ormlite.android.AndroidDatabaseConnection:
    java.lang.String ANDROID_VERSION -> ANDROID_VERSION
    com.j256.ormlite.logger.Logger logger -> logger
    java.lang.String[] NO_STRING_ARGS -> NO_STRING_ARGS
    android.database.sqlite.SQLiteDatabase db -> db
    boolean readWrite -> readWrite
    boolean cancelQueriesEnabled -> cancelQueriesEnabled
    int[] $SWITCH_TABLE$com$j256$ormlite$field$SqlType -> $SWITCH_TABLE$com$j256$ormlite$field$SqlType
    boolean isAutoCommitSupported() -> isAutoCommitSupported
    boolean isAutoCommit() -> isAutoCommit
    void setAutoCommit(boolean) -> setAutoCommit
    java.sql.Savepoint setSavePoint(java.lang.String) -> setSavePoint
    boolean isReadWrite() -> isReadWrite
    void commit(java.sql.Savepoint) -> commit
    void rollback(java.sql.Savepoint) -> rollback
    int executeStatement(java.lang.String,int) -> executeStatement
    com.j256.ormlite.support.CompiledStatement compileStatement(java.lang.String,com.j256.ormlite.stmt.StatementBuilder$StatementType,com.j256.ormlite.field.FieldType[],int) -> compileStatement
    int insert(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[],com.j256.ormlite.support.GeneratedKeyHolder) -> insert
    int update(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[]) -> update
    int delete(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[]) -> delete
    java.lang.Object queryForOne(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[],com.j256.ormlite.stmt.GenericRowMapper,com.j256.ormlite.dao.ObjectCache) -> queryForOne
    long queryForLong(java.lang.String) -> queryForLong
    long queryForLong(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[]) -> queryForLong
    void close() -> close
    void closeQuietly() -> closeQuietly
    boolean isClosed() -> isClosed
    boolean isTableExists(java.lang.String) -> isTableExists
    int update(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[],java.lang.String) -> update
    void bindArgs(android.database.sqlite.SQLiteStatement,java.lang.Object[],com.j256.ormlite.field.FieldType[]) -> bindArgs
    java.lang.String[] toStrings(java.lang.Object[]) -> toStrings
    java.lang.String toString() -> toString
    void closeQuietly(android.database.Cursor) -> closeQuietly
    void closeQuietly(android.database.sqlite.SQLiteStatement) -> closeQuietly
    int[] $SWITCH_TABLE$com$j256$ormlite$field$SqlType() -> $SWITCH_TABLE$com$j256$ormlite$field$SqlType
com.j256.ormlite.android.AndroidDatabaseConnection$OurSavePoint -> com.j256.ormlite.android.AndroidDatabaseConnection$OurSavePoint:
    java.lang.String name -> name
    int getSavepointId() -> getSavepointId
    java.lang.String getSavepointName() -> getSavepointName
com.j256.ormlite.android.AndroidDatabaseResults -> com.j256.ormlite.android.AndroidDatabaseResults:
    int MIN_NUM_COLUMN_NAMES_MAP -> MIN_NUM_COLUMN_NAMES_MAP
    android.database.Cursor cursor -> cursor
    java.lang.String[] columnNames -> columnNames
    java.util.Map columnNameMap -> columnNameMap
    com.j256.ormlite.dao.ObjectCache objectCache -> objectCache
    com.j256.ormlite.db.DatabaseType databaseType -> databaseType
    int getColumnCount() -> getColumnCount
    java.lang.String[] getColumnNames() -> getColumnNames
    boolean first() -> first
    boolean next() -> next
    boolean last() -> last
    boolean previous() -> previous
    boolean moveRelative(int) -> moveRelative
    boolean moveAbsolute(int) -> moveAbsolute
    int getCount() -> getCount
    int getPosition() -> getPosition
    int findColumn(java.lang.String) -> findColumn
    java.lang.String getString(int) -> getString
    boolean getBoolean(int) -> getBoolean
    char getChar(int) -> getChar
    byte getByte(int) -> getByte
    byte[] getBytes(int) -> getBytes
    short getShort(int) -> getShort
    int getInt(int) -> getInt
    long getLong(int) -> getLong
    float getFloat(int) -> getFloat
    double getDouble(int) -> getDouble
    java.sql.Timestamp getTimestamp(int) -> getTimestamp
    java.io.InputStream getBlobStream(int) -> getBlobStream
    java.math.BigDecimal getBigDecimal(int) -> getBigDecimal
    boolean wasNull(int) -> wasNull
    com.j256.ormlite.dao.ObjectCache getObjectCache() -> getObjectCache
    void close() -> close
    void closeQuietly() -> closeQuietly
    android.database.Cursor getRawCursor() -> getRawCursor
    java.lang.String toString() -> toString
    int lookupColumn(java.lang.String) -> lookupColumn
com.j256.ormlite.android.AndroidLog -> com.j256.ormlite.android.AndroidLog:
    java.lang.String ALL_LOGS_NAME -> ALL_LOGS_NAME
    int REFRESH_LEVEL_CACHE_EVERY -> REFRESH_LEVEL_CACHE_EVERY
    int MAX_TAG_LENGTH -> MAX_TAG_LENGTH
    java.lang.String className -> className
    int levelCacheC -> levelCacheC
    boolean[] levelCache -> levelCache
    int[] $SWITCH_TABLE$com$j256$ormlite$logger$Log$Level -> $SWITCH_TABLE$com$j256$ormlite$logger$Log$Level
    boolean isLevelEnabled(com.j256.ormlite.logger.Log$Level) -> isLevelEnabled
    void log(com.j256.ormlite.logger.Log$Level,java.lang.String) -> log
    void log(com.j256.ormlite.logger.Log$Level,java.lang.String,java.lang.Throwable) -> log
    void refreshLevelCache() -> refreshLevelCache
    boolean isLevelEnabledInternal(int) -> isLevelEnabledInternal
    int levelToAndroidLevel(com.j256.ormlite.logger.Log$Level) -> levelToAndroidLevel
    int[] $SWITCH_TABLE$com$j256$ormlite$logger$Log$Level() -> $SWITCH_TABLE$com$j256$ormlite$logger$Log$Level
com.j256.ormlite.android.DatabaseTableConfigUtil -> com.j256.ormlite.android.DatabaseTableConfigUtil:
    java.lang.Class annotationFactoryClazz -> annotationFactoryClazz
    java.lang.reflect.Field elementsField -> elementsField
    java.lang.Class annotationMemberClazz -> annotationMemberClazz
    java.lang.reflect.Field nameField -> nameField
    java.lang.reflect.Field valueField -> valueField
    int workedC -> workedC
    int[] configFieldNums -> configFieldNums
    int COLUMN_NAME -> COLUMN_NAME
    int DATA_TYPE -> DATA_TYPE
    int DEFAULT_VALUE -> DEFAULT_VALUE
    int WIDTH -> WIDTH
    int CAN_BE_NULL -> CAN_BE_NULL
    int ID -> ID
    int GENERATED_ID -> GENERATED_ID
    int GENERATED_ID_SEQUENCE -> GENERATED_ID_SEQUENCE
    int FOREIGN -> FOREIGN
    int USE_GET_SET -> USE_GET_SET
    int UNKNOWN_ENUM_NAME -> UNKNOWN_ENUM_NAME
    int THROW_IF_NULL -> THROW_IF_NULL
    int PERSISTED -> PERSISTED
    int FORMAT -> FORMAT
    int UNIQUE -> UNIQUE
    int UNIQUE_COMBO -> UNIQUE_COMBO
    int INDEX -> INDEX
    int UNIQUE_INDEX -> UNIQUE_INDEX
    int INDEX_NAME -> INDEX_NAME
    int UNIQUE_INDEX_NAME -> UNIQUE_INDEX_NAME
    int FOREIGN_AUTO_REFRESH -> FOREIGN_AUTO_REFRESH
    int MAX_FOREIGN_AUTO_REFRESH_LEVEL -> MAX_FOREIGN_AUTO_REFRESH_LEVEL
    int PERSISTER_CLASS -> PERSISTER_CLASS
    int ALLOW_GENERATED_ID_INSERT -> ALLOW_GENERATED_ID_INSERT
    int COLUMN_DEFINITON -> COLUMN_DEFINITON
    int FOREIGN_AUTO_CREATE -> FOREIGN_AUTO_CREATE
    int VERSION -> VERSION
    int FOREIGN_COLUMN_NAME -> FOREIGN_COLUMN_NAME
    int READ_ONLY -> READ_ONLY
    com.j256.ormlite.table.DatabaseTableConfig fromClass(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> fromClass
    int getWorkedC() -> getWorkedC
    int[] lookupClasses() -> lookupClasses
    int configFieldNameToNum(java.lang.String) -> configFieldNameToNum
    com.j256.ormlite.field.DatabaseFieldConfig configFromField(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.reflect.Field) -> configFromField
    com.j256.ormlite.field.DatabaseFieldConfig buildConfig(com.j256.ormlite.field.DatabaseField,java.lang.String,java.lang.reflect.Field) -> buildConfig
    void assignConfigField(int,com.j256.ormlite.field.DatabaseFieldConfig,java.lang.reflect.Field,java.lang.Object) -> assignConfigField
    java.lang.String valueIfNotBlank(java.lang.String) -> valueIfNotBlank
com.j256.ormlite.android.DatabaseTableConfigUtil$DatabaseFieldSample -> com.j256.ormlite.android.DatabaseTableConfigUtil$DatabaseFieldSample:
    java.lang.String field -> field
com.j256.ormlite.android.apptools.BaseOrmLiteLoader -> com.j256.ormlite.android.apptools.BaseOrmLiteLoader:
    com.j256.ormlite.dao.Dao dao -> dao
    java.util.List cachedResults -> cachedResults
    void deliverResult(java.util.List) -> deliverResult
    void onStartLoading() -> onStartLoading
    void onStopLoading() -> onStopLoading
    void onReset() -> onReset
    void setDao(com.j256.ormlite.dao.Dao) -> setDao
    void deliverResult(java.lang.Object) -> deliverResult
com.j256.ormlite.android.apptools.OpenHelperManager -> com.j256.ormlite.android.apptools.OpenHelperManager:
    java.lang.String HELPER_CLASS_RESOURCE_NAME -> HELPER_CLASS_RESOURCE_NAME
    com.j256.ormlite.logger.Logger logger -> logger
    java.lang.Class helperClass -> helperClass
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper helper -> helper
    boolean wasClosed -> wasClosed
    int instanceCount -> instanceCount
    void setOpenHelperClass(java.lang.Class) -> setOpenHelperClass
    void setHelper(com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper) -> setHelper
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelper(android.content.Context,java.lang.Class) -> getHelper
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelper(android.content.Context) -> getHelper
    void release() -> release
    void releaseHelper() -> releaseHelper
    void innerSetHelperClass(java.lang.Class) -> innerSetHelperClass
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper loadHelper(android.content.Context,java.lang.Class) -> loadHelper
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper constructHelper(android.content.Context,java.lang.Class) -> constructHelper
    java.lang.Class lookupHelperClass(android.content.Context,java.lang.Class) -> lookupHelperClass
com.j256.ormlite.android.apptools.OrmLiteBaseActivity -> com.j256.ormlite.android.apptools.OrmLiteBaseActivity:
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper helper -> helper
    boolean created -> created
    boolean destroyed -> destroyed
    com.j256.ormlite.logger.Logger logger -> logger
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelper() -> getHelper
    com.j256.ormlite.support.ConnectionSource getConnectionSource() -> getConnectionSource
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelperInternal(android.content.Context) -> getHelperInternal
    void releaseHelper(com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper) -> releaseHelper
    java.lang.String toString() -> toString
com.j256.ormlite.android.apptools.OrmLiteBaseActivityGroup -> com.j256.ormlite.android.apptools.OrmLiteBaseActivityGroup:
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper helper -> helper
    boolean created -> created
    boolean destroyed -> destroyed
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelper() -> getHelper
    com.j256.ormlite.support.ConnectionSource getConnectionSource() -> getConnectionSource
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelperInternal(android.content.Context) -> getHelperInternal
    void releaseHelper(com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper) -> releaseHelper
com.j256.ormlite.android.apptools.OrmLiteBaseListActivity -> com.j256.ormlite.android.apptools.OrmLiteBaseListActivity:
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper helper -> helper
    boolean created -> created
    boolean destroyed -> destroyed
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelper() -> getHelper
    com.j256.ormlite.support.ConnectionSource getConnectionSource() -> getConnectionSource
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelperInternal(android.content.Context) -> getHelperInternal
    void releaseHelper(com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper) -> releaseHelper
com.j256.ormlite.android.apptools.OrmLiteBaseService -> com.j256.ormlite.android.apptools.OrmLiteBaseService:
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper helper -> helper
    boolean created -> created
    boolean destroyed -> destroyed
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelper() -> getHelper
    com.j256.ormlite.support.ConnectionSource getConnectionSource() -> getConnectionSource
    void onCreate() -> onCreate
    void onDestroy() -> onDestroy
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelperInternal(android.content.Context) -> getHelperInternal
    void releaseHelper(com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper) -> releaseHelper
com.j256.ormlite.android.apptools.OrmLiteBaseTabActivity -> com.j256.ormlite.android.apptools.OrmLiteBaseTabActivity:
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper helper -> helper
    boolean created -> created
    boolean destroyed -> destroyed
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelper() -> getHelper
    com.j256.ormlite.support.ConnectionSource getConnectionSource() -> getConnectionSource
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelperInternal(android.content.Context) -> getHelperInternal
    void releaseHelper(com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper) -> releaseHelper
com.j256.ormlite.android.apptools.OrmLiteConfigUtil -> com.j256.ormlite.android.apptools.OrmLiteConfigUtil:
    java.lang.String RESOURCE_DIR_NAME -> RESOURCE_DIR_NAME
    java.lang.String RAW_DIR_NAME -> RAW_DIR_NAME
    int maxFindSourceLevel -> maxFindSourceLevel
    com.j256.ormlite.db.DatabaseType databaseType -> databaseType
    void main(java.lang.String[]) -> main
    void writeConfigFile(java.lang.String) -> writeConfigFile
    void writeConfigFile(java.lang.String,java.lang.Class[]) -> writeConfigFile
    void writeConfigFile(java.io.File) -> writeConfigFile
    void writeConfigFile(java.io.File,java.io.File) -> writeConfigFile
    void writeConfigFile(java.io.File,java.lang.Class[]) -> writeConfigFile
    void writeConfigFile(java.io.OutputStream,java.io.File) -> writeConfigFile
    void writeConfigFile(java.io.OutputStream,java.lang.Class[]) -> writeConfigFile
    java.io.File findRawDir(java.io.File) -> findRawDir
    void writeHeader(java.io.BufferedWriter) -> writeHeader
    void findAnnotatedClasses(java.util.List,java.io.File,int) -> findAnnotatedClasses
    void writeConfigForTable(java.io.BufferedWriter,java.lang.Class) -> writeConfigForTable
    boolean classHasAnnotations(java.lang.Class) -> classHasAnnotations
    java.lang.String getPackageOfClass(java.io.File) -> getPackageOfClass
    java.io.File findResRawDir(java.io.File) -> findResRawDir
com.j256.ormlite.android.apptools.OrmLiteConfigUtil$1 -> com.j256.ormlite.android.apptools.OrmLiteConfigUtil$1:
    boolean accept(java.io.File) -> accept
com.j256.ormlite.android.apptools.OrmLiteCursorAdapter -> com.j256.ormlite.android.apptools.OrmLiteCursorAdapter:
    com.j256.ormlite.stmt.PreparedQuery preparedQuery -> preparedQuery
    void bindView(android.view.View,android.content.Context,java.lang.Object) -> bindView
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    void doBindView(android.view.View,android.content.Context,android.database.Cursor) -> doBindView
    void changeCursor(android.database.Cursor) -> changeCursor
    void changeCursor(android.database.Cursor,com.j256.ormlite.stmt.PreparedQuery) -> changeCursor
    void setPreparedQuery(com.j256.ormlite.stmt.PreparedQuery) -> setPreparedQuery
com.j256.ormlite.android.apptools.OrmLiteCursorLoader -> com.j256.ormlite.android.apptools.OrmLiteCursorLoader:
    com.j256.ormlite.dao.Dao dao -> dao
    com.j256.ormlite.stmt.PreparedQuery query -> query
    android.database.Cursor cursor -> cursor
    android.database.Cursor loadInBackground() -> loadInBackground
    void deliverResult(android.database.Cursor) -> deliverResult
    void onStartLoading() -> onStartLoading
    void onStopLoading() -> onStopLoading
    void onCanceled(android.database.Cursor) -> onCanceled
    void onReset() -> onReset
    void onChange() -> onChange
    com.j256.ormlite.stmt.PreparedQuery getQuery() -> getQuery
    void setQuery(com.j256.ormlite.stmt.PreparedQuery) -> setQuery
    void onCanceled(java.lang.Object) -> onCanceled
    void deliverResult(java.lang.Object) -> deliverResult
    java.lang.Object loadInBackground() -> loadInBackground
com.j256.ormlite.android.apptools.OrmLitePreparedQueryLoader -> com.j256.ormlite.android.apptools.OrmLitePreparedQueryLoader:
    com.j256.ormlite.stmt.PreparedQuery preparedQuery -> preparedQuery
    java.util.List loadInBackground() -> loadInBackground
    void setPreparedQuery(com.j256.ormlite.stmt.PreparedQuery) -> setPreparedQuery
    com.j256.ormlite.stmt.PreparedQuery getPreparedQuery() -> getPreparedQuery
    java.lang.Object loadInBackground() -> loadInBackground
com.j256.ormlite.android.apptools.OrmLiteQueryForAllLoader -> com.j256.ormlite.android.apptools.OrmLiteQueryForAllLoader:
    java.util.List loadInBackground() -> loadInBackground
    java.lang.Object loadInBackground() -> loadInBackground
com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper -> com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper:
    com.j256.ormlite.logger.Logger logger -> logger
    com.j256.ormlite.android.AndroidConnectionSource connectionSource -> connectionSource
    boolean cancelQueriesEnabled -> cancelQueriesEnabled
    boolean isOpen -> isOpen
    void onCreate(android.database.sqlite.SQLiteDatabase,com.j256.ormlite.support.ConnectionSource) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,com.j256.ormlite.support.ConnectionSource,int,int) -> onUpgrade
    com.j256.ormlite.support.ConnectionSource getConnectionSource() -> getConnectionSource
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    void close() -> close
    boolean isOpen() -> isOpen
    com.j256.ormlite.dao.Dao getDao(java.lang.Class) -> getDao
    com.j256.ormlite.dao.RuntimeExceptionDao getRuntimeExceptionDao(java.lang.Class) -> getRuntimeExceptionDao
    java.lang.String toString() -> toString
    java.io.InputStream openFileId(android.content.Context,int) -> openFileId
    java.io.InputStream openFile(java.io.File) -> openFile
com.j256.ormlite.android.compat.ApiCompatibility -> com.j256.ormlite.android.compat.ApiCompatibility:
    android.database.Cursor rawQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[],com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook) -> rawQuery
    com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook createCancellationHook() -> createCancellationHook
com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook -> com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook:
    void cancel() -> cancel
com.j256.ormlite.android.compat.ApiCompatibilityUtils -> com.j256.ormlite.android.compat.ApiCompatibilityUtils:
    com.j256.ormlite.android.compat.ApiCompatibility compatibility -> compatibility
    int BASE -> BASE
    int BASE_1_1 -> BASE_1_1
    int CUPCAKE -> CUPCAKE
    int DONUT -> DONUT
    int ECLAIR -> ECLAIR
    int ECLAIR_0_1 -> ECLAIR_0_1
    int ECLAIR_MR1 -> ECLAIR_MR1
    int FROYO -> FROYO
    int GINGERBREAD -> GINGERBREAD
    int GINGERBREAD_MR1 -> GINGERBREAD_MR1
    int HONEYCOMB -> HONEYCOMB
    int HONEYCOMB_MR1 -> HONEYCOMB_MR1
    int HONEYCOMB_MR2 -> HONEYCOMB_MR2
    int ICE_CREAM_SANDWICH -> ICE_CREAM_SANDWICH
    int ICE_CREAM_SANDWICH_MR1 -> ICE_CREAM_SANDWICH_MR1
    int JELLY_BEAN -> JELLY_BEAN
    int JELLY_BEAN_MR1 -> JELLY_BEAN_MR1
    int JELLY_BEAN_MR2 -> JELLY_BEAN_MR2
    com.j256.ormlite.android.compat.ApiCompatibility getCompatibility() -> getCompatibility
com.j256.ormlite.android.compat.BasicApiCompatibility -> com.j256.ormlite.android.compat.BasicApiCompatibility:
    android.database.Cursor rawQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[],com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook) -> rawQuery
    com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook createCancellationHook() -> createCancellationHook
com.j256.ormlite.android.compat.JellyBeanApiCompatibility -> com.j256.ormlite.android.compat.JellyBeanApiCompatibility:
    android.database.Cursor rawQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[],com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook) -> rawQuery
    com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook createCancellationHook() -> createCancellationHook
com.j256.ormlite.android.compat.JellyBeanApiCompatibility$JellyBeanCancellationHook -> com.j256.ormlite.android.compat.JellyBeanApiCompatibility$JellyBeanCancellationHook:
    android.os.CancellationSignal cancellationSignal -> cancellationSignal
    void cancel() -> cancel
    android.os.CancellationSignal access$0(com.j256.ormlite.android.compat.JellyBeanApiCompatibility$JellyBeanCancellationHook) -> access$0
com.j256.ormlite.dao.BaseDaoImpl -> com.j256.ormlite.dao.BaseDaoImpl:
    java.lang.ThreadLocal daoConfigLevelLocal -> daoConfigLevelLocal
    com.j256.ormlite.dao.ReferenceObjectCache defaultObjectCache -> defaultObjectCache
    java.lang.Object constantObject -> constantObject
    com.j256.ormlite.stmt.StatementExecutor statementExecutor -> statementExecutor
    com.j256.ormlite.db.DatabaseType databaseType -> databaseType
    java.lang.Class dataClass -> dataClass
    com.j256.ormlite.table.DatabaseTableConfig tableConfig -> tableConfig
    com.j256.ormlite.table.TableInfo tableInfo -> tableInfo
    com.j256.ormlite.support.ConnectionSource connectionSource -> connectionSource
    com.j256.ormlite.dao.CloseableIterator lastIterator -> lastIterator
    com.j256.ormlite.table.ObjectFactory objectFactory -> objectFactory
    boolean initialized -> initialized
    com.j256.ormlite.dao.ObjectCache objectCache -> objectCache
    java.util.Map daoObserverMap -> daoObserverMap
    void initialize() -> initialize
    java.lang.Object queryForId(java.lang.Object) -> queryForId
    java.lang.Object queryForFirst(com.j256.ormlite.stmt.PreparedQuery) -> queryForFirst
    java.util.List queryForAll() -> queryForAll
    java.util.List queryForEq(java.lang.String,java.lang.Object) -> queryForEq
    com.j256.ormlite.stmt.QueryBuilder queryBuilder() -> queryBuilder
    com.j256.ormlite.stmt.UpdateBuilder updateBuilder() -> updateBuilder
    com.j256.ormlite.stmt.DeleteBuilder deleteBuilder() -> deleteBuilder
    java.util.List query(com.j256.ormlite.stmt.PreparedQuery) -> query
    java.util.List queryForMatching(java.lang.Object) -> queryForMatching
    java.util.List queryForMatchingArgs(java.lang.Object) -> queryForMatchingArgs
    java.util.List queryForFieldValues(java.util.Map) -> queryForFieldValues
    java.util.List queryForFieldValuesArgs(java.util.Map) -> queryForFieldValuesArgs
    java.lang.Object queryForSameId(java.lang.Object) -> queryForSameId
    int create(java.lang.Object) -> create
    int create(java.util.Collection) -> create
    java.lang.Object createIfNotExists(java.lang.Object) -> createIfNotExists
    com.j256.ormlite.dao.Dao$CreateOrUpdateStatus createOrUpdate(java.lang.Object) -> createOrUpdate
    int update(java.lang.Object) -> update
    int updateId(java.lang.Object,java.lang.Object) -> updateId
    int update(com.j256.ormlite.stmt.PreparedUpdate) -> update
    int refresh(java.lang.Object) -> refresh
    int delete(java.lang.Object) -> delete
    int deleteById(java.lang.Object) -> deleteById
    int delete(java.util.Collection) -> delete
    int deleteIds(java.util.Collection) -> deleteIds
    int delete(com.j256.ormlite.stmt.PreparedDelete) -> delete
    com.j256.ormlite.dao.CloseableIterator iterator() -> iterator
    com.j256.ormlite.dao.CloseableIterator closeableIterator() -> closeableIterator
    com.j256.ormlite.dao.CloseableIterator iterator(int) -> iterator
    com.j256.ormlite.dao.CloseableWrappedIterable getWrappedIterable() -> getWrappedIterable
    com.j256.ormlite.dao.CloseableWrappedIterable getWrappedIterable(com.j256.ormlite.stmt.PreparedQuery) -> getWrappedIterable
    void closeLastIterator() -> closeLastIterator
    com.j256.ormlite.dao.CloseableIterator iterator(com.j256.ormlite.stmt.PreparedQuery) -> iterator
    com.j256.ormlite.dao.CloseableIterator iterator(com.j256.ormlite.stmt.PreparedQuery,int) -> iterator
    com.j256.ormlite.dao.GenericRawResults queryRaw(java.lang.String,java.lang.String[]) -> queryRaw
    com.j256.ormlite.dao.GenericRawResults queryRaw(java.lang.String,com.j256.ormlite.dao.RawRowMapper,java.lang.String[]) -> queryRaw
    com.j256.ormlite.dao.GenericRawResults queryRaw(java.lang.String,com.j256.ormlite.field.DataType[],com.j256.ormlite.dao.RawRowObjectMapper,java.lang.String[]) -> queryRaw
    com.j256.ormlite.dao.GenericRawResults queryRaw(java.lang.String,com.j256.ormlite.field.DataType[],java.lang.String[]) -> queryRaw
    long queryRawValue(java.lang.String,java.lang.String[]) -> queryRawValue
    int executeRaw(java.lang.String,java.lang.String[]) -> executeRaw
    int executeRawNoArgs(java.lang.String) -> executeRawNoArgs
    int updateRaw(java.lang.String,java.lang.String[]) -> updateRaw
    java.lang.Object callBatchTasks(java.util.concurrent.Callable) -> callBatchTasks
    java.lang.String objectToString(java.lang.Object) -> objectToString
    boolean objectsEqual(java.lang.Object,java.lang.Object) -> objectsEqual
    java.lang.Object extractId(java.lang.Object) -> extractId
    java.lang.Class getDataClass() -> getDataClass
    com.j256.ormlite.field.FieldType findForeignFieldType(java.lang.Class) -> findForeignFieldType
    boolean isUpdatable() -> isUpdatable
    boolean isTableExists() -> isTableExists
    long countOf() -> countOf
    long countOf(com.j256.ormlite.stmt.PreparedQuery) -> countOf
    void assignEmptyForeignCollection(java.lang.Object,java.lang.String) -> assignEmptyForeignCollection
    com.j256.ormlite.dao.ForeignCollection getEmptyForeignCollection(java.lang.String) -> getEmptyForeignCollection
    void setObjectCache(boolean) -> setObjectCache
    void setObjectCache(com.j256.ormlite.dao.ObjectCache) -> setObjectCache
    com.j256.ormlite.dao.ObjectCache getObjectCache() -> getObjectCache
    void clearObjectCache() -> clearObjectCache
    void clearAllInternalObjectCaches() -> clearAllInternalObjectCaches
    java.lang.Object mapSelectStarRow(com.j256.ormlite.support.DatabaseResults) -> mapSelectStarRow
    void notifyChanges() -> notifyChanges
    void registerObserver(com.j256.ormlite.dao.Dao$DaoObserver) -> registerObserver
    void unregisterObserver(com.j256.ormlite.dao.Dao$DaoObserver) -> unregisterObserver
    com.j256.ormlite.stmt.GenericRowMapper getSelectStarRowMapper() -> getSelectStarRowMapper
    com.j256.ormlite.dao.RawRowMapper getRawRowMapper() -> getRawRowMapper
    boolean idExists(java.lang.Object) -> idExists
    com.j256.ormlite.support.DatabaseConnection startThreadConnection() -> startThreadConnection
    void endThreadConnection(com.j256.ormlite.support.DatabaseConnection) -> endThreadConnection
    void setAutoCommit(boolean) -> setAutoCommit
    void setAutoCommit(com.j256.ormlite.support.DatabaseConnection,boolean) -> setAutoCommit
    boolean isAutoCommit() -> isAutoCommit
    boolean isAutoCommit(com.j256.ormlite.support.DatabaseConnection) -> isAutoCommit
    void commit(com.j256.ormlite.support.DatabaseConnection) -> commit
    void rollBack(com.j256.ormlite.support.DatabaseConnection) -> rollBack
    com.j256.ormlite.table.ObjectFactory getObjectFactory() -> getObjectFactory
    void setObjectFactory(com.j256.ormlite.table.ObjectFactory) -> setObjectFactory
    com.j256.ormlite.table.DatabaseTableConfig getTableConfig() -> getTableConfig
    com.j256.ormlite.table.TableInfo getTableInfo() -> getTableInfo
    com.j256.ormlite.support.ConnectionSource getConnectionSource() -> getConnectionSource
    void setConnectionSource(com.j256.ormlite.support.ConnectionSource) -> setConnectionSource
    void setTableConfig(com.j256.ormlite.table.DatabaseTableConfig) -> setTableConfig
    com.j256.ormlite.dao.Dao createDao(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> createDao
    com.j256.ormlite.dao.Dao createDao(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.DatabaseTableConfig) -> createDao
    void checkForInitialized() -> checkForInitialized
    com.j256.ormlite.dao.ForeignCollection makeEmptyForeignCollection(java.lang.Object,java.lang.String) -> makeEmptyForeignCollection
    com.j256.ormlite.dao.CloseableIterator createIterator(int) -> createIterator
    com.j256.ormlite.dao.CloseableIterator createIterator(com.j256.ormlite.stmt.PreparedQuery,int) -> createIterator
    java.util.List queryForMatching(java.lang.Object,boolean) -> queryForMatching
    java.util.List queryForFieldValues(java.util.Map,boolean) -> queryForFieldValues
    java.util.Iterator iterator() -> iterator
    com.j256.ormlite.dao.CloseableIterator access$1(com.j256.ormlite.dao.BaseDaoImpl,int) -> access$1
    com.j256.ormlite.dao.CloseableIterator access$2(com.j256.ormlite.dao.BaseDaoImpl,com.j256.ormlite.stmt.PreparedQuery,int) -> access$2
com.j256.ormlite.dao.BaseDaoImpl$1 -> com.j256.ormlite.dao.BaseDaoImpl$1:
    java.util.List initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.j256.ormlite.dao.BaseDaoImpl$2 -> com.j256.ormlite.dao.BaseDaoImpl$2:
    com.j256.ormlite.dao.BaseDaoImpl this$0 -> this$0
    java.util.Iterator iterator() -> iterator
    com.j256.ormlite.dao.CloseableIterator closeableIterator() -> closeableIterator
com.j256.ormlite.dao.BaseDaoImpl$3 -> com.j256.ormlite.dao.BaseDaoImpl$3:
    com.j256.ormlite.dao.BaseDaoImpl this$0 -> this$0
    com.j256.ormlite.stmt.PreparedQuery val$preparedQuery -> val$preparedQuery
    java.util.Iterator iterator() -> iterator
    com.j256.ormlite.dao.CloseableIterator closeableIterator() -> closeableIterator
com.j256.ormlite.dao.BaseDaoImpl$4 -> com.j256.ormlite.dao.BaseDaoImpl$4:
com.j256.ormlite.dao.BaseDaoImpl$5 -> com.j256.ormlite.dao.BaseDaoImpl$5:
com.j256.ormlite.dao.BaseForeignCollection -> com.j256.ormlite.dao.BaseForeignCollection:
    long serialVersionUID -> serialVersionUID
    com.j256.ormlite.dao.Dao dao -> dao
    com.j256.ormlite.field.FieldType foreignFieldType -> foreignFieldType
    java.lang.Object parentId -> parentId
    com.j256.ormlite.stmt.PreparedQuery preparedQuery -> preparedQuery
    java.lang.String orderColumn -> orderColumn
    boolean orderAscending -> orderAscending
    java.lang.Object parent -> parent
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    void clear() -> clear
    int update(java.lang.Object) -> update
    int refresh(java.lang.Object) -> refresh
    com.j256.ormlite.dao.Dao getDao() -> getDao
    com.j256.ormlite.stmt.PreparedQuery getPreparedQuery() -> getPreparedQuery
    boolean addElement(java.lang.Object) -> addElement
com.j256.ormlite.dao.CloseableIterable -> com.j256.ormlite.dao.CloseableIterable:
    com.j256.ormlite.dao.CloseableIterator closeableIterator() -> closeableIterator
com.j256.ormlite.dao.CloseableIterator -> com.j256.ormlite.dao.CloseableIterator:
    void closeQuietly() -> closeQuietly
    com.j256.ormlite.support.DatabaseResults getRawResults() -> getRawResults
    void moveToNext() -> moveToNext
    java.lang.Object first() -> first
    java.lang.Object previous() -> previous
    java.lang.Object current() -> current
    java.lang.Object nextThrow() -> nextThrow
    java.lang.Object moveRelative(int) -> moveRelative
com.j256.ormlite.dao.CloseableWrappedIterable -> com.j256.ormlite.dao.CloseableWrappedIterable:
    void close() -> close
com.j256.ormlite.dao.CloseableWrappedIterableImpl -> com.j256.ormlite.dao.CloseableWrappedIterableImpl:
    com.j256.ormlite.dao.CloseableIterable iterable -> iterable
    com.j256.ormlite.dao.CloseableIterator iterator -> iterator
    com.j256.ormlite.dao.CloseableIterator iterator() -> iterator
    com.j256.ormlite.dao.CloseableIterator closeableIterator() -> closeableIterator
    void close() -> close
    java.util.Iterator iterator() -> iterator
com.j256.ormlite.dao.Dao -> com.j256.ormlite.dao.Dao:
    java.lang.Object queryForId(java.lang.Object) -> queryForId
    java.lang.Object queryForFirst(com.j256.ormlite.stmt.PreparedQuery) -> queryForFirst
    java.util.List queryForAll() -> queryForAll
    java.util.List queryForEq(java.lang.String,java.lang.Object) -> queryForEq
    java.util.List queryForMatching(java.lang.Object) -> queryForMatching
    java.util.List queryForMatchingArgs(java.lang.Object) -> queryForMatchingArgs
    java.util.List queryForFieldValues(java.util.Map) -> queryForFieldValues
    java.util.List queryForFieldValuesArgs(java.util.Map) -> queryForFieldValuesArgs
    java.lang.Object queryForSameId(java.lang.Object) -> queryForSameId
    com.j256.ormlite.stmt.QueryBuilder queryBuilder() -> queryBuilder
    com.j256.ormlite.stmt.UpdateBuilder updateBuilder() -> updateBuilder
    com.j256.ormlite.stmt.DeleteBuilder deleteBuilder() -> deleteBuilder
    java.util.List query(com.j256.ormlite.stmt.PreparedQuery) -> query
    int create(java.lang.Object) -> create
    int create(java.util.Collection) -> create
    java.lang.Object createIfNotExists(java.lang.Object) -> createIfNotExists
    com.j256.ormlite.dao.Dao$CreateOrUpdateStatus createOrUpdate(java.lang.Object) -> createOrUpdate
    int update(java.lang.Object) -> update
    int updateId(java.lang.Object,java.lang.Object) -> updateId
    int update(com.j256.ormlite.stmt.PreparedUpdate) -> update
    int refresh(java.lang.Object) -> refresh
    int delete(java.lang.Object) -> delete
    int deleteById(java.lang.Object) -> deleteById
    int delete(java.util.Collection) -> delete
    int deleteIds(java.util.Collection) -> deleteIds
    int delete(com.j256.ormlite.stmt.PreparedDelete) -> delete
    com.j256.ormlite.dao.CloseableIterator iterator() -> iterator
    com.j256.ormlite.dao.CloseableIterator iterator(int) -> iterator
    com.j256.ormlite.dao.CloseableIterator iterator(com.j256.ormlite.stmt.PreparedQuery) -> iterator
    com.j256.ormlite.dao.CloseableIterator iterator(com.j256.ormlite.stmt.PreparedQuery,int) -> iterator
    com.j256.ormlite.dao.CloseableWrappedIterable getWrappedIterable() -> getWrappedIterable
    com.j256.ormlite.dao.CloseableWrappedIterable getWrappedIterable(com.j256.ormlite.stmt.PreparedQuery) -> getWrappedIterable
    void closeLastIterator() -> closeLastIterator
    com.j256.ormlite.dao.GenericRawResults queryRaw(java.lang.String,java.lang.String[]) -> queryRaw
    com.j256.ormlite.dao.GenericRawResults queryRaw(java.lang.String,com.j256.ormlite.dao.RawRowMapper,java.lang.String[]) -> queryRaw
    com.j256.ormlite.dao.GenericRawResults queryRaw(java.lang.String,com.j256.ormlite.field.DataType[],com.j256.ormlite.dao.RawRowObjectMapper,java.lang.String[]) -> queryRaw
    com.j256.ormlite.dao.GenericRawResults queryRaw(java.lang.String,com.j256.ormlite.field.DataType[],java.lang.String[]) -> queryRaw
    long queryRawValue(java.lang.String,java.lang.String[]) -> queryRawValue
    int executeRaw(java.lang.String,java.lang.String[]) -> executeRaw
    int executeRawNoArgs(java.lang.String) -> executeRawNoArgs
    int updateRaw(java.lang.String,java.lang.String[]) -> updateRaw
    java.lang.Object callBatchTasks(java.util.concurrent.Callable) -> callBatchTasks
    java.lang.String objectToString(java.lang.Object) -> objectToString
    boolean objectsEqual(java.lang.Object,java.lang.Object) -> objectsEqual
    java.lang.Object extractId(java.lang.Object) -> extractId
    java.lang.Class getDataClass() -> getDataClass
    com.j256.ormlite.field.FieldType findForeignFieldType(java.lang.Class) -> findForeignFieldType
    boolean isUpdatable() -> isUpdatable
    boolean isTableExists() -> isTableExists
    long countOf() -> countOf
    long countOf(com.j256.ormlite.stmt.PreparedQuery) -> countOf
    void assignEmptyForeignCollection(java.lang.Object,java.lang.String) -> assignEmptyForeignCollection
    com.j256.ormlite.dao.ForeignCollection getEmptyForeignCollection(java.lang.String) -> getEmptyForeignCollection
    void setObjectCache(boolean) -> setObjectCache
    void setObjectCache(com.j256.ormlite.dao.ObjectCache) -> setObjectCache
    com.j256.ormlite.dao.ObjectCache getObjectCache() -> getObjectCache
    void clearObjectCache() -> clearObjectCache
    java.lang.Object mapSelectStarRow(com.j256.ormlite.support.DatabaseResults) -> mapSelectStarRow
    com.j256.ormlite.stmt.GenericRowMapper getSelectStarRowMapper() -> getSelectStarRowMapper
    com.j256.ormlite.dao.RawRowMapper getRawRowMapper() -> getRawRowMapper
    boolean idExists(java.lang.Object) -> idExists
    com.j256.ormlite.support.DatabaseConnection startThreadConnection() -> startThreadConnection
    void endThreadConnection(com.j256.ormlite.support.DatabaseConnection) -> endThreadConnection
    void setAutoCommit(boolean) -> setAutoCommit
    void setAutoCommit(com.j256.ormlite.support.DatabaseConnection,boolean) -> setAutoCommit
    boolean isAutoCommit() -> isAutoCommit
    boolean isAutoCommit(com.j256.ormlite.support.DatabaseConnection) -> isAutoCommit
    void commit(com.j256.ormlite.support.DatabaseConnection) -> commit
    void rollBack(com.j256.ormlite.support.DatabaseConnection) -> rollBack
    com.j256.ormlite.support.ConnectionSource getConnectionSource() -> getConnectionSource
    void setObjectFactory(com.j256.ormlite.table.ObjectFactory) -> setObjectFactory
    void registerObserver(com.j256.ormlite.dao.Dao$DaoObserver) -> registerObserver
    void unregisterObserver(com.j256.ormlite.dao.Dao$DaoObserver) -> unregisterObserver
    void notifyChanges() -> notifyChanges
com.j256.ormlite.dao.Dao$CreateOrUpdateStatus -> com.j256.ormlite.dao.Dao$CreateOrUpdateStatus:
    boolean created -> created
    boolean updated -> updated
    int numLinesChanged -> numLinesChanged
    boolean isCreated() -> isCreated
    boolean isUpdated() -> isUpdated
    int getNumLinesChanged() -> getNumLinesChanged
com.j256.ormlite.dao.Dao$DaoObserver -> com.j256.ormlite.dao.Dao$DaoObserver:
    void onChange() -> onChange
com.j256.ormlite.dao.DaoManager -> com.j256.ormlite.dao.DaoManager:
    java.util.Map configMap -> configMap
    java.util.Map classMap -> classMap
    java.util.Map tableConfigMap -> tableConfigMap
    com.j256.ormlite.logger.Logger logger -> logger
    com.j256.ormlite.dao.Dao createDao(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> createDao
    com.j256.ormlite.dao.Dao lookupDao(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> lookupDao
    com.j256.ormlite.dao.Dao createDao(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.DatabaseTableConfig) -> createDao
    com.j256.ormlite.dao.Dao lookupDao(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.DatabaseTableConfig) -> lookupDao
    void registerDao(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.dao.Dao) -> registerDao
    void unregisterDao(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.dao.Dao) -> unregisterDao
    void registerDaoWithTableConfig(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.dao.Dao) -> registerDaoWithTableConfig
    void clearCache() -> clearCache
    void clearDaoCache() -> clearDaoCache
    void addCachedDatabaseConfigs(java.util.Collection) -> addCachedDatabaseConfigs
    void addDaoToClassMap(com.j256.ormlite.dao.DaoManager$ClassConnectionSource,com.j256.ormlite.dao.Dao) -> addDaoToClassMap
    void removeDaoToClassMap(com.j256.ormlite.dao.DaoManager$ClassConnectionSource,com.j256.ormlite.dao.Dao) -> removeDaoToClassMap
    void addDaoToTableMap(com.j256.ormlite.dao.DaoManager$TableConfigConnectionSource,com.j256.ormlite.dao.Dao) -> addDaoToTableMap
    com.j256.ormlite.dao.Dao lookupDao(com.j256.ormlite.dao.DaoManager$ClassConnectionSource) -> lookupDao
    com.j256.ormlite.dao.Dao lookupDao(com.j256.ormlite.dao.DaoManager$TableConfigConnectionSource) -> lookupDao
    java.lang.reflect.Constructor findConstructor(java.lang.Class,java.lang.Object[]) -> findConstructor
    java.lang.Object createDaoFromConfig(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> createDaoFromConfig
    com.j256.ormlite.dao.Dao doCreateDao(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.DatabaseTableConfig) -> doCreateDao
com.j256.ormlite.dao.DaoManager$ClassConnectionSource -> com.j256.ormlite.dao.DaoManager$ClassConnectionSource:
    com.j256.ormlite.support.ConnectionSource connectionSource -> connectionSource
    java.lang.Class clazz -> clazz
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.j256.ormlite.dao.DaoManager$TableConfigConnectionSource -> com.j256.ormlite.dao.DaoManager$TableConfigConnectionSource:
    com.j256.ormlite.support.ConnectionSource connectionSource -> connectionSource
    com.j256.ormlite.table.DatabaseTableConfig tableConfig -> tableConfig
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.j256.ormlite.dao.EagerForeignCollection -> com.j256.ormlite.dao.EagerForeignCollection:
    long serialVersionUID -> serialVersionUID
    java.util.List results -> results
    com.j256.ormlite.dao.CloseableIterator iterator() -> iterator
    com.j256.ormlite.dao.CloseableIterator iterator(int) -> iterator
    com.j256.ormlite.dao.CloseableIterator closeableIterator() -> closeableIterator
    com.j256.ormlite.dao.CloseableIterator closeableIterator(int) -> closeableIterator
    com.j256.ormlite.dao.CloseableIterator iteratorThrow() -> iteratorThrow
    com.j256.ormlite.dao.CloseableIterator iteratorThrow(int) -> iteratorThrow
    com.j256.ormlite.dao.CloseableWrappedIterable getWrappedIterable() -> getWrappedIterable
    com.j256.ormlite.dao.CloseableWrappedIterable getWrappedIterable(int) -> getWrappedIterable
    void close() -> close
    void closeLastIterator() -> closeLastIterator
    boolean isEager() -> isEager
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int updateAll() -> updateAll
    int refreshAll() -> refreshAll
    int refreshCollection() -> refreshCollection
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.util.Iterator iterator() -> iterator
    java.util.List access$1(com.j256.ormlite.dao.EagerForeignCollection) -> access$1
com.j256.ormlite.dao.EagerForeignCollection$1 -> com.j256.ormlite.dao.EagerForeignCollection$1:
    int offset -> offset
    com.j256.ormlite.dao.EagerForeignCollection this$0 -> this$0
    boolean hasNext() -> hasNext
    java.lang.Object first() -> first
    java.lang.Object next() -> next
    java.lang.Object nextThrow() -> nextThrow
    java.lang.Object current() -> current
    java.lang.Object previous() -> previous
    java.lang.Object moveRelative(int) -> moveRelative
    void remove() -> remove
    void close() -> close
    void closeQuietly() -> closeQuietly
    com.j256.ormlite.support.DatabaseResults getRawResults() -> getRawResults
    void moveToNext() -> moveToNext
com.j256.ormlite.dao.ForeignCollection -> com.j256.ormlite.dao.ForeignCollection:
    com.j256.ormlite.dao.CloseableIterator iterator(int) -> iterator
    com.j256.ormlite.dao.CloseableIterator closeableIterator(int) -> closeableIterator
    com.j256.ormlite.dao.CloseableIterator iteratorThrow() -> iteratorThrow
    com.j256.ormlite.dao.CloseableIterator iteratorThrow(int) -> iteratorThrow
    com.j256.ormlite.dao.CloseableWrappedIterable getWrappedIterable() -> getWrappedIterable
    com.j256.ormlite.dao.CloseableWrappedIterable getWrappedIterable(int) -> getWrappedIterable
    void closeLastIterator() -> closeLastIterator
    boolean isEager() -> isEager
    int update(java.lang.Object) -> update
    int updateAll() -> updateAll
    int refresh(java.lang.Object) -> refresh
    int refreshAll() -> refreshAll
    int refreshCollection() -> refreshCollection
    boolean add(java.lang.Object) -> add
    com.j256.ormlite.dao.Dao getDao() -> getDao
com.j256.ormlite.dao.GenericRawResults -> com.j256.ormlite.dao.GenericRawResults:
    int getNumberColumns() -> getNumberColumns
    java.lang.String[] getColumnNames() -> getColumnNames
    java.util.List getResults() -> getResults
    java.lang.Object getFirstResult() -> getFirstResult
    void close() -> close
com.j256.ormlite.dao.LazyForeignCollection -> com.j256.ormlite.dao.LazyForeignCollection:
    long serialVersionUID -> serialVersionUID
    com.j256.ormlite.dao.CloseableIterator lastIterator -> lastIterator
    com.j256.ormlite.dao.CloseableIterator iterator() -> iterator
    com.j256.ormlite.dao.CloseableIterator iterator(int) -> iterator
    com.j256.ormlite.dao.CloseableIterator closeableIterator() -> closeableIterator
    com.j256.ormlite.dao.CloseableIterator closeableIterator(int) -> closeableIterator
    com.j256.ormlite.dao.CloseableIterator iteratorThrow() -> iteratorThrow
    com.j256.ormlite.dao.CloseableIterator iteratorThrow(int) -> iteratorThrow
    com.j256.ormlite.dao.CloseableWrappedIterable getWrappedIterable() -> getWrappedIterable
    com.j256.ormlite.dao.CloseableWrappedIterable getWrappedIterable(int) -> getWrappedIterable
    void closeLastIterator() -> closeLastIterator
    boolean isEager() -> isEager
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    int updateAll() -> updateAll
    int refreshAll() -> refreshAll
    int refreshCollection() -> refreshCollection
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.j256.ormlite.dao.CloseableIterator seperateIteratorThrow(int) -> seperateIteratorThrow
    java.util.Iterator iterator() -> iterator
    com.j256.ormlite.dao.CloseableIterator access$1(com.j256.ormlite.dao.LazyForeignCollection,int) -> access$1
com.j256.ormlite.dao.LazyForeignCollection$1 -> com.j256.ormlite.dao.LazyForeignCollection$1:
    com.j256.ormlite.dao.LazyForeignCollection this$0 -> this$0
    int val$flags -> val$flags
    com.j256.ormlite.dao.CloseableIterator iterator() -> iterator
    com.j256.ormlite.dao.CloseableIterator closeableIterator() -> closeableIterator
    java.util.Iterator iterator() -> iterator
com.j256.ormlite.dao.LruObjectCache -> com.j256.ormlite.dao.LruObjectCache:
    int capacity -> capacity
    java.util.concurrent.ConcurrentHashMap classMaps -> classMaps
    void registerClass(java.lang.Class) -> registerClass
    java.lang.Object get(java.lang.Class,java.lang.Object) -> get
    void put(java.lang.Class,java.lang.Object,java.lang.Object) -> put
    void clear(java.lang.Class) -> clear
    void clearAll() -> clearAll
    void remove(java.lang.Class,java.lang.Object) -> remove
    java.lang.Object updateId(java.lang.Class,java.lang.Object,java.lang.Object) -> updateId
    int size(java.lang.Class) -> size
    int sizeAll() -> sizeAll
    java.util.Map getMapForClass(java.lang.Class) -> getMapForClass
com.j256.ormlite.dao.LruObjectCache$LimitedLinkedHashMap -> com.j256.ormlite.dao.LruObjectCache$LimitedLinkedHashMap:
    long serialVersionUID -> serialVersionUID
    int capacity -> capacity
    boolean removeEldestEntry(java.util.Map$Entry) -> removeEldestEntry
com.j256.ormlite.dao.ObjectCache -> com.j256.ormlite.dao.ObjectCache:
    void registerClass(java.lang.Class) -> registerClass
    java.lang.Object get(java.lang.Class,java.lang.Object) -> get
    void put(java.lang.Class,java.lang.Object,java.lang.Object) -> put
    void remove(java.lang.Class,java.lang.Object) -> remove
    java.lang.Object updateId(java.lang.Class,java.lang.Object,java.lang.Object) -> updateId
    void clear(java.lang.Class) -> clear
    void clearAll() -> clearAll
    int size(java.lang.Class) -> size
    int sizeAll() -> sizeAll
com.j256.ormlite.dao.RawRowMapper -> com.j256.ormlite.dao.RawRowMapper:
    java.lang.Object mapRow(java.lang.String[],java.lang.String[]) -> mapRow
com.j256.ormlite.dao.RawRowObjectMapper -> com.j256.ormlite.dao.RawRowObjectMapper:
    java.lang.Object mapRow(java.lang.String[],com.j256.ormlite.field.DataType[],java.lang.Object[]) -> mapRow
com.j256.ormlite.dao.ReferenceObjectCache -> com.j256.ormlite.dao.ReferenceObjectCache:
    java.util.concurrent.ConcurrentHashMap classMaps -> classMaps
    boolean useWeak -> useWeak
    com.j256.ormlite.dao.ReferenceObjectCache makeWeakCache() -> makeWeakCache
    com.j256.ormlite.dao.ReferenceObjectCache makeSoftCache() -> makeSoftCache
    void registerClass(java.lang.Class) -> registerClass
    java.lang.Object get(java.lang.Class,java.lang.Object) -> get
    void put(java.lang.Class,java.lang.Object,java.lang.Object) -> put
    void clear(java.lang.Class) -> clear
    void clearAll() -> clearAll
    void remove(java.lang.Class,java.lang.Object) -> remove
    java.lang.Object updateId(java.lang.Class,java.lang.Object,java.lang.Object) -> updateId
    int size(java.lang.Class) -> size
    int sizeAll() -> sizeAll
    void cleanNullReferences(java.lang.Class) -> cleanNullReferences
    void cleanNullReferencesAll() -> cleanNullReferencesAll
    void cleanMap(java.util.Map) -> cleanMap
    java.util.Map getMapForClass(java.lang.Class) -> getMapForClass
com.j256.ormlite.dao.RuntimeExceptionDao -> com.j256.ormlite.dao.RuntimeExceptionDao:
    com.j256.ormlite.logger.Log$Level LOG_LEVEL -> LOG_LEVEL
    com.j256.ormlite.dao.Dao dao -> dao
    com.j256.ormlite.logger.Logger logger -> logger
    com.j256.ormlite.dao.RuntimeExceptionDao createDao(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> createDao
    com.j256.ormlite.dao.RuntimeExceptionDao createDao(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.DatabaseTableConfig) -> createDao
    java.lang.Object queryForId(java.lang.Object) -> queryForId
    java.lang.Object queryForFirst(com.j256.ormlite.stmt.PreparedQuery) -> queryForFirst
    java.util.List queryForAll() -> queryForAll
    java.util.List queryForEq(java.lang.String,java.lang.Object) -> queryForEq
    java.util.List queryForMatching(java.lang.Object) -> queryForMatching
    java.util.List queryForMatchingArgs(java.lang.Object) -> queryForMatchingArgs
    java.util.List queryForFieldValues(java.util.Map) -> queryForFieldValues
    java.util.List queryForFieldValuesArgs(java.util.Map) -> queryForFieldValuesArgs
    java.lang.Object queryForSameId(java.lang.Object) -> queryForSameId
    com.j256.ormlite.stmt.QueryBuilder queryBuilder() -> queryBuilder
    com.j256.ormlite.stmt.UpdateBuilder updateBuilder() -> updateBuilder
    com.j256.ormlite.stmt.DeleteBuilder deleteBuilder() -> deleteBuilder
    java.util.List query(com.j256.ormlite.stmt.PreparedQuery) -> query
    int create(java.lang.Object) -> create
    int create(java.util.Collection) -> create
    java.lang.Object createIfNotExists(java.lang.Object) -> createIfNotExists
    com.j256.ormlite.dao.Dao$CreateOrUpdateStatus createOrUpdate(java.lang.Object) -> createOrUpdate
    int update(java.lang.Object) -> update
    int updateId(java.lang.Object,java.lang.Object) -> updateId
    int update(com.j256.ormlite.stmt.PreparedUpdate) -> update
    int refresh(java.lang.Object) -> refresh
    int delete(java.lang.Object) -> delete
    int deleteById(java.lang.Object) -> deleteById
    int delete(java.util.Collection) -> delete
    int deleteIds(java.util.Collection) -> deleteIds
    int delete(com.j256.ormlite.stmt.PreparedDelete) -> delete
    com.j256.ormlite.dao.CloseableIterator iterator() -> iterator
    com.j256.ormlite.dao.CloseableIterator closeableIterator() -> closeableIterator
    com.j256.ormlite.dao.CloseableIterator iterator(int) -> iterator
    com.j256.ormlite.dao.CloseableWrappedIterable getWrappedIterable() -> getWrappedIterable
    com.j256.ormlite.dao.CloseableWrappedIterable getWrappedIterable(com.j256.ormlite.stmt.PreparedQuery) -> getWrappedIterable
    void closeLastIterator() -> closeLastIterator
    com.j256.ormlite.dao.CloseableIterator iterator(com.j256.ormlite.stmt.PreparedQuery) -> iterator
    com.j256.ormlite.dao.CloseableIterator iterator(com.j256.ormlite.stmt.PreparedQuery,int) -> iterator
    com.j256.ormlite.dao.GenericRawResults queryRaw(java.lang.String,java.lang.String[]) -> queryRaw
    long queryRawValue(java.lang.String,java.lang.String[]) -> queryRawValue
    com.j256.ormlite.dao.GenericRawResults queryRaw(java.lang.String,com.j256.ormlite.dao.RawRowMapper,java.lang.String[]) -> queryRaw
    com.j256.ormlite.dao.GenericRawResults queryRaw(java.lang.String,com.j256.ormlite.field.DataType[],com.j256.ormlite.dao.RawRowObjectMapper,java.lang.String[]) -> queryRaw
    com.j256.ormlite.dao.GenericRawResults queryRaw(java.lang.String,com.j256.ormlite.field.DataType[],java.lang.String[]) -> queryRaw
    int executeRaw(java.lang.String,java.lang.String[]) -> executeRaw
    int executeRawNoArgs(java.lang.String) -> executeRawNoArgs
    int updateRaw(java.lang.String,java.lang.String[]) -> updateRaw
    java.lang.Object callBatchTasks(java.util.concurrent.Callable) -> callBatchTasks
    java.lang.String objectToString(java.lang.Object) -> objectToString
    boolean objectsEqual(java.lang.Object,java.lang.Object) -> objectsEqual
    java.lang.Object extractId(java.lang.Object) -> extractId
    java.lang.Class getDataClass() -> getDataClass
    com.j256.ormlite.field.FieldType findForeignFieldType(java.lang.Class) -> findForeignFieldType
    boolean isUpdatable() -> isUpdatable
    boolean isTableExists() -> isTableExists
    long countOf() -> countOf
    long countOf(com.j256.ormlite.stmt.PreparedQuery) -> countOf
    void assignEmptyForeignCollection(java.lang.Object,java.lang.String) -> assignEmptyForeignCollection
    com.j256.ormlite.dao.ForeignCollection getEmptyForeignCollection(java.lang.String) -> getEmptyForeignCollection
    void setObjectCache(boolean) -> setObjectCache
    com.j256.ormlite.dao.ObjectCache getObjectCache() -> getObjectCache
    void setObjectCache(com.j256.ormlite.dao.ObjectCache) -> setObjectCache
    void clearObjectCache() -> clearObjectCache
    java.lang.Object mapSelectStarRow(com.j256.ormlite.support.DatabaseResults) -> mapSelectStarRow
    com.j256.ormlite.stmt.GenericRowMapper getSelectStarRowMapper() -> getSelectStarRowMapper
    boolean idExists(java.lang.Object) -> idExists
    com.j256.ormlite.support.DatabaseConnection startThreadConnection() -> startThreadConnection
    void endThreadConnection(com.j256.ormlite.support.DatabaseConnection) -> endThreadConnection
    void setAutoCommit(boolean) -> setAutoCommit
    void setAutoCommit(com.j256.ormlite.support.DatabaseConnection,boolean) -> setAutoCommit
    boolean isAutoCommit() -> isAutoCommit
    boolean isAutoCommit(com.j256.ormlite.support.DatabaseConnection) -> isAutoCommit
    void commit(com.j256.ormlite.support.DatabaseConnection) -> commit
    void rollBack(com.j256.ormlite.support.DatabaseConnection) -> rollBack
    void setObjectFactory(com.j256.ormlite.table.ObjectFactory) -> setObjectFactory
    com.j256.ormlite.dao.RawRowMapper getRawRowMapper() -> getRawRowMapper
    com.j256.ormlite.support.ConnectionSource getConnectionSource() -> getConnectionSource
    void registerObserver(com.j256.ormlite.dao.Dao$DaoObserver) -> registerObserver
    void unregisterObserver(com.j256.ormlite.dao.Dao$DaoObserver) -> unregisterObserver
    void notifyChanges() -> notifyChanges
    void logMessage(java.lang.Exception,java.lang.String) -> logMessage
    java.util.Iterator iterator() -> iterator
com.j256.ormlite.db.BaseDatabaseType -> com.j256.ormlite.db.BaseDatabaseType:
    java.lang.String DEFAULT_SEQUENCE_SUFFIX -> DEFAULT_SEQUENCE_SUFFIX
    java.sql.Driver driver -> driver
    int[] $SWITCH_TABLE$com$j256$ormlite$field$SqlType -> $SWITCH_TABLE$com$j256$ormlite$field$SqlType
    java.lang.String getDriverClassName() -> getDriverClassName
    void loadDriver() -> loadDriver
    void setDriver(java.sql.Driver) -> setDriver
    void appendColumnArg(java.lang.String,java.lang.StringBuilder,com.j256.ormlite.field.FieldType,java.util.List,java.util.List,java.util.List,java.util.List) -> appendColumnArg
    void appendStringType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendStringType
    void appendLongStringType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendLongStringType
    void appendDateType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendDateType
    void appendBooleanType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendBooleanType
    void appendCharType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendCharType
    void appendByteType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendByteType
    void appendShortType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendShortType
    void appendIntegerType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendIntegerType
    void appendLongType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendLongType
    void appendFloatType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendFloatType
    void appendDoubleType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendDoubleType
    void appendByteArrayType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendByteArrayType
    void appendSerializableType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendSerializableType
    void appendBigDecimalNumericType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendBigDecimalNumericType
    void appendDefaultValue(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,java.lang.Object) -> appendDefaultValue
    void configureGeneratedIdSequence(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,java.util.List,java.util.List,java.util.List) -> configureGeneratedIdSequence
    void configureGeneratedId(java.lang.String,java.lang.StringBuilder,com.j256.ormlite.field.FieldType,java.util.List,java.util.List,java.util.List,java.util.List) -> configureGeneratedId
    void configureId(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,java.util.List,java.util.List,java.util.List) -> configureId
    void addPrimaryKeySql(com.j256.ormlite.field.FieldType[],java.util.List,java.util.List,java.util.List,java.util.List) -> addPrimaryKeySql
    boolean generatedIdSqlAtEnd() -> generatedIdSqlAtEnd
    void addUniqueComboSql(com.j256.ormlite.field.FieldType[],java.util.List,java.util.List,java.util.List,java.util.List) -> addUniqueComboSql
    void dropColumnArg(com.j256.ormlite.field.FieldType,java.util.List,java.util.List) -> dropColumnArg
    void appendEscapedWord(java.lang.StringBuilder,java.lang.String) -> appendEscapedWord
    void appendEscapedEntityName(java.lang.StringBuilder,java.lang.String) -> appendEscapedEntityName
    java.lang.String generateIdSequenceName(java.lang.String,com.j256.ormlite.field.FieldType) -> generateIdSequenceName
    java.lang.String getCommentLinePrefix() -> getCommentLinePrefix
    com.j256.ormlite.field.DataPersister getDataPersister(com.j256.ormlite.field.DataPersister,com.j256.ormlite.field.FieldType) -> getDataPersister
    com.j256.ormlite.field.FieldConverter getFieldConverter(com.j256.ormlite.field.DataPersister,com.j256.ormlite.field.FieldType) -> getFieldConverter
    boolean isIdSequenceNeeded() -> isIdSequenceNeeded
    boolean isVarcharFieldWidthSupported() -> isVarcharFieldWidthSupported
    boolean isLimitSqlSupported() -> isLimitSqlSupported
    boolean isOffsetSqlSupported() -> isOffsetSqlSupported
    boolean isOffsetLimitArgument() -> isOffsetLimitArgument
    boolean isLimitAfterSelect() -> isLimitAfterSelect
    void appendLimitValue(java.lang.StringBuilder,long,java.lang.Long) -> appendLimitValue
    void appendOffsetValue(java.lang.StringBuilder,long) -> appendOffsetValue
    void appendSelectNextValFromSequence(java.lang.StringBuilder,java.lang.String) -> appendSelectNextValFromSequence
    void appendCreateTableSuffix(java.lang.StringBuilder) -> appendCreateTableSuffix
    boolean isCreateTableReturnsZero() -> isCreateTableReturnsZero
    boolean isCreateTableReturnsNegative() -> isCreateTableReturnsNegative
    boolean isEntityNamesMustBeUpCase() -> isEntityNamesMustBeUpCase
    boolean isNestedSavePointsSupported() -> isNestedSavePointsSupported
    java.lang.String getPingStatement() -> getPingStatement
    boolean isBatchUseTransaction() -> isBatchUseTransaction
    boolean isTruncateSupported() -> isTruncateSupported
    boolean isCreateIfNotExistsSupported() -> isCreateIfNotExistsSupported
    boolean isCreateIndexIfNotExistsSupported() -> isCreateIndexIfNotExistsSupported
    boolean isSelectSequenceBeforeInsert() -> isSelectSequenceBeforeInsert
    boolean isAllowGeneratedIdInsertSupported() -> isAllowGeneratedIdInsertSupported
    com.j256.ormlite.table.DatabaseTableConfig extractDatabaseTableConfig(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> extractDatabaseTableConfig
    void appendInsertNoColumns(java.lang.StringBuilder) -> appendInsertNoColumns
    void appendCanBeNull(java.lang.StringBuilder,com.j256.ormlite.field.FieldType) -> appendCanBeNull
    void addSingleUnique(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,java.util.List,java.util.List) -> addSingleUnique
    int[] $SWITCH_TABLE$com$j256$ormlite$field$SqlType() -> $SWITCH_TABLE$com$j256$ormlite$field$SqlType
com.j256.ormlite.db.BaseDatabaseType$BooleanNumberFieldConverter -> com.j256.ormlite.db.BaseDatabaseType$BooleanNumberFieldConverter:
    com.j256.ormlite.field.SqlType getSqlType() -> getSqlType
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    java.lang.Object resultStringToJava(com.j256.ormlite.field.FieldType,java.lang.String,int) -> resultStringToJava
com.j256.ormlite.db.BaseSqliteDatabaseType -> com.j256.ormlite.db.BaseSqliteDatabaseType:
    com.j256.ormlite.field.FieldConverter booleanConverter -> booleanConverter
    int[] $SWITCH_TABLE$com$j256$ormlite$field$SqlType -> $SWITCH_TABLE$com$j256$ormlite$field$SqlType
    void appendLongType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendLongType
    void configureGeneratedId(java.lang.String,java.lang.StringBuilder,com.j256.ormlite.field.FieldType,java.util.List,java.util.List,java.util.List,java.util.List) -> configureGeneratedId
    boolean generatedIdSqlAtEnd() -> generatedIdSqlAtEnd
    boolean isVarcharFieldWidthSupported() -> isVarcharFieldWidthSupported
    boolean isCreateTableReturnsZero() -> isCreateTableReturnsZero
    boolean isCreateIfNotExistsSupported() -> isCreateIfNotExistsSupported
    com.j256.ormlite.field.FieldConverter getFieldConverter(com.j256.ormlite.field.DataPersister,com.j256.ormlite.field.FieldType) -> getFieldConverter
    void appendInsertNoColumns(java.lang.StringBuilder) -> appendInsertNoColumns
    int[] $SWITCH_TABLE$com$j256$ormlite$field$SqlType() -> $SWITCH_TABLE$com$j256$ormlite$field$SqlType
com.j256.ormlite.db.DatabaseType -> com.j256.ormlite.db.DatabaseType:
    boolean isDatabaseUrlThisType(java.lang.String,java.lang.String) -> isDatabaseUrlThisType
    void loadDriver() -> loadDriver
    void setDriver(java.sql.Driver) -> setDriver
    void appendColumnArg(java.lang.String,java.lang.StringBuilder,com.j256.ormlite.field.FieldType,java.util.List,java.util.List,java.util.List,java.util.List) -> appendColumnArg
    void addPrimaryKeySql(com.j256.ormlite.field.FieldType[],java.util.List,java.util.List,java.util.List,java.util.List) -> addPrimaryKeySql
    void addUniqueComboSql(com.j256.ormlite.field.FieldType[],java.util.List,java.util.List,java.util.List,java.util.List) -> addUniqueComboSql
    void dropColumnArg(com.j256.ormlite.field.FieldType,java.util.List,java.util.List) -> dropColumnArg
    void appendEscapedEntityName(java.lang.StringBuilder,java.lang.String) -> appendEscapedEntityName
    void appendEscapedWord(java.lang.StringBuilder,java.lang.String) -> appendEscapedWord
    java.lang.String generateIdSequenceName(java.lang.String,com.j256.ormlite.field.FieldType) -> generateIdSequenceName
    java.lang.String getCommentLinePrefix() -> getCommentLinePrefix
    boolean isIdSequenceNeeded() -> isIdSequenceNeeded
    com.j256.ormlite.field.DataPersister getDataPersister(com.j256.ormlite.field.DataPersister,com.j256.ormlite.field.FieldType) -> getDataPersister
    com.j256.ormlite.field.FieldConverter getFieldConverter(com.j256.ormlite.field.DataPersister,com.j256.ormlite.field.FieldType) -> getFieldConverter
    boolean isVarcharFieldWidthSupported() -> isVarcharFieldWidthSupported
    boolean isLimitSqlSupported() -> isLimitSqlSupported
    boolean isLimitAfterSelect() -> isLimitAfterSelect
    void appendLimitValue(java.lang.StringBuilder,long,java.lang.Long) -> appendLimitValue
    boolean isOffsetSqlSupported() -> isOffsetSqlSupported
    boolean isOffsetLimitArgument() -> isOffsetLimitArgument
    void appendOffsetValue(java.lang.StringBuilder,long) -> appendOffsetValue
    void appendSelectNextValFromSequence(java.lang.StringBuilder,java.lang.String) -> appendSelectNextValFromSequence
    void appendCreateTableSuffix(java.lang.StringBuilder) -> appendCreateTableSuffix
    boolean isCreateTableReturnsZero() -> isCreateTableReturnsZero
    boolean isCreateTableReturnsNegative() -> isCreateTableReturnsNegative
    boolean isEntityNamesMustBeUpCase() -> isEntityNamesMustBeUpCase
    boolean isNestedSavePointsSupported() -> isNestedSavePointsSupported
    java.lang.String getPingStatement() -> getPingStatement
    boolean isBatchUseTransaction() -> isBatchUseTransaction
    boolean isTruncateSupported() -> isTruncateSupported
    boolean isCreateIfNotExistsSupported() -> isCreateIfNotExistsSupported
    boolean isCreateIndexIfNotExistsSupported() -> isCreateIndexIfNotExistsSupported
    boolean isSelectSequenceBeforeInsert() -> isSelectSequenceBeforeInsert
    boolean isAllowGeneratedIdInsertSupported() -> isAllowGeneratedIdInsertSupported
    java.lang.String getDatabaseName() -> getDatabaseName
    com.j256.ormlite.table.DatabaseTableConfig extractDatabaseTableConfig(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> extractDatabaseTableConfig
    void appendInsertNoColumns(java.lang.StringBuilder) -> appendInsertNoColumns
com.j256.ormlite.db.SqliteAndroidDatabaseType -> com.j256.ormlite.db.SqliteAndroidDatabaseType:
    int[] $SWITCH_TABLE$com$j256$ormlite$field$SqlType -> $SWITCH_TABLE$com$j256$ormlite$field$SqlType
    void loadDriver() -> loadDriver
    boolean isDatabaseUrlThisType(java.lang.String,java.lang.String) -> isDatabaseUrlThisType
    java.lang.String getDriverClassName() -> getDriverClassName
    java.lang.String getDatabaseName() -> getDatabaseName
    void appendDateType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendDateType
    void appendBooleanType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendBooleanType
    com.j256.ormlite.field.DataPersister getDataPersister(com.j256.ormlite.field.DataPersister,com.j256.ormlite.field.FieldType) -> getDataPersister
    boolean isNestedSavePointsSupported() -> isNestedSavePointsSupported
    boolean isBatchUseTransaction() -> isBatchUseTransaction
    com.j256.ormlite.table.DatabaseTableConfig extractDatabaseTableConfig(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> extractDatabaseTableConfig
    int[] $SWITCH_TABLE$com$j256$ormlite$field$SqlType() -> $SWITCH_TABLE$com$j256$ormlite$field$SqlType
com.j256.ormlite.field.BaseFieldConverter -> com.j256.ormlite.field.BaseFieldConverter:
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    java.lang.Object resultToJava(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToJava
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    boolean isStreamType() -> isStreamType
com.j256.ormlite.field.DataPersister -> com.j256.ormlite.field.DataPersister:
    java.lang.Class[] getAssociatedClasses() -> getAssociatedClasses
    java.lang.String[] getAssociatedClassNames() -> getAssociatedClassNames
    java.lang.Object makeConfigObject(com.j256.ormlite.field.FieldType) -> makeConfigObject
    java.lang.Object convertIdNumber(java.lang.Number) -> convertIdNumber
    boolean isValidGeneratedType() -> isValidGeneratedType
    boolean isValidForField(java.lang.reflect.Field) -> isValidForField
    java.lang.Class getPrimaryClass() -> getPrimaryClass
    boolean isEscapedDefaultValue() -> isEscapedDefaultValue
    boolean isEscapedValue() -> isEscapedValue
    boolean isPrimitive() -> isPrimitive
    boolean isComparable() -> isComparable
    boolean isAppropriateId() -> isAppropriateId
    boolean isArgumentHolderRequired() -> isArgumentHolderRequired
    boolean isSelfGeneratedId() -> isSelfGeneratedId
    java.lang.Object generateId() -> generateId
    int getDefaultWidth() -> getDefaultWidth
    boolean dataIsEqual(java.lang.Object,java.lang.Object) -> dataIsEqual
    boolean isValidForVersion() -> isValidForVersion
    java.lang.Object moveToNextValue(java.lang.Object) -> moveToNextValue
com.j256.ormlite.field.DataPersisterManager -> com.j256.ormlite.field.DataPersisterManager:
    com.j256.ormlite.field.DataPersister DEFAULT_ENUM_PERSISTER -> DEFAULT_ENUM_PERSISTER
    java.util.Map builtInMap -> builtInMap
    java.util.List registeredPersisters -> registeredPersisters
    void registerDataPersisters(com.j256.ormlite.field.DataPersister[]) -> registerDataPersisters
    void clear() -> clear
    com.j256.ormlite.field.DataPersister lookupForField(java.lang.reflect.Field) -> lookupForField
com.j256.ormlite.field.DataType -> com.j256.ormlite.field.DataType:
    com.j256.ormlite.field.DataType STRING -> STRING
    com.j256.ormlite.field.DataType LONG_STRING -> LONG_STRING
    com.j256.ormlite.field.DataType STRING_BYTES -> STRING_BYTES
    com.j256.ormlite.field.DataType BOOLEAN -> BOOLEAN
    com.j256.ormlite.field.DataType BOOLEAN_OBJ -> BOOLEAN_OBJ
    com.j256.ormlite.field.DataType BOOLEAN_CHAR -> BOOLEAN_CHAR
    com.j256.ormlite.field.DataType BOOLEAN_INTEGER -> BOOLEAN_INTEGER
    com.j256.ormlite.field.DataType DATE -> DATE
    com.j256.ormlite.field.DataType DATE_LONG -> DATE_LONG
    com.j256.ormlite.field.DataType DATE_STRING -> DATE_STRING
    com.j256.ormlite.field.DataType CHAR -> CHAR
    com.j256.ormlite.field.DataType CHAR_OBJ -> CHAR_OBJ
    com.j256.ormlite.field.DataType BYTE -> BYTE
    com.j256.ormlite.field.DataType BYTE_ARRAY -> BYTE_ARRAY
    com.j256.ormlite.field.DataType BYTE_OBJ -> BYTE_OBJ
    com.j256.ormlite.field.DataType SHORT -> SHORT
    com.j256.ormlite.field.DataType SHORT_OBJ -> SHORT_OBJ
    com.j256.ormlite.field.DataType INTEGER -> INTEGER
    com.j256.ormlite.field.DataType INTEGER_OBJ -> INTEGER_OBJ
    com.j256.ormlite.field.DataType LONG -> LONG
    com.j256.ormlite.field.DataType LONG_OBJ -> LONG_OBJ
    com.j256.ormlite.field.DataType FLOAT -> FLOAT
    com.j256.ormlite.field.DataType FLOAT_OBJ -> FLOAT_OBJ
    com.j256.ormlite.field.DataType DOUBLE -> DOUBLE
    com.j256.ormlite.field.DataType DOUBLE_OBJ -> DOUBLE_OBJ
    com.j256.ormlite.field.DataType SERIALIZABLE -> SERIALIZABLE
    com.j256.ormlite.field.DataType ENUM_STRING -> ENUM_STRING
    com.j256.ormlite.field.DataType ENUM_INTEGER -> ENUM_INTEGER
    com.j256.ormlite.field.DataType UUID -> UUID
    com.j256.ormlite.field.DataType BIG_INTEGER -> BIG_INTEGER
    com.j256.ormlite.field.DataType BIG_DECIMAL -> BIG_DECIMAL
    com.j256.ormlite.field.DataType BIG_DECIMAL_NUMERIC -> BIG_DECIMAL_NUMERIC
    com.j256.ormlite.field.DataType DATE_TIME -> DATE_TIME
    com.j256.ormlite.field.DataType SQL_DATE -> SQL_DATE
    com.j256.ormlite.field.DataType TIME_STAMP -> TIME_STAMP
    com.j256.ormlite.field.DataType UNKNOWN -> UNKNOWN
    com.j256.ormlite.field.DataPersister dataPersister -> dataPersister
    com.j256.ormlite.field.DataType[] ENUM$VALUES -> ENUM$VALUES
    com.j256.ormlite.field.DataPersister getDataPersister() -> getDataPersister
    com.j256.ormlite.field.DataType[] values() -> values
    com.j256.ormlite.field.DataType valueOf(java.lang.String) -> valueOf
com.j256.ormlite.field.DatabaseField -> com.j256.ormlite.field.DatabaseField:
    java.lang.String DEFAULT_STRING -> DEFAULT_STRING
    int DEFAULT_MAX_FOREIGN_AUTO_REFRESH_LEVEL -> DEFAULT_MAX_FOREIGN_AUTO_REFRESH_LEVEL
    java.lang.String columnName() -> columnName
    com.j256.ormlite.field.DataType dataType() -> dataType
    java.lang.String defaultValue() -> defaultValue
    int width() -> width
    boolean canBeNull() -> canBeNull
    boolean id() -> id
    boolean generatedId() -> generatedId
    java.lang.String generatedIdSequence() -> generatedIdSequence
    boolean foreign() -> foreign
    boolean useGetSet() -> useGetSet
    java.lang.String unknownEnumName() -> unknownEnumName
    boolean throwIfNull() -> throwIfNull
    boolean persisted() -> persisted
    java.lang.String format() -> format
    boolean unique() -> unique
    boolean uniqueCombo() -> uniqueCombo
    boolean index() -> index
    boolean uniqueIndex() -> uniqueIndex
    java.lang.String indexName() -> indexName
    java.lang.String uniqueIndexName() -> uniqueIndexName
    boolean foreignAutoRefresh() -> foreignAutoRefresh
    int maxForeignAutoRefreshLevel() -> maxForeignAutoRefreshLevel
    java.lang.Class persisterClass() -> persisterClass
    boolean allowGeneratedIdInsert() -> allowGeneratedIdInsert
    java.lang.String columnDefinition() -> columnDefinition
    boolean foreignAutoCreate() -> foreignAutoCreate
    boolean version() -> version
    java.lang.String foreignColumnName() -> foreignColumnName
    boolean readOnly() -> readOnly
com.j256.ormlite.field.DatabaseFieldConfig -> com.j256.ormlite.field.DatabaseFieldConfig:
    java.lang.Class DEFAULT_PERSISTER_CLASS -> DEFAULT_PERSISTER_CLASS
    com.j256.ormlite.field.DataType DEFAULT_DATA_TYPE -> DEFAULT_DATA_TYPE
    boolean DEFAULT_CAN_BE_NULL -> DEFAULT_CAN_BE_NULL
    boolean DEFAULT_FOREIGN_COLLECTION_ORDER_ASCENDING -> DEFAULT_FOREIGN_COLLECTION_ORDER_ASCENDING
    int NO_MAX_FOREIGN_AUTO_REFRESH_LEVEL_SPECIFIED -> NO_MAX_FOREIGN_AUTO_REFRESH_LEVEL_SPECIFIED
    int DEFAULT_MAX_EAGER_FOREIGN_COLLECTION_LEVEL -> DEFAULT_MAX_EAGER_FOREIGN_COLLECTION_LEVEL
    com.j256.ormlite.misc.JavaxPersistenceConfigurer javaxPersistenceConfigurer -> javaxPersistenceConfigurer
    java.lang.String fieldName -> fieldName
    java.lang.String columnName -> columnName
    com.j256.ormlite.field.DataType dataType -> dataType
    com.j256.ormlite.field.DataPersister dataPersister -> dataPersister
    java.lang.String defaultValue -> defaultValue
    int width -> width
    boolean canBeNull -> canBeNull
    boolean id -> id
    boolean generatedId -> generatedId
    java.lang.String generatedIdSequence -> generatedIdSequence
    boolean foreign -> foreign
    com.j256.ormlite.table.DatabaseTableConfig foreignTableConfig -> foreignTableConfig
    boolean useGetSet -> useGetSet
    java.lang.Enum unknownEnumValue -> unknownEnumValue
    boolean throwIfNull -> throwIfNull
    boolean persisted -> persisted
    java.lang.String format -> format
    boolean unique -> unique
    boolean uniqueCombo -> uniqueCombo
    boolean index -> index
    java.lang.String indexName -> indexName
    boolean uniqueIndex -> uniqueIndex
    java.lang.String uniqueIndexName -> uniqueIndexName
    boolean foreignAutoRefresh -> foreignAutoRefresh
    int maxForeignAutoRefreshLevel -> maxForeignAutoRefreshLevel
    java.lang.Class persisterClass -> persisterClass
    boolean allowGeneratedIdInsert -> allowGeneratedIdInsert
    java.lang.String columnDefinition -> columnDefinition
    boolean foreignAutoCreate -> foreignAutoCreate
    boolean version -> version
    java.lang.String foreignColumnName -> foreignColumnName
    boolean readOnly -> readOnly
    boolean foreignCollection -> foreignCollection
    boolean foreignCollectionEager -> foreignCollectionEager
    int foreignCollectionMaxEagerLevel -> foreignCollectionMaxEagerLevel
    java.lang.String foreignCollectionColumnName -> foreignCollectionColumnName
    java.lang.String foreignCollectionOrderColumnName -> foreignCollectionOrderColumnName
    boolean foreignCollectionOrderAscending -> foreignCollectionOrderAscending
    java.lang.String foreignCollectionForeignFieldName -> foreignCollectionForeignFieldName
    java.lang.String getFieldName() -> getFieldName
    void setFieldName(java.lang.String) -> setFieldName
    java.lang.String getColumnName() -> getColumnName
    void setColumnName(java.lang.String) -> setColumnName
    com.j256.ormlite.field.DataType getDataType() -> getDataType
    void setDataType(com.j256.ormlite.field.DataType) -> setDataType
    com.j256.ormlite.field.DataPersister getDataPersister() -> getDataPersister
    void setDataPersister(com.j256.ormlite.field.DataPersister) -> setDataPersister
    java.lang.String getDefaultValue() -> getDefaultValue
    void setDefaultValue(java.lang.String) -> setDefaultValue
    int getWidth() -> getWidth
    void setWidth(int) -> setWidth
    boolean isCanBeNull() -> isCanBeNull
    void setCanBeNull(boolean) -> setCanBeNull
    boolean isId() -> isId
    void setId(boolean) -> setId
    boolean isGeneratedId() -> isGeneratedId
    void setGeneratedId(boolean) -> setGeneratedId
    java.lang.String getGeneratedIdSequence() -> getGeneratedIdSequence
    void setGeneratedIdSequence(java.lang.String) -> setGeneratedIdSequence
    boolean isForeign() -> isForeign
    void setForeign(boolean) -> setForeign
    com.j256.ormlite.table.DatabaseTableConfig getForeignTableConfig() -> getForeignTableConfig
    void setForeignTableConfig(com.j256.ormlite.table.DatabaseTableConfig) -> setForeignTableConfig
    boolean isUseGetSet() -> isUseGetSet
    void setUseGetSet(boolean) -> setUseGetSet
    java.lang.Enum getUnknownEnumValue() -> getUnknownEnumValue
    void setUnknownEnumValue(java.lang.Enum) -> setUnknownEnumValue
    boolean isThrowIfNull() -> isThrowIfNull
    void setThrowIfNull(boolean) -> setThrowIfNull
    boolean isPersisted() -> isPersisted
    void setPersisted(boolean) -> setPersisted
    java.lang.String getFormat() -> getFormat
    void setFormat(java.lang.String) -> setFormat
    boolean isUnique() -> isUnique
    void setUnique(boolean) -> setUnique
    boolean isUniqueCombo() -> isUniqueCombo
    void setUniqueCombo(boolean) -> setUniqueCombo
    boolean isIndex() -> isIndex
    void setIndex(boolean) -> setIndex
    java.lang.String getIndexName(java.lang.String) -> getIndexName
    void setIndexName(java.lang.String) -> setIndexName
    boolean isUniqueIndex() -> isUniqueIndex
    void setUniqueIndex(boolean) -> setUniqueIndex
    java.lang.String getUniqueIndexName(java.lang.String) -> getUniqueIndexName
    void setUniqueIndexName(java.lang.String) -> setUniqueIndexName
    void setForeignAutoRefresh(boolean) -> setForeignAutoRefresh
    boolean isForeignAutoRefresh() -> isForeignAutoRefresh
    int getMaxForeignAutoRefreshLevel() -> getMaxForeignAutoRefreshLevel
    void setMaxForeignAutoRefreshLevel(int) -> setMaxForeignAutoRefreshLevel
    boolean isForeignCollection() -> isForeignCollection
    void setForeignCollection(boolean) -> setForeignCollection
    boolean isForeignCollectionEager() -> isForeignCollectionEager
    void setForeignCollectionEager(boolean) -> setForeignCollectionEager
    int getForeignCollectionMaxEagerLevel() -> getForeignCollectionMaxEagerLevel
    void setForeignCollectionMaxEagerLevel(int) -> setForeignCollectionMaxEagerLevel
    void setMaxEagerForeignCollectionLevel(int) -> setMaxEagerForeignCollectionLevel
    void setForeignCollectionMaxEagerForeignCollectionLevel(int) -> setForeignCollectionMaxEagerForeignCollectionLevel
    java.lang.String getForeignCollectionColumnName() -> getForeignCollectionColumnName
    void setForeignCollectionColumnName(java.lang.String) -> setForeignCollectionColumnName
    java.lang.String getForeignCollectionOrderColumnName() -> getForeignCollectionOrderColumnName
    void setForeignCollectionOrderColumn(java.lang.String) -> setForeignCollectionOrderColumn
    void setForeignCollectionOrderColumnName(java.lang.String) -> setForeignCollectionOrderColumnName
    boolean isForeignCollectionOrderAscending() -> isForeignCollectionOrderAscending
    void setForeignCollectionOrderAscending(boolean) -> setForeignCollectionOrderAscending
    java.lang.String getForeignCollectionForeignFieldName() -> getForeignCollectionForeignFieldName
    void setForeignCollectionForeignColumnName(java.lang.String) -> setForeignCollectionForeignColumnName
    void setForeignCollectionForeignFieldName(java.lang.String) -> setForeignCollectionForeignFieldName
    java.lang.Class getPersisterClass() -> getPersisterClass
    void setPersisterClass(java.lang.Class) -> setPersisterClass
    boolean isAllowGeneratedIdInsert() -> isAllowGeneratedIdInsert
    void setAllowGeneratedIdInsert(boolean) -> setAllowGeneratedIdInsert
    java.lang.String getColumnDefinition() -> getColumnDefinition
    void setColumnDefinition(java.lang.String) -> setColumnDefinition
    boolean isForeignAutoCreate() -> isForeignAutoCreate
    void setForeignAutoCreate(boolean) -> setForeignAutoCreate
    boolean isVersion() -> isVersion
    void setVersion(boolean) -> setVersion
    java.lang.String getForeignColumnName() -> getForeignColumnName
    void setForeignColumnName(java.lang.String) -> setForeignColumnName
    boolean isReadOnly() -> isReadOnly
    void setReadOnly(boolean) -> setReadOnly
    com.j256.ormlite.field.DatabaseFieldConfig fromField(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.reflect.Field) -> fromField
    java.lang.reflect.Method findGetMethod(java.lang.reflect.Field,boolean) -> findGetMethod
    java.lang.reflect.Method findSetMethod(java.lang.reflect.Field,boolean) -> findSetMethod
    com.j256.ormlite.field.DatabaseFieldConfig fromDatabaseField(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.reflect.Field,com.j256.ormlite.field.DatabaseField) -> fromDatabaseField
    void postProcess() -> postProcess
    java.lang.Enum findMatchingEnumVal(java.lang.reflect.Field,java.lang.String) -> findMatchingEnumVal
    com.j256.ormlite.field.DatabaseFieldConfig fromForeignCollection(com.j256.ormlite.db.DatabaseType,java.lang.reflect.Field,com.j256.ormlite.field.ForeignCollectionField) -> fromForeignCollection
    java.lang.String findIndexName(java.lang.String) -> findIndexName
    java.lang.String valueIfNotBlank(java.lang.String) -> valueIfNotBlank
    java.lang.String methodFromField(java.lang.reflect.Field,java.lang.String) -> methodFromField
com.j256.ormlite.field.DatabaseFieldConfigLoader -> com.j256.ormlite.field.DatabaseFieldConfigLoader:
    java.lang.String CONFIG_FILE_START_MARKER -> CONFIG_FILE_START_MARKER
    java.lang.String CONFIG_FILE_END_MARKER -> CONFIG_FILE_END_MARKER
    int DEFAULT_MAX_EAGER_FOREIGN_COLLECTION_LEVEL -> DEFAULT_MAX_EAGER_FOREIGN_COLLECTION_LEVEL
    com.j256.ormlite.field.DataPersister DEFAULT_DATA_PERSISTER -> DEFAULT_DATA_PERSISTER
    java.lang.String FIELD_NAME_FIELD_NAME -> FIELD_NAME_FIELD_NAME
    java.lang.String FIELD_NAME_COLUMN_NAME -> FIELD_NAME_COLUMN_NAME
    java.lang.String FIELD_NAME_DATA_PERSISTER -> FIELD_NAME_DATA_PERSISTER
    java.lang.String FIELD_NAME_DEFAULT_VALUE -> FIELD_NAME_DEFAULT_VALUE
    java.lang.String FIELD_NAME_WIDTH -> FIELD_NAME_WIDTH
    java.lang.String FIELD_NAME_CAN_BE_NULL -> FIELD_NAME_CAN_BE_NULL
    java.lang.String FIELD_NAME_ID -> FIELD_NAME_ID
    java.lang.String FIELD_NAME_GENERATED_ID -> FIELD_NAME_GENERATED_ID
    java.lang.String FIELD_NAME_GENERATED_ID_SEQUENCE -> FIELD_NAME_GENERATED_ID_SEQUENCE
    java.lang.String FIELD_NAME_FOREIGN -> FIELD_NAME_FOREIGN
    java.lang.String FIELD_NAME_USE_GET_SET -> FIELD_NAME_USE_GET_SET
    java.lang.String FIELD_NAME_UNKNOWN_ENUM_VALUE -> FIELD_NAME_UNKNOWN_ENUM_VALUE
    java.lang.String FIELD_NAME_THROW_IF_NULL -> FIELD_NAME_THROW_IF_NULL
    java.lang.String FIELD_NAME_FORMAT -> FIELD_NAME_FORMAT
    java.lang.String FIELD_NAME_UNIQUE -> FIELD_NAME_UNIQUE
    java.lang.String FIELD_NAME_UNIQUE_COMBO -> FIELD_NAME_UNIQUE_COMBO
    java.lang.String FIELD_NAME_INDEX -> FIELD_NAME_INDEX
    java.lang.String FIELD_NAME_INDEX_NAME -> FIELD_NAME_INDEX_NAME
    java.lang.String FIELD_NAME_UNIQUE_INDEX -> FIELD_NAME_UNIQUE_INDEX
    java.lang.String FIELD_NAME_UNIQUE_INDEX_NAME -> FIELD_NAME_UNIQUE_INDEX_NAME
    java.lang.String FIELD_NAME_FOREIGN_AUTO_REFRESH -> FIELD_NAME_FOREIGN_AUTO_REFRESH
    java.lang.String FIELD_NAME_MAX_FOREIGN_AUTO_REFRESH_LEVEL -> FIELD_NAME_MAX_FOREIGN_AUTO_REFRESH_LEVEL
    java.lang.String FIELD_NAME_PERSISTER_CLASS -> FIELD_NAME_PERSISTER_CLASS
    java.lang.String FIELD_NAME_ALLOW_GENERATED_ID_INSERT -> FIELD_NAME_ALLOW_GENERATED_ID_INSERT
    java.lang.String FIELD_NAME_COLUMN_DEFINITION -> FIELD_NAME_COLUMN_DEFINITION
    java.lang.String FIELD_NAME_FOREIGN_AUTO_CREATE -> FIELD_NAME_FOREIGN_AUTO_CREATE
    java.lang.String FIELD_NAME_VERSION -> FIELD_NAME_VERSION
    java.lang.String FIELD_NAME_FOREIGN_COLUMN_NAME -> FIELD_NAME_FOREIGN_COLUMN_NAME
    java.lang.String FIELD_NAME_READ_ONLY -> FIELD_NAME_READ_ONLY
    java.lang.String FIELD_NAME_FOREIGN_COLLECTION -> FIELD_NAME_FOREIGN_COLLECTION
    java.lang.String FIELD_NAME_FOREIGN_COLLECTION_EAGER -> FIELD_NAME_FOREIGN_COLLECTION_EAGER
    java.lang.String FIELD_NAME_MAX_EAGER_FOREIGN_COLLECTION_LEVEL_OLD -> FIELD_NAME_MAX_EAGER_FOREIGN_COLLECTION_LEVEL_OLD
    java.lang.String FIELD_NAME_MAX_EAGER_FOREIGN_COLLECTION_LEVEL -> FIELD_NAME_MAX_EAGER_FOREIGN_COLLECTION_LEVEL
    java.lang.String FIELD_NAME_FOREIGN_COLLECTION_COLUMN_NAME -> FIELD_NAME_FOREIGN_COLLECTION_COLUMN_NAME
    java.lang.String FIELD_NAME_FOREIGN_COLLECTION_ORDER_COLUMN_NAME_OLD -> FIELD_NAME_FOREIGN_COLLECTION_ORDER_COLUMN_NAME_OLD
    java.lang.String FIELD_NAME_FOREIGN_COLLECTION_ORDER_COLUMN_NAME -> FIELD_NAME_FOREIGN_COLLECTION_ORDER_COLUMN_NAME
    java.lang.String FIELD_NAME_FOREIGN_COLLECTION_ORDER_ASCENDING -> FIELD_NAME_FOREIGN_COLLECTION_ORDER_ASCENDING
    java.lang.String FIELD_NAME_FOREIGN_COLLECTION_FOREIGN_FIELD_NAME_OLD -> FIELD_NAME_FOREIGN_COLLECTION_FOREIGN_FIELD_NAME_OLD
    java.lang.String FIELD_NAME_FOREIGN_COLLECTION_FOREIGN_FIELD_NAME -> FIELD_NAME_FOREIGN_COLLECTION_FOREIGN_FIELD_NAME
    com.j256.ormlite.field.DatabaseFieldConfig fromReader(java.io.BufferedReader) -> fromReader
    void write(java.io.BufferedWriter,com.j256.ormlite.field.DatabaseFieldConfig,java.lang.String) -> write
    void writeConfig(java.io.BufferedWriter,com.j256.ormlite.field.DatabaseFieldConfig,java.lang.String) -> writeConfig
    void readField(com.j256.ormlite.field.DatabaseFieldConfig,java.lang.String,java.lang.String) -> readField
com.j256.ormlite.field.FieldConverter -> com.j256.ormlite.field.FieldConverter:
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    java.lang.Object resultToJava(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToJava
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    com.j256.ormlite.field.SqlType getSqlType() -> getSqlType
    boolean isStreamType() -> isStreamType
    java.lang.Object resultStringToJava(com.j256.ormlite.field.FieldType,java.lang.String,int) -> resultStringToJava
com.j256.ormlite.field.FieldType -> com.j256.ormlite.field.FieldType:
    java.lang.String FOREIGN_ID_FIELD_SUFFIX -> FOREIGN_ID_FIELD_SUFFIX
    boolean DEFAULT_VALUE_BOOLEAN -> DEFAULT_VALUE_BOOLEAN
    byte DEFAULT_VALUE_BYTE -> DEFAULT_VALUE_BYTE
    char DEFAULT_VALUE_CHAR -> DEFAULT_VALUE_CHAR
    short DEFAULT_VALUE_SHORT -> DEFAULT_VALUE_SHORT
    int DEFAULT_VALUE_INT -> DEFAULT_VALUE_INT
    long DEFAULT_VALUE_LONG -> DEFAULT_VALUE_LONG
    float DEFAULT_VALUE_FLOAT -> DEFAULT_VALUE_FLOAT
    double DEFAULT_VALUE_DOUBLE -> DEFAULT_VALUE_DOUBLE
    com.j256.ormlite.support.ConnectionSource connectionSource -> connectionSource
    java.lang.String tableName -> tableName
    java.lang.reflect.Field field -> field
    java.lang.String columnName -> columnName
    com.j256.ormlite.field.DatabaseFieldConfig fieldConfig -> fieldConfig
    boolean isId -> isId
    boolean isGeneratedId -> isGeneratedId
    java.lang.String generatedIdSequence -> generatedIdSequence
    java.lang.reflect.Method fieldGetMethod -> fieldGetMethod
    java.lang.reflect.Method fieldSetMethod -> fieldSetMethod
    java.lang.Class parentClass -> parentClass
    com.j256.ormlite.field.DataPersister dataPersister -> dataPersister
    java.lang.Object defaultValue -> defaultValue
    java.lang.Object dataTypeConfigObj -> dataTypeConfigObj
    com.j256.ormlite.field.FieldConverter fieldConverter -> fieldConverter
    com.j256.ormlite.field.FieldType foreignIdField -> foreignIdField
    com.j256.ormlite.table.TableInfo foreignTableInfo -> foreignTableInfo
    com.j256.ormlite.field.FieldType foreignFieldType -> foreignFieldType
    com.j256.ormlite.dao.BaseDaoImpl foreignDao -> foreignDao
    com.j256.ormlite.stmt.mapped.MappedQueryForId mappedQueryForId -> mappedQueryForId
    java.lang.ThreadLocal threadLevelCounters -> threadLevelCounters
    void configDaoInformation(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> configDaoInformation
    java.lang.reflect.Field getField() -> getField
    java.lang.String getTableName() -> getTableName
    java.lang.String getFieldName() -> getFieldName
    java.lang.Class getType() -> getType
    java.lang.String getColumnName() -> getColumnName
    com.j256.ormlite.field.DataPersister getDataPersister() -> getDataPersister
    java.lang.Object getDataTypeConfigObj() -> getDataTypeConfigObj
    com.j256.ormlite.field.SqlType getSqlType() -> getSqlType
    java.lang.Object getDefaultValue() -> getDefaultValue
    int getWidth() -> getWidth
    boolean isCanBeNull() -> isCanBeNull
    boolean isId() -> isId
    boolean isGeneratedId() -> isGeneratedId
    boolean isGeneratedIdSequence() -> isGeneratedIdSequence
    java.lang.String getGeneratedIdSequence() -> getGeneratedIdSequence
    boolean isForeign() -> isForeign
    void assignField(java.lang.Object,java.lang.Object,boolean,com.j256.ormlite.dao.ObjectCache) -> assignField
    java.lang.Object assignIdValue(java.lang.Object,java.lang.Number,com.j256.ormlite.dao.ObjectCache) -> assignIdValue
    java.lang.Object extractRawJavaFieldValue(java.lang.Object) -> extractRawJavaFieldValue
    java.lang.Object extractJavaFieldValue(java.lang.Object) -> extractJavaFieldValue
    java.lang.Object extractJavaFieldToSqlArgValue(java.lang.Object) -> extractJavaFieldToSqlArgValue
    java.lang.Object convertJavaFieldToSqlArgValue(java.lang.Object) -> convertJavaFieldToSqlArgValue
    java.lang.Object convertStringToJavaField(java.lang.String,int) -> convertStringToJavaField
    java.lang.Object moveToNextValue(java.lang.Object) -> moveToNextValue
    com.j256.ormlite.field.FieldType getForeignIdField() -> getForeignIdField
    boolean isEscapedValue() -> isEscapedValue
    java.lang.Enum getUnknownEnumVal() -> getUnknownEnumVal
    java.lang.String getFormat() -> getFormat
    boolean isUnique() -> isUnique
    boolean isUniqueCombo() -> isUniqueCombo
    java.lang.String getIndexName() -> getIndexName
    java.lang.String getUniqueIndexName() -> getUniqueIndexName
    boolean isEscapedDefaultValue() -> isEscapedDefaultValue
    boolean isComparable() -> isComparable
    boolean isArgumentHolderRequired() -> isArgumentHolderRequired
    boolean isForeignCollection() -> isForeignCollection
    com.j256.ormlite.dao.BaseForeignCollection buildForeignCollection(java.lang.Object,java.lang.Object) -> buildForeignCollection
    java.lang.Object resultToJava(com.j256.ormlite.support.DatabaseResults,java.util.Map) -> resultToJava
    boolean isSelfGeneratedId() -> isSelfGeneratedId
    boolean isAllowGeneratedIdInsert() -> isAllowGeneratedIdInsert
    java.lang.String getColumnDefinition() -> getColumnDefinition
    boolean isForeignAutoCreate() -> isForeignAutoCreate
    boolean isVersion() -> isVersion
    java.lang.Object generateId() -> generateId
    boolean isReadOnly() -> isReadOnly
    java.lang.Object getFieldValueIfNotDefault(java.lang.Object) -> getFieldValueIfNotDefault
    boolean isObjectsFieldValueDefault(java.lang.Object) -> isObjectsFieldValueDefault
    java.lang.Object getJavaDefaultValueDefault() -> getJavaDefaultValueDefault
    int createWithForeignDao(java.lang.Object) -> createWithForeignDao
    com.j256.ormlite.field.FieldType createFieldType(com.j256.ormlite.support.ConnectionSource,java.lang.String,java.lang.reflect.Field,java.lang.Class) -> createFieldType
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    boolean isFieldValueDefault(java.lang.Object) -> isFieldValueDefault
    com.j256.ormlite.field.FieldType findForeignFieldType(java.lang.Class,java.lang.Class,com.j256.ormlite.dao.BaseDaoImpl) -> findForeignFieldType
    void assignDataType(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.field.DataPersister) -> assignDataType
com.j256.ormlite.field.FieldType$1 -> com.j256.ormlite.field.FieldType$1:
    com.j256.ormlite.field.FieldType$LevelCounters initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.j256.ormlite.field.FieldType$LevelCounters -> com.j256.ormlite.field.FieldType$LevelCounters:
    int autoRefreshLevel -> autoRefreshLevel
    int autoRefreshLevelMax -> autoRefreshLevelMax
    int foreignCollectionLevel -> foreignCollectionLevel
    int foreignCollectionLevelMax -> foreignCollectionLevelMax
com.j256.ormlite.field.ForeignCollectionField -> com.j256.ormlite.field.ForeignCollectionField:
    int MAX_EAGER_LEVEL -> MAX_EAGER_LEVEL
    boolean eager() -> eager
    int maxEagerForeignCollectionLevel() -> maxEagerForeignCollectionLevel
    int maxEagerLevel() -> maxEagerLevel
    java.lang.String columnName() -> columnName
    java.lang.String orderColumnName() -> orderColumnName
    boolean orderAscending() -> orderAscending
    java.lang.String foreignColumnName() -> foreignColumnName
    java.lang.String foreignFieldName() -> foreignFieldName
com.j256.ormlite.field.SqlType -> com.j256.ormlite.field.SqlType:
    com.j256.ormlite.field.SqlType STRING -> STRING
    com.j256.ormlite.field.SqlType LONG_STRING -> LONG_STRING
    com.j256.ormlite.field.SqlType DATE -> DATE
    com.j256.ormlite.field.SqlType BOOLEAN -> BOOLEAN
    com.j256.ormlite.field.SqlType CHAR -> CHAR
    com.j256.ormlite.field.SqlType BYTE -> BYTE
    com.j256.ormlite.field.SqlType BYTE_ARRAY -> BYTE_ARRAY
    com.j256.ormlite.field.SqlType SHORT -> SHORT
    com.j256.ormlite.field.SqlType INTEGER -> INTEGER
    com.j256.ormlite.field.SqlType LONG -> LONG
    com.j256.ormlite.field.SqlType FLOAT -> FLOAT
    com.j256.ormlite.field.SqlType DOUBLE -> DOUBLE
    com.j256.ormlite.field.SqlType SERIALIZABLE -> SERIALIZABLE
    com.j256.ormlite.field.SqlType BLOB -> BLOB
    com.j256.ormlite.field.SqlType BIG_DECIMAL -> BIG_DECIMAL
    com.j256.ormlite.field.SqlType OTHER -> OTHER
    com.j256.ormlite.field.SqlType UNKNOWN -> UNKNOWN
    com.j256.ormlite.field.SqlType[] ENUM$VALUES -> ENUM$VALUES
    com.j256.ormlite.field.SqlType[] values() -> values
    com.j256.ormlite.field.SqlType valueOf(java.lang.String) -> valueOf
com.j256.ormlite.field.types.BaseDataType -> com.j256.ormlite.field.types.BaseDataType:
    com.j256.ormlite.field.SqlType sqlType -> sqlType
    java.lang.Class[] classes -> classes
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    boolean isValidForField(java.lang.reflect.Field) -> isValidForField
    java.lang.Class getPrimaryClass() -> getPrimaryClass
    java.lang.Object makeConfigObject(com.j256.ormlite.field.FieldType) -> makeConfigObject
    com.j256.ormlite.field.SqlType getSqlType() -> getSqlType
    java.lang.Class[] getAssociatedClasses() -> getAssociatedClasses
    java.lang.String[] getAssociatedClassNames() -> getAssociatedClassNames
    java.lang.Object convertIdNumber(java.lang.Number) -> convertIdNumber
    boolean isValidGeneratedType() -> isValidGeneratedType
    boolean isEscapedDefaultValue() -> isEscapedDefaultValue
    boolean isEscapedValue() -> isEscapedValue
    boolean isPrimitive() -> isPrimitive
    boolean isComparable() -> isComparable
    boolean isAppropriateId() -> isAppropriateId
    boolean isArgumentHolderRequired() -> isArgumentHolderRequired
    boolean isSelfGeneratedId() -> isSelfGeneratedId
    java.lang.Object generateId() -> generateId
    int getDefaultWidth() -> getDefaultWidth
    boolean dataIsEqual(java.lang.Object,java.lang.Object) -> dataIsEqual
    boolean isValidForVersion() -> isValidForVersion
    java.lang.Object moveToNextValue(java.lang.Object) -> moveToNextValue
    java.lang.Object resultStringToJava(com.j256.ormlite.field.FieldType,java.lang.String,int) -> resultStringToJava
com.j256.ormlite.field.types.BaseDateType -> com.j256.ormlite.field.types.BaseDateType:
    com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig defaultDateFormatConfig -> defaultDateFormatConfig
    com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig convertDateStringConfig(com.j256.ormlite.field.FieldType,com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig) -> convertDateStringConfig
    java.util.Date parseDateString(com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig,java.lang.String) -> parseDateString
    java.lang.String normalizeDateString(com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig,java.lang.String) -> normalizeDateString
    boolean isValidForVersion() -> isValidForVersion
    java.lang.Object moveToNextValue(java.lang.Object) -> moveToNextValue
    boolean isValidForField(java.lang.reflect.Field) -> isValidForField
com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig -> com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig:
    java.lang.ThreadLocal threadLocal -> threadLocal
    java.lang.String dateFormatStr -> dateFormatStr
    java.text.DateFormat getDateFormat() -> getDateFormat
    java.lang.String toString() -> toString
com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig$1 -> com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig$1:
    com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig this$1 -> this$1
    java.text.DateFormat initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.j256.ormlite.field.types.BaseEnumType -> com.j256.ormlite.field.types.BaseEnumType:
    java.lang.Enum enumVal(com.j256.ormlite.field.FieldType,java.lang.Object,java.lang.Enum,java.lang.Enum) -> enumVal
    boolean isValidForField(java.lang.reflect.Field) -> isValidForField
com.j256.ormlite.field.types.BigDecimalNumericType -> com.j256.ormlite.field.types.BigDecimalNumericType:
    com.j256.ormlite.field.types.BigDecimalNumericType singleTon -> singleTon
    com.j256.ormlite.field.types.BigDecimalNumericType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    boolean isAppropriateId() -> isAppropriateId
    boolean isEscapedValue() -> isEscapedValue
    java.lang.Class getPrimaryClass() -> getPrimaryClass
com.j256.ormlite.field.types.BigDecimalStringType -> com.j256.ormlite.field.types.BigDecimalStringType:
    int DEFAULT_WIDTH -> DEFAULT_WIDTH
    com.j256.ormlite.field.types.BigDecimalStringType singleTon -> singleTon
    com.j256.ormlite.field.types.BigDecimalStringType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    int getDefaultWidth() -> getDefaultWidth
    boolean isAppropriateId() -> isAppropriateId
com.j256.ormlite.field.types.BigIntegerType -> com.j256.ormlite.field.types.BigIntegerType:
    int DEFAULT_WIDTH -> DEFAULT_WIDTH
    com.j256.ormlite.field.types.BigIntegerType singleTon -> singleTon
    com.j256.ormlite.field.types.BigIntegerType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    int getDefaultWidth() -> getDefaultWidth
    boolean isAppropriateId() -> isAppropriateId
com.j256.ormlite.field.types.BooleanCharType -> com.j256.ormlite.field.types.BooleanCharType:
    java.lang.String DEFAULT_TRUE_FALSE_FORMAT -> DEFAULT_TRUE_FALSE_FORMAT
    com.j256.ormlite.field.types.BooleanCharType singleTon -> singleTon
    com.j256.ormlite.field.types.BooleanCharType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    java.lang.Object resultStringToJava(com.j256.ormlite.field.FieldType,java.lang.String,int) -> resultStringToJava
    java.lang.Object makeConfigObject(com.j256.ormlite.field.FieldType) -> makeConfigObject
    com.j256.ormlite.field.types.BooleanType getSingleton() -> getSingleton
com.j256.ormlite.field.types.BooleanIntegerType -> com.j256.ormlite.field.types.BooleanIntegerType:
    java.lang.Integer TRUE_VALUE -> TRUE_VALUE
    java.lang.Integer FALSE_VALUE -> FALSE_VALUE
    com.j256.ormlite.field.types.BooleanIntegerType singleTon -> singleTon
    com.j256.ormlite.field.types.BooleanIntegerType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    java.lang.Object resultStringToJava(com.j256.ormlite.field.FieldType,java.lang.String,int) -> resultStringToJava
    com.j256.ormlite.field.types.BooleanType getSingleton() -> getSingleton
com.j256.ormlite.field.types.BooleanObjectType -> com.j256.ormlite.field.types.BooleanObjectType:
    com.j256.ormlite.field.types.BooleanObjectType singleTon -> singleTon
    com.j256.ormlite.field.types.BooleanObjectType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    boolean isEscapedValue() -> isEscapedValue
    boolean isAppropriateId() -> isAppropriateId
com.j256.ormlite.field.types.BooleanType -> com.j256.ormlite.field.types.BooleanType:
    com.j256.ormlite.field.types.BooleanType singleTon -> singleTon
    com.j256.ormlite.field.types.BooleanType getSingleton() -> getSingleton
    boolean isPrimitive() -> isPrimitive
    com.j256.ormlite.field.types.BooleanObjectType getSingleton() -> getSingleton
com.j256.ormlite.field.types.ByteArrayType -> com.j256.ormlite.field.types.ByteArrayType:
    com.j256.ormlite.field.types.ByteArrayType singleTon -> singleTon
    com.j256.ormlite.field.types.ByteArrayType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    boolean isAppropriateId() -> isAppropriateId
    boolean isArgumentHolderRequired() -> isArgumentHolderRequired
    boolean dataIsEqual(java.lang.Object,java.lang.Object) -> dataIsEqual
    java.lang.Object resultStringToJava(com.j256.ormlite.field.FieldType,java.lang.String,int) -> resultStringToJava
    java.lang.Class getPrimaryClass() -> getPrimaryClass
com.j256.ormlite.field.types.ByteObjectType -> com.j256.ormlite.field.types.ByteObjectType:
    com.j256.ormlite.field.types.ByteObjectType singleTon -> singleTon
    com.j256.ormlite.field.types.ByteObjectType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    boolean isEscapedValue() -> isEscapedValue
com.j256.ormlite.field.types.ByteType -> com.j256.ormlite.field.types.ByteType:
    com.j256.ormlite.field.types.ByteType singleTon -> singleTon
    com.j256.ormlite.field.types.ByteType getSingleton() -> getSingleton
    boolean isPrimitive() -> isPrimitive
    com.j256.ormlite.field.types.ByteObjectType getSingleton() -> getSingleton
com.j256.ormlite.field.types.CharType -> com.j256.ormlite.field.types.CharType:
    com.j256.ormlite.field.types.CharType singleTon -> singleTon
    com.j256.ormlite.field.types.CharType getSingleton() -> getSingleton
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    boolean isPrimitive() -> isPrimitive
    com.j256.ormlite.field.types.CharacterObjectType getSingleton() -> getSingleton
com.j256.ormlite.field.types.CharacterObjectType -> com.j256.ormlite.field.types.CharacterObjectType:
    com.j256.ormlite.field.types.CharacterObjectType singleTon -> singleTon
    com.j256.ormlite.field.types.CharacterObjectType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
com.j256.ormlite.field.types.DateLongType -> com.j256.ormlite.field.types.DateLongType:
    com.j256.ormlite.field.types.DateLongType singleTon -> singleTon
    com.j256.ormlite.field.types.DateLongType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    boolean isEscapedValue() -> isEscapedValue
    java.lang.Object resultStringToJava(com.j256.ormlite.field.FieldType,java.lang.String,int) -> resultStringToJava
    java.lang.Class getPrimaryClass() -> getPrimaryClass
com.j256.ormlite.field.types.DateStringType -> com.j256.ormlite.field.types.DateStringType:
    int DEFAULT_WIDTH -> DEFAULT_WIDTH
    com.j256.ormlite.field.types.DateStringType singleTon -> singleTon
    com.j256.ormlite.field.types.DateStringType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    java.lang.Object makeConfigObject(com.j256.ormlite.field.FieldType) -> makeConfigObject
    int getDefaultWidth() -> getDefaultWidth
    java.lang.Object resultStringToJava(com.j256.ormlite.field.FieldType,java.lang.String,int) -> resultStringToJava
    java.lang.Class getPrimaryClass() -> getPrimaryClass
com.j256.ormlite.field.types.DateTimeType -> com.j256.ormlite.field.types.DateTimeType:
    com.j256.ormlite.field.types.DateTimeType singleTon -> singleTon
    java.lang.Class dateTimeClass -> dateTimeClass
    java.lang.reflect.Method getMillisMethod -> getMillisMethod
    java.lang.reflect.Constructor millisConstructor -> millisConstructor
    java.lang.String[] associatedClassNames -> associatedClassNames
    com.j256.ormlite.field.types.DateTimeType getSingleton() -> getSingleton
    java.lang.String[] getAssociatedClassNames() -> getAssociatedClassNames
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    boolean isEscapedValue() -> isEscapedValue
    boolean isAppropriateId() -> isAppropriateId
    java.lang.Class getPrimaryClass() -> getPrimaryClass
    java.lang.reflect.Method getMillisMethod() -> getMillisMethod
    java.lang.reflect.Constructor getConstructor() -> getConstructor
    java.lang.Class getDateTimeClass() -> getDateTimeClass
com.j256.ormlite.field.types.DateType -> com.j256.ormlite.field.types.DateType:
    com.j256.ormlite.field.types.DateType singleTon -> singleTon
    com.j256.ormlite.field.types.DateType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    boolean isArgumentHolderRequired() -> isArgumentHolderRequired
    com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig getDefaultDateFormatConfig() -> getDefaultDateFormatConfig
com.j256.ormlite.field.types.DoubleObjectType -> com.j256.ormlite.field.types.DoubleObjectType:
    com.j256.ormlite.field.types.DoubleObjectType singleTon -> singleTon
    com.j256.ormlite.field.types.DoubleObjectType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    boolean isEscapedValue() -> isEscapedValue
com.j256.ormlite.field.types.DoubleType -> com.j256.ormlite.field.types.DoubleType:
    com.j256.ormlite.field.types.DoubleType singleTon -> singleTon
    com.j256.ormlite.field.types.DoubleType getSingleton() -> getSingleton
    boolean isPrimitive() -> isPrimitive
    com.j256.ormlite.field.types.DoubleObjectType getSingleton() -> getSingleton
com.j256.ormlite.field.types.EnumIntegerType -> com.j256.ormlite.field.types.EnumIntegerType:
    com.j256.ormlite.field.types.EnumIntegerType singleTon -> singleTon
    com.j256.ormlite.field.types.EnumIntegerType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    boolean isEscapedValue() -> isEscapedValue
    java.lang.Object makeConfigObject(com.j256.ormlite.field.FieldType) -> makeConfigObject
    java.lang.Object resultStringToJava(com.j256.ormlite.field.FieldType,java.lang.String,int) -> resultStringToJava
    java.lang.Class getPrimaryClass() -> getPrimaryClass
com.j256.ormlite.field.types.EnumStringType -> com.j256.ormlite.field.types.EnumStringType:
    int DEFAULT_WIDTH -> DEFAULT_WIDTH
    com.j256.ormlite.field.types.EnumStringType singleTon -> singleTon
    com.j256.ormlite.field.types.EnumStringType getSingleton() -> getSingleton
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    java.lang.Object makeConfigObject(com.j256.ormlite.field.FieldType) -> makeConfigObject
    int getDefaultWidth() -> getDefaultWidth
    java.lang.Object resultStringToJava(com.j256.ormlite.field.FieldType,java.lang.String,int) -> resultStringToJava
com.j256.ormlite.field.types.FloatObjectType -> com.j256.ormlite.field.types.FloatObjectType:
    com.j256.ormlite.field.types.FloatObjectType singleTon -> singleTon
    com.j256.ormlite.field.types.FloatObjectType getSingleton() -> getSingleton
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    boolean isEscapedValue() -> isEscapedValue
com.j256.ormlite.field.types.FloatType -> com.j256.ormlite.field.types.FloatType:
    com.j256.ormlite.field.types.FloatType singleTon -> singleTon
    com.j256.ormlite.field.types.FloatType getSingleton() -> getSingleton
    boolean isPrimitive() -> isPrimitive
    com.j256.ormlite.field.types.FloatObjectType getSingleton() -> getSingleton
com.j256.ormlite.field.types.IntType -> com.j256.ormlite.field.types.IntType:
    com.j256.ormlite.field.types.IntType singleTon -> singleTon
    com.j256.ormlite.field.types.IntType getSingleton() -> getSingleton
    boolean isPrimitive() -> isPrimitive
    com.j256.ormlite.field.types.IntegerObjectType getSingleton() -> getSingleton
com.j256.ormlite.field.types.IntegerObjectType -> com.j256.ormlite.field.types.IntegerObjectType:
    com.j256.ormlite.field.types.IntegerObjectType singleTon -> singleTon
    com.j256.ormlite.field.types.IntegerObjectType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    java.lang.Object convertIdNumber(java.lang.Number) -> convertIdNumber
    boolean isEscapedValue() -> isEscapedValue
    boolean isValidGeneratedType() -> isValidGeneratedType
    boolean isValidForVersion() -> isValidForVersion
    java.lang.Object moveToNextValue(java.lang.Object) -> moveToNextValue
com.j256.ormlite.field.types.LongObjectType -> com.j256.ormlite.field.types.LongObjectType:
    com.j256.ormlite.field.types.LongObjectType singleTon -> singleTon
    com.j256.ormlite.field.types.LongObjectType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    java.lang.Object convertIdNumber(java.lang.Number) -> convertIdNumber
    boolean isEscapedValue() -> isEscapedValue
    boolean isValidGeneratedType() -> isValidGeneratedType
    boolean isValidForVersion() -> isValidForVersion
    java.lang.Object moveToNextValue(java.lang.Object) -> moveToNextValue
com.j256.ormlite.field.types.LongStringType -> com.j256.ormlite.field.types.LongStringType:
    com.j256.ormlite.field.types.LongStringType singleTon -> singleTon
    com.j256.ormlite.field.types.LongStringType getSingleton() -> getSingleton
    boolean isAppropriateId() -> isAppropriateId
    int getDefaultWidth() -> getDefaultWidth
    java.lang.Class getPrimaryClass() -> getPrimaryClass
    com.j256.ormlite.field.types.StringType getSingleton() -> getSingleton
com.j256.ormlite.field.types.LongType -> com.j256.ormlite.field.types.LongType:
    com.j256.ormlite.field.types.LongType singleTon -> singleTon
    com.j256.ormlite.field.types.LongType getSingleton() -> getSingleton
    boolean isPrimitive() -> isPrimitive
    com.j256.ormlite.field.types.LongObjectType getSingleton() -> getSingleton
com.j256.ormlite.field.types.SerializableType -> com.j256.ormlite.field.types.SerializableType:
    com.j256.ormlite.field.types.SerializableType singleTon -> singleTon
    com.j256.ormlite.field.types.SerializableType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    boolean isValidForField(java.lang.reflect.Field) -> isValidForField
    boolean isStreamType() -> isStreamType
    boolean isComparable() -> isComparable
    boolean isAppropriateId() -> isAppropriateId
    boolean isArgumentHolderRequired() -> isArgumentHolderRequired
    java.lang.Object resultStringToJava(com.j256.ormlite.field.FieldType,java.lang.String,int) -> resultStringToJava
    java.lang.Class getPrimaryClass() -> getPrimaryClass
com.j256.ormlite.field.types.ShortObjectType -> com.j256.ormlite.field.types.ShortObjectType:
    com.j256.ormlite.field.types.ShortObjectType singleTon -> singleTon
    com.j256.ormlite.field.types.ShortObjectType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    boolean isEscapedValue() -> isEscapedValue
    boolean isValidForVersion() -> isValidForVersion
    java.lang.Object moveToNextValue(java.lang.Object) -> moveToNextValue
com.j256.ormlite.field.types.ShortType -> com.j256.ormlite.field.types.ShortType:
    com.j256.ormlite.field.types.ShortType singleTon -> singleTon
    com.j256.ormlite.field.types.ShortType getSingleton() -> getSingleton
    boolean isPrimitive() -> isPrimitive
    com.j256.ormlite.field.types.ShortObjectType getSingleton() -> getSingleton
com.j256.ormlite.field.types.SqlDateType -> com.j256.ormlite.field.types.SqlDateType:
    com.j256.ormlite.field.types.SqlDateType singleTon -> singleTon
    com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig sqlDateFormatConfig -> sqlDateFormatConfig
    com.j256.ormlite.field.types.SqlDateType getSingleton() -> getSingleton
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig getDefaultDateFormatConfig() -> getDefaultDateFormatConfig
    java.lang.Object resultStringToJava(com.j256.ormlite.field.FieldType,java.lang.String,int) -> resultStringToJava
    boolean isValidForField(java.lang.reflect.Field) -> isValidForField
    com.j256.ormlite.field.types.DateType getSingleton() -> getSingleton
com.j256.ormlite.field.types.StringBytesType -> com.j256.ormlite.field.types.StringBytesType:
    java.lang.String DEFAULT_STRING_BYTES_CHARSET_NAME -> DEFAULT_STRING_BYTES_CHARSET_NAME
    com.j256.ormlite.field.types.StringBytesType singleTon -> singleTon
    com.j256.ormlite.field.types.StringBytesType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    boolean isAppropriateId() -> isAppropriateId
    boolean isArgumentHolderRequired() -> isArgumentHolderRequired
    java.lang.Object resultStringToJava(com.j256.ormlite.field.FieldType,java.lang.String,int) -> resultStringToJava
    java.lang.Class getPrimaryClass() -> getPrimaryClass
    java.lang.String getCharsetName(com.j256.ormlite.field.FieldType) -> getCharsetName
com.j256.ormlite.field.types.StringType -> com.j256.ormlite.field.types.StringType:
    int DEFAULT_WIDTH -> DEFAULT_WIDTH
    com.j256.ormlite.field.types.StringType singleTon -> singleTon
    com.j256.ormlite.field.types.StringType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    int getDefaultWidth() -> getDefaultWidth
com.j256.ormlite.field.types.TimeStampStringType -> com.j256.ormlite.field.types.TimeStampStringType:
    com.j256.ormlite.field.types.TimeStampStringType singleTon -> singleTon
    com.j256.ormlite.field.types.TimeStampStringType getSingleton() -> getSingleton
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    boolean isValidForField(java.lang.reflect.Field) -> isValidForField
    java.lang.Object moveToNextValue(java.lang.Object) -> moveToNextValue
    com.j256.ormlite.field.types.DateStringType getSingleton() -> getSingleton
com.j256.ormlite.field.types.TimeStampType -> com.j256.ormlite.field.types.TimeStampType:
    com.j256.ormlite.field.types.TimeStampType singleTon -> singleTon
    com.j256.ormlite.field.types.TimeStampType getSingleton() -> getSingleton
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    boolean isValidForField(java.lang.reflect.Field) -> isValidForField
    java.lang.Object moveToNextValue(java.lang.Object) -> moveToNextValue
    com.j256.ormlite.field.types.DateType getSingleton() -> getSingleton
com.j256.ormlite.field.types.UuidType -> com.j256.ormlite.field.types.UuidType:
    int DEFAULT_WIDTH -> DEFAULT_WIDTH
    com.j256.ormlite.field.types.UuidType singleTon -> singleTon
    com.j256.ormlite.field.types.UuidType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    boolean isValidGeneratedType() -> isValidGeneratedType
    boolean isSelfGeneratedId() -> isSelfGeneratedId
    java.lang.Object generateId() -> generateId
    int getDefaultWidth() -> getDefaultWidth
com.j256.ormlite.field.types.VoidType -> com.j256.ormlite.field.types.VoidType:
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    boolean isValidForField(java.lang.reflect.Field) -> isValidForField
com.j256.ormlite.logger.LocalLog -> com.j256.ormlite.logger.LocalLog:
    java.lang.String LOCAL_LOG_LEVEL_PROPERTY -> LOCAL_LOG_LEVEL_PROPERTY
    java.lang.String LOCAL_LOG_FILE_PROPERTY -> LOCAL_LOG_FILE_PROPERTY
    java.lang.String LOCAL_LOG_PROPERTIES_FILE -> LOCAL_LOG_PROPERTIES_FILE
    com.j256.ormlite.logger.Log$Level DEFAULT_LEVEL -> DEFAULT_LEVEL
    java.lang.ThreadLocal dateFormatThreadLocal -> dateFormatThreadLocal
    java.io.PrintStream printStream -> printStream
    java.util.List classLevels -> classLevels
    java.lang.String className -> className
    com.j256.ormlite.logger.Log$Level level -> level
    void openLogFile(java.lang.String) -> openLogFile
    boolean isLevelEnabled(com.j256.ormlite.logger.Log$Level) -> isLevelEnabled
    void log(com.j256.ormlite.logger.Log$Level,java.lang.String) -> log
    void log(com.j256.ormlite.logger.Log$Level,java.lang.String,java.lang.Throwable) -> log
    void flush() -> flush
    java.util.List readLevelResourceFile(java.io.InputStream) -> readLevelResourceFile
    java.util.List configureClassLevels(java.io.InputStream) -> configureClassLevels
    void printMessage(com.j256.ormlite.logger.Log$Level,java.lang.String,java.lang.Throwable) -> printMessage
com.j256.ormlite.logger.LocalLog$1 -> com.j256.ormlite.logger.LocalLog$1:
    java.text.DateFormat initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.j256.ormlite.logger.LocalLog$PatternLevel -> com.j256.ormlite.logger.LocalLog$PatternLevel:
    java.util.regex.Pattern pattern -> pattern
    com.j256.ormlite.logger.Log$Level level -> level
com.j256.ormlite.logger.Log -> com.j256.ormlite.logger.Log:
    boolean isLevelEnabled(com.j256.ormlite.logger.Log$Level) -> isLevelEnabled
    void log(com.j256.ormlite.logger.Log$Level,java.lang.String) -> log
    void log(com.j256.ormlite.logger.Log$Level,java.lang.String,java.lang.Throwable) -> log
com.j256.ormlite.logger.Log$Level -> com.j256.ormlite.logger.Log$Level:
    com.j256.ormlite.logger.Log$Level TRACE -> TRACE
    com.j256.ormlite.logger.Log$Level DEBUG -> DEBUG
    com.j256.ormlite.logger.Log$Level INFO -> INFO
    com.j256.ormlite.logger.Log$Level WARNING -> WARNING
    com.j256.ormlite.logger.Log$Level ERROR -> ERROR
    com.j256.ormlite.logger.Log$Level FATAL -> FATAL
    int level -> level
    com.j256.ormlite.logger.Log$Level[] ENUM$VALUES -> ENUM$VALUES
    boolean isEnabled(com.j256.ormlite.logger.Log$Level) -> isEnabled
    com.j256.ormlite.logger.Log$Level[] values() -> values
    com.j256.ormlite.logger.Log$Level valueOf(java.lang.String) -> valueOf
com.j256.ormlite.logger.Logger -> com.j256.ormlite.logger.Logger:
    java.lang.String ARG_STRING -> ARG_STRING
    java.lang.Object UNKNOWN_ARG -> UNKNOWN_ARG
    int DEFAULT_FULL_MESSAGE_LENGTH -> DEFAULT_FULL_MESSAGE_LENGTH
    com.j256.ormlite.logger.Log log -> log
    boolean isLevelEnabled(com.j256.ormlite.logger.Log$Level) -> isLevelEnabled
    void trace(java.lang.String) -> trace
    void trace(java.lang.String,java.lang.Object) -> trace
    void trace(java.lang.String,java.lang.Object,java.lang.Object) -> trace
    void trace(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> trace
    void trace(java.lang.String,java.lang.Object[]) -> trace
    void trace(java.lang.Throwable,java.lang.String) -> trace
    void trace(java.lang.Throwable,java.lang.String,java.lang.Object) -> trace
    void trace(java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object) -> trace
    void trace(java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> trace
    void trace(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> trace
    void debug(java.lang.String) -> debug
    void debug(java.lang.String,java.lang.Object) -> debug
    void debug(java.lang.String,java.lang.Object,java.lang.Object) -> debug
    void debug(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> debug
    void debug(java.lang.String,java.lang.Object[]) -> debug
    void debug(java.lang.Throwable,java.lang.String) -> debug
    void debug(java.lang.Throwable,java.lang.String,java.lang.Object) -> debug
    void debug(java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object) -> debug
    void debug(java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> debug
    void debug(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> debug
    void info(java.lang.String) -> info
    void info(java.lang.String,java.lang.Object) -> info
    void info(java.lang.String,java.lang.Object,java.lang.Object) -> info
    void info(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> info
    void info(java.lang.String,java.lang.Object[]) -> info
    void info(java.lang.Throwable,java.lang.String) -> info
    void info(java.lang.Throwable,java.lang.String,java.lang.Object) -> info
    void info(java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object) -> info
    void info(java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> info
    void info(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> info
    void warn(java.lang.String) -> warn
    void warn(java.lang.String,java.lang.Object) -> warn
    void warn(java.lang.String,java.lang.Object,java.lang.Object) -> warn
    void warn(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> warn
    void warn(java.lang.String,java.lang.Object[]) -> warn
    void warn(java.lang.Throwable,java.lang.String) -> warn
    void warn(java.lang.Throwable,java.lang.String,java.lang.Object) -> warn
    void warn(java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object) -> warn
    void warn(java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> warn
    void warn(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> warn
    void error(java.lang.String) -> error
    void error(java.lang.String,java.lang.Object) -> error
    void error(java.lang.String,java.lang.Object,java.lang.Object) -> error
    void error(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> error
    void error(java.lang.String,java.lang.Object[]) -> error
    void error(java.lang.Throwable,java.lang.String) -> error
    void error(java.lang.Throwable,java.lang.String,java.lang.Object) -> error
    void error(java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object) -> error
    void error(java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> error
    void error(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> error
    void fatal(java.lang.String) -> fatal
    void fatal(java.lang.String,java.lang.Object) -> fatal
    void fatal(java.lang.String,java.lang.Object,java.lang.Object) -> fatal
    void fatal(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> fatal
    void fatal(java.lang.String,java.lang.Object[]) -> fatal
    void fatal(java.lang.Throwable,java.lang.String) -> fatal
    void fatal(java.lang.Throwable,java.lang.String,java.lang.Object) -> fatal
    void fatal(java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object) -> fatal
    void fatal(java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> fatal
    void fatal(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> fatal
    void log(com.j256.ormlite.logger.Log$Level,java.lang.String) -> log
    void log(com.j256.ormlite.logger.Log$Level,java.lang.String,java.lang.Object) -> log
    void log(com.j256.ormlite.logger.Log$Level,java.lang.String,java.lang.Object,java.lang.Object) -> log
    void log(com.j256.ormlite.logger.Log$Level,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> log
    void log(com.j256.ormlite.logger.Log$Level,java.lang.String,java.lang.Object[]) -> log
    void log(com.j256.ormlite.logger.Log$Level,java.lang.Throwable,java.lang.String) -> log
    void log(com.j256.ormlite.logger.Log$Level,java.lang.Throwable,java.lang.String,java.lang.Object) -> log
    void log(com.j256.ormlite.logger.Log$Level,java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object) -> log
    void log(com.j256.ormlite.logger.Log$Level,java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> log
    void log(com.j256.ormlite.logger.Log$Level,java.lang.Throwable,java.lang.String,java.lang.Object[]) -> log
    void logIfEnabled(com.j256.ormlite.logger.Log$Level,java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object[]) -> logIfEnabled
    java.lang.String buildFullMessage(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object[]) -> buildFullMessage
    void appendArg(java.lang.StringBuilder,java.lang.Object) -> appendArg
com.j256.ormlite.logger.LoggerFactory -> com.j256.ormlite.logger.LoggerFactory:
    java.lang.String LOG_TYPE_SYSTEM_PROPERTY -> LOG_TYPE_SYSTEM_PROPERTY
    com.j256.ormlite.logger.LoggerFactory$LogType logType -> logType
    com.j256.ormlite.logger.Logger getLogger(java.lang.Class) -> getLogger
    com.j256.ormlite.logger.Logger getLogger(java.lang.String) -> getLogger
    java.lang.String getSimpleClassName(java.lang.String) -> getSimpleClassName
    com.j256.ormlite.logger.LoggerFactory$LogType findLogType() -> findLogType
com.j256.ormlite.logger.LoggerFactory$LogType -> com.j256.ormlite.logger.LoggerFactory$LogType:
    com.j256.ormlite.logger.LoggerFactory$LogType SLF4J -> SLF4J
    com.j256.ormlite.logger.LoggerFactory$LogType ANDROID -> ANDROID
    com.j256.ormlite.logger.LoggerFactory$LogType COMMONS_LOGGING -> COMMONS_LOGGING
    com.j256.ormlite.logger.LoggerFactory$LogType LOG4J2 -> LOG4J2
    com.j256.ormlite.logger.LoggerFactory$LogType LOG4J -> LOG4J
    com.j256.ormlite.logger.LoggerFactory$LogType LOCAL -> LOCAL
    java.lang.String detectClassName -> detectClassName
    java.lang.String logClassName -> logClassName
    com.j256.ormlite.logger.LoggerFactory$LogType[] ENUM$VALUES -> ENUM$VALUES
    com.j256.ormlite.logger.Log createLog(java.lang.String) -> createLog
    boolean isAvailable() -> isAvailable
    com.j256.ormlite.logger.Log createLogFromClassName(java.lang.String) -> createLogFromClassName
    boolean isAvailableTestClass() -> isAvailableTestClass
    com.j256.ormlite.logger.LoggerFactory$LogType[] values() -> values
    com.j256.ormlite.logger.LoggerFactory$LogType valueOf(java.lang.String) -> valueOf
com.j256.ormlite.logger.LoggerFactory$LogType$1 -> com.j256.ormlite.logger.LoggerFactory$LogType$1:
    com.j256.ormlite.logger.Log createLog(java.lang.String) -> createLog
    boolean isAvailable() -> isAvailable
com.j256.ormlite.logger.Slf4jLoggingLog -> com.j256.ormlite.logger.Slf4jLoggingLog:
    org.slf4j.Logger logger -> logger
    int[] $SWITCH_TABLE$com$j256$ormlite$logger$Log$Level -> $SWITCH_TABLE$com$j256$ormlite$logger$Log$Level
    boolean isLevelEnabled(com.j256.ormlite.logger.Log$Level) -> isLevelEnabled
    void log(com.j256.ormlite.logger.Log$Level,java.lang.String) -> log
    void log(com.j256.ormlite.logger.Log$Level,java.lang.String,java.lang.Throwable) -> log
    int[] $SWITCH_TABLE$com$j256$ormlite$logger$Log$Level() -> $SWITCH_TABLE$com$j256$ormlite$logger$Log$Level
com.j256.ormlite.misc.BaseDaoEnabled -> com.j256.ormlite.misc.BaseDaoEnabled:
    com.j256.ormlite.dao.Dao dao -> dao
    int create() -> create
    int refresh() -> refresh
    int update() -> update
    int updateId(java.lang.Object) -> updateId
    int delete() -> delete
    java.lang.String objectToString() -> objectToString
    java.lang.Object extractId() -> extractId
    boolean objectsEqual(java.lang.Object) -> objectsEqual
    void setDao(com.j256.ormlite.dao.Dao) -> setDao
    com.j256.ormlite.dao.Dao getDao() -> getDao
    void checkForDao() -> checkForDao
com.j256.ormlite.misc.IOUtils -> com.j256.ormlite.misc.IOUtils:
    void closeQuietly(java.io.Closeable) -> closeQuietly
    void closeThrowSqlException(java.io.Closeable,java.lang.String) -> closeThrowSqlException
com.j256.ormlite.misc.JavaxPersistenceConfigurer -> com.j256.ormlite.misc.JavaxPersistenceConfigurer:
    com.j256.ormlite.field.DatabaseFieldConfig createFieldConfig(com.j256.ormlite.db.DatabaseType,java.lang.reflect.Field) -> createFieldConfig
    java.lang.String getEntityName(java.lang.Class) -> getEntityName
com.j256.ormlite.misc.JavaxPersistenceImpl -> com.j256.ormlite.misc.JavaxPersistenceImpl:
    com.j256.ormlite.field.DatabaseFieldConfig createFieldConfig(com.j256.ormlite.db.DatabaseType,java.lang.reflect.Field) -> createFieldConfig
    java.lang.String getEntityName(java.lang.Class) -> getEntityName
    boolean stringNotEmpty(java.lang.String) -> stringNotEmpty
com.j256.ormlite.misc.SqlExceptionUtil -> com.j256.ormlite.misc.SqlExceptionUtil:
    java.sql.SQLException create(java.lang.String,java.lang.Throwable) -> create
com.j256.ormlite.misc.TransactionManager -> com.j256.ormlite.misc.TransactionManager:
    com.j256.ormlite.logger.Logger logger -> logger
    java.lang.String SAVE_POINT_PREFIX -> SAVE_POINT_PREFIX
    com.j256.ormlite.support.ConnectionSource connectionSource -> connectionSource
    java.util.concurrent.atomic.AtomicInteger savePointCounter -> savePointCounter
    void initialize() -> initialize
    java.lang.Object callInTransaction(java.util.concurrent.Callable) -> callInTransaction
    java.lang.Object callInTransaction(com.j256.ormlite.support.ConnectionSource,java.util.concurrent.Callable) -> callInTransaction
    java.lang.Object callInTransaction(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.db.DatabaseType,java.util.concurrent.Callable) -> callInTransaction
    java.lang.Object callInTransaction(com.j256.ormlite.support.DatabaseConnection,boolean,com.j256.ormlite.db.DatabaseType,java.util.concurrent.Callable) -> callInTransaction
    void setConnectionSource(com.j256.ormlite.support.ConnectionSource) -> setConnectionSource
    void commit(com.j256.ormlite.support.DatabaseConnection,java.sql.Savepoint) -> commit
    void rollBack(com.j256.ormlite.support.DatabaseConnection,java.sql.Savepoint) -> rollBack
com.j256.ormlite.misc.VersionUtils -> com.j256.ormlite.misc.VersionUtils:
    java.lang.String CORE_VERSION -> CORE_VERSION
    com.j256.ormlite.logger.Logger logger -> logger
    boolean thrownOnErrors -> thrownOnErrors
    java.lang.String coreVersion -> coreVersion
    void checkCoreVersusJdbcVersions(java.lang.String) -> checkCoreVersusJdbcVersions
    void checkCoreVersusAndroidVersions(java.lang.String) -> checkCoreVersusAndroidVersions
    java.lang.String getCoreVersion() -> getCoreVersion
    void setThrownOnErrors(boolean) -> setThrownOnErrors
    void logVersionWarnings(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> logVersionWarnings
    void warning(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.Object[]) -> warning
    com.j256.ormlite.logger.Logger getLogger() -> getLogger
com.j256.ormlite.stmt.ArgumentHolder -> com.j256.ormlite.stmt.ArgumentHolder:
    java.lang.String getColumnName() -> getColumnName
    void setMetaInfo(java.lang.String) -> setMetaInfo
    void setMetaInfo(com.j256.ormlite.field.FieldType) -> setMetaInfo
    void setMetaInfo(java.lang.String,com.j256.ormlite.field.FieldType) -> setMetaInfo
    void setValue(java.lang.Object) -> setValue
    java.lang.Object getSqlArgValue() -> getSqlArgValue
    com.j256.ormlite.field.SqlType getSqlType() -> getSqlType
    com.j256.ormlite.field.FieldType getFieldType() -> getFieldType
com.j256.ormlite.stmt.BaseArgumentHolder -> com.j256.ormlite.stmt.BaseArgumentHolder:
    java.lang.String columnName -> columnName
    com.j256.ormlite.field.FieldType fieldType -> fieldType
    com.j256.ormlite.field.SqlType sqlType -> sqlType
    java.lang.Object getValue() -> getValue
    void setValue(java.lang.Object) -> setValue
    boolean isValueSet() -> isValueSet
    java.lang.String getColumnName() -> getColumnName
    void setMetaInfo(java.lang.String) -> setMetaInfo
    void setMetaInfo(com.j256.ormlite.field.FieldType) -> setMetaInfo
    void setMetaInfo(java.lang.String,com.j256.ormlite.field.FieldType) -> setMetaInfo
    java.lang.Object getSqlArgValue() -> getSqlArgValue
    com.j256.ormlite.field.FieldType getFieldType() -> getFieldType
    com.j256.ormlite.field.SqlType getSqlType() -> getSqlType
    java.lang.String toString() -> toString
com.j256.ormlite.stmt.ColumnArg -> com.j256.ormlite.stmt.ColumnArg:
    java.lang.String tableName -> tableName
    java.lang.String columnName -> columnName
    java.lang.String getTableName() -> getTableName
    java.lang.String getColumnName() -> getColumnName
com.j256.ormlite.stmt.DeleteBuilder -> com.j256.ormlite.stmt.DeleteBuilder:
    com.j256.ormlite.stmt.PreparedDelete prepare() -> prepare
    int delete() -> delete
    void clear() -> clear
    void reset() -> reset
    void appendStatementStart(java.lang.StringBuilder,java.util.List) -> appendStatementStart
    void appendStatementEnd(java.lang.StringBuilder,java.util.List) -> appendStatementEnd
com.j256.ormlite.stmt.GenericRowMapper -> com.j256.ormlite.stmt.GenericRowMapper:
    java.lang.Object mapRow(com.j256.ormlite.support.DatabaseResults) -> mapRow
com.j256.ormlite.stmt.NullArgHolder -> com.j256.ormlite.stmt.NullArgHolder:
    java.lang.String getColumnName() -> getColumnName
    void setValue(java.lang.Object) -> setValue
    void setMetaInfo(java.lang.String) -> setMetaInfo
    void setMetaInfo(com.j256.ormlite.field.FieldType) -> setMetaInfo
    void setMetaInfo(java.lang.String,com.j256.ormlite.field.FieldType) -> setMetaInfo
    java.lang.Object getSqlArgValue() -> getSqlArgValue
    com.j256.ormlite.field.SqlType getSqlType() -> getSqlType
    com.j256.ormlite.field.FieldType getFieldType() -> getFieldType
com.j256.ormlite.stmt.PreparedDelete -> com.j256.ormlite.stmt.PreparedDelete:
com.j256.ormlite.stmt.PreparedQuery -> com.j256.ormlite.stmt.PreparedQuery:
com.j256.ormlite.stmt.PreparedStmt -> com.j256.ormlite.stmt.PreparedStmt:
    com.j256.ormlite.support.CompiledStatement compile(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.stmt.StatementBuilder$StatementType) -> compile
    com.j256.ormlite.support.CompiledStatement compile(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.stmt.StatementBuilder$StatementType,int) -> compile
    java.lang.String getStatement() -> getStatement
    com.j256.ormlite.stmt.StatementBuilder$StatementType getType() -> getType
    void setArgumentHolderValue(int,java.lang.Object) -> setArgumentHolderValue
com.j256.ormlite.stmt.PreparedUpdate -> com.j256.ormlite.stmt.PreparedUpdate:
com.j256.ormlite.stmt.QueryBuilder -> com.j256.ormlite.stmt.QueryBuilder:
    com.j256.ormlite.field.FieldType idField -> idField
    com.j256.ormlite.field.FieldType[] resultFieldTypes -> resultFieldTypes
    boolean distinct -> distinct
    boolean selectIdColumn -> selectIdColumn
    java.util.List selectList -> selectList
    java.util.List orderByList -> orderByList
    java.util.List groupByList -> groupByList
    boolean isInnerQuery -> isInnerQuery
    boolean isCountOfQuery -> isCountOfQuery
    java.lang.String having -> having
    java.lang.Long limit -> limit
    java.lang.Long offset -> offset
    java.util.List joinList -> joinList
    void enableInnerQuery() -> enableInnerQuery
    int getSelectColumnCount() -> getSelectColumnCount
    java.lang.String getSelectColumnsAsString() -> getSelectColumnsAsString
    com.j256.ormlite.stmt.PreparedQuery prepare() -> prepare
    com.j256.ormlite.stmt.QueryBuilder selectColumns(java.lang.String[]) -> selectColumns
    com.j256.ormlite.stmt.QueryBuilder selectColumns(java.lang.Iterable) -> selectColumns
    com.j256.ormlite.stmt.QueryBuilder selectRaw(java.lang.String[]) -> selectRaw
    com.j256.ormlite.stmt.QueryBuilder groupBy(java.lang.String) -> groupBy
    com.j256.ormlite.stmt.QueryBuilder groupByRaw(java.lang.String) -> groupByRaw
    com.j256.ormlite.stmt.QueryBuilder orderBy(java.lang.String,boolean) -> orderBy
    com.j256.ormlite.stmt.QueryBuilder orderByRaw(java.lang.String) -> orderByRaw
    com.j256.ormlite.stmt.QueryBuilder orderByRaw(java.lang.String,com.j256.ormlite.stmt.ArgumentHolder[]) -> orderByRaw
    com.j256.ormlite.stmt.QueryBuilder distinct() -> distinct
    com.j256.ormlite.stmt.QueryBuilder limit(int) -> limit
    com.j256.ormlite.stmt.QueryBuilder limit(java.lang.Long) -> limit
    com.j256.ormlite.stmt.QueryBuilder offset(int) -> offset
    com.j256.ormlite.stmt.QueryBuilder offset(java.lang.Long) -> offset
    com.j256.ormlite.stmt.QueryBuilder setCountOf(boolean) -> setCountOf
    com.j256.ormlite.stmt.QueryBuilder having(java.lang.String) -> having
    com.j256.ormlite.stmt.QueryBuilder join(com.j256.ormlite.stmt.QueryBuilder) -> join
    com.j256.ormlite.stmt.QueryBuilder join(com.j256.ormlite.stmt.QueryBuilder,com.j256.ormlite.stmt.QueryBuilder$JoinType,com.j256.ormlite.stmt.QueryBuilder$JoinWhereOperation) -> join
    com.j256.ormlite.stmt.QueryBuilder joinOr(com.j256.ormlite.stmt.QueryBuilder) -> joinOr
    com.j256.ormlite.stmt.QueryBuilder leftJoin(com.j256.ormlite.stmt.QueryBuilder) -> leftJoin
    com.j256.ormlite.stmt.QueryBuilder leftJoinOr(com.j256.ormlite.stmt.QueryBuilder) -> leftJoinOr
    com.j256.ormlite.stmt.QueryBuilder join(java.lang.String,java.lang.String,com.j256.ormlite.stmt.QueryBuilder) -> join
    com.j256.ormlite.stmt.QueryBuilder join(java.lang.String,java.lang.String,com.j256.ormlite.stmt.QueryBuilder,com.j256.ormlite.stmt.QueryBuilder$JoinType,com.j256.ormlite.stmt.QueryBuilder$JoinWhereOperation) -> join
    java.util.List query() -> query
    com.j256.ormlite.dao.GenericRawResults queryRaw() -> queryRaw
    java.lang.Object queryForFirst() -> queryForFirst
    java.lang.String[] queryRawFirst() -> queryRawFirst
    com.j256.ormlite.dao.CloseableIterator iterator() -> iterator
    long countOf() -> countOf
    void clear() -> clear
    void reset() -> reset
    void appendStatementStart(java.lang.StringBuilder,java.util.List) -> appendStatementStart
    com.j256.ormlite.field.FieldType[] getResultFieldTypes() -> getResultFieldTypes
    boolean appendWhereStatement(java.lang.StringBuilder,java.util.List,com.j256.ormlite.stmt.StatementBuilder$WhereOperation) -> appendWhereStatement
    void appendStatementEnd(java.lang.StringBuilder,java.util.List) -> appendStatementEnd
    boolean shouldPrependTableNameToColumns() -> shouldPrependTableNameToColumns
    void addOrderBy(com.j256.ormlite.stmt.query.OrderBy) -> addOrderBy
    void addGroupBy(com.j256.ormlite.stmt.query.ColumnNameOrRawSql) -> addGroupBy
    void setAddTableName(boolean) -> setAddTableName
    void addJoinInfo(com.j256.ormlite.stmt.QueryBuilder$JoinType,java.lang.String,java.lang.String,com.j256.ormlite.stmt.QueryBuilder,com.j256.ormlite.stmt.QueryBuilder$JoinWhereOperation) -> addJoinInfo
    void matchJoinedFieldsByName(com.j256.ormlite.stmt.QueryBuilder$JoinInfo,java.lang.String,java.lang.String,com.j256.ormlite.stmt.QueryBuilder) -> matchJoinedFieldsByName
    void matchJoinedFields(com.j256.ormlite.stmt.QueryBuilder$JoinInfo,com.j256.ormlite.stmt.QueryBuilder) -> matchJoinedFields
    void addSelectColumnToList(java.lang.String) -> addSelectColumnToList
    void addSelectToList(com.j256.ormlite.stmt.query.ColumnNameOrRawSql) -> addSelectToList
    void appendJoinSql(java.lang.StringBuilder) -> appendJoinSql
    void appendSelects(java.lang.StringBuilder) -> appendSelects
    void appendFieldColumnName(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,java.util.List) -> appendFieldColumnName
    void appendLimit(java.lang.StringBuilder) -> appendLimit
    void appendOffset(java.lang.StringBuilder) -> appendOffset
    void appendGroupBys(java.lang.StringBuilder) -> appendGroupBys
    boolean hasGroupStuff() -> hasGroupStuff
    void appendGroupBys(java.lang.StringBuilder,boolean) -> appendGroupBys
    void appendOrderBys(java.lang.StringBuilder,java.util.List) -> appendOrderBys
    boolean hasOrderStuff() -> hasOrderStuff
    void appendOrderBys(java.lang.StringBuilder,boolean,java.util.List) -> appendOrderBys
    void appendColumnName(java.lang.StringBuilder,java.lang.String) -> appendColumnName
    void appendHaving(java.lang.StringBuilder) -> appendHaving
com.j256.ormlite.stmt.QueryBuilder$InternalQueryBuilderWrapper -> com.j256.ormlite.stmt.QueryBuilder$InternalQueryBuilderWrapper:
    com.j256.ormlite.stmt.QueryBuilder queryBuilder -> queryBuilder
    void appendStatementString(java.lang.StringBuilder,java.util.List) -> appendStatementString
    com.j256.ormlite.field.FieldType[] getResultFieldTypes() -> getResultFieldTypes
com.j256.ormlite.stmt.QueryBuilder$JoinInfo -> com.j256.ormlite.stmt.QueryBuilder$JoinInfo:
    com.j256.ormlite.stmt.QueryBuilder$JoinType type -> type
    com.j256.ormlite.stmt.QueryBuilder queryBuilder -> queryBuilder
    com.j256.ormlite.field.FieldType localField -> localField
    com.j256.ormlite.field.FieldType remoteField -> remoteField
    com.j256.ormlite.stmt.QueryBuilder$JoinWhereOperation operation -> operation
    com.j256.ormlite.stmt.QueryBuilder this$0 -> this$0
com.j256.ormlite.stmt.QueryBuilder$JoinType -> com.j256.ormlite.stmt.QueryBuilder$JoinType:
    com.j256.ormlite.stmt.QueryBuilder$JoinType INNER -> INNER
    com.j256.ormlite.stmt.QueryBuilder$JoinType LEFT -> LEFT
    java.lang.String sql -> sql
    com.j256.ormlite.stmt.QueryBuilder$JoinType[] ENUM$VALUES -> ENUM$VALUES
    com.j256.ormlite.stmt.QueryBuilder$JoinType[] values() -> values
    com.j256.ormlite.stmt.QueryBuilder$JoinType valueOf(java.lang.String) -> valueOf
    java.lang.String access$2(com.j256.ormlite.stmt.QueryBuilder$JoinType) -> access$2
com.j256.ormlite.stmt.QueryBuilder$JoinWhereOperation -> com.j256.ormlite.stmt.QueryBuilder$JoinWhereOperation:
    com.j256.ormlite.stmt.QueryBuilder$JoinWhereOperation AND -> AND
    com.j256.ormlite.stmt.QueryBuilder$JoinWhereOperation OR -> OR
    com.j256.ormlite.stmt.StatementBuilder$WhereOperation whereOperation -> whereOperation
    com.j256.ormlite.stmt.QueryBuilder$JoinWhereOperation[] ENUM$VALUES -> ENUM$VALUES
    com.j256.ormlite.stmt.QueryBuilder$JoinWhereOperation[] values() -> values
    com.j256.ormlite.stmt.QueryBuilder$JoinWhereOperation valueOf(java.lang.String) -> valueOf
    com.j256.ormlite.stmt.StatementBuilder$WhereOperation access$2(com.j256.ormlite.stmt.QueryBuilder$JoinWhereOperation) -> access$2
com.j256.ormlite.stmt.RawResultsImpl -> com.j256.ormlite.stmt.RawResultsImpl:
    com.j256.ormlite.stmt.SelectIterator iterator -> iterator
    java.lang.String[] columnNames -> columnNames
    int getNumberColumns() -> getNumberColumns
    java.lang.String[] getColumnNames() -> getColumnNames
    java.util.List getResults() -> getResults
    java.lang.Object getFirstResult() -> getFirstResult
    com.j256.ormlite.dao.CloseableIterator iterator() -> iterator
    com.j256.ormlite.dao.CloseableIterator closeableIterator() -> closeableIterator
    void close() -> close
    java.util.Iterator iterator() -> iterator
com.j256.ormlite.stmt.RawRowMapperImpl -> com.j256.ormlite.stmt.RawRowMapperImpl:
    com.j256.ormlite.table.TableInfo tableInfo -> tableInfo
    java.lang.Object mapRow(java.lang.String[],java.lang.String[]) -> mapRow
com.j256.ormlite.stmt.SelectArg -> com.j256.ormlite.stmt.SelectArg:
    boolean hasBeenSet -> hasBeenSet
    java.lang.Object value -> value
    java.lang.Object getValue() -> getValue
    void setValue(java.lang.Object) -> setValue
    boolean isValueSet() -> isValueSet
com.j256.ormlite.stmt.SelectIterator -> com.j256.ormlite.stmt.SelectIterator:
    com.j256.ormlite.logger.Logger logger -> logger
    java.lang.Class dataClass -> dataClass
    com.j256.ormlite.dao.Dao classDao -> classDao
    com.j256.ormlite.support.ConnectionSource connectionSource -> connectionSource
    com.j256.ormlite.support.DatabaseConnection connection -> connection
    com.j256.ormlite.support.CompiledStatement compiledStmt -> compiledStmt
    com.j256.ormlite.support.DatabaseResults results -> results
    com.j256.ormlite.stmt.GenericRowMapper rowMapper -> rowMapper
    java.lang.String statement -> statement
    boolean first -> first
    boolean closed -> closed
    boolean alreadyMoved -> alreadyMoved
    java.lang.Object last -> last
    int rowC -> rowC
    boolean hasNextThrow() -> hasNextThrow
    boolean hasNext() -> hasNext
    java.lang.Object first() -> first
    java.lang.Object previous() -> previous
    java.lang.Object current() -> current
    java.lang.Object nextThrow() -> nextThrow
    java.lang.Object next() -> next
    java.lang.Object moveRelative(int) -> moveRelative
    void removeThrow() -> removeThrow
    void remove() -> remove
    void close() -> close
    void closeQuietly() -> closeQuietly
    com.j256.ormlite.support.DatabaseResults getRawResults() -> getRawResults
    void moveToNext() -> moveToNext
    java.lang.Object getCurrent() -> getCurrent
com.j256.ormlite.stmt.StatementBuilder -> com.j256.ormlite.stmt.StatementBuilder:
    com.j256.ormlite.logger.Logger logger -> logger
    com.j256.ormlite.table.TableInfo tableInfo -> tableInfo
    java.lang.String tableName -> tableName
    com.j256.ormlite.db.DatabaseType databaseType -> databaseType
    com.j256.ormlite.dao.Dao dao -> dao
    com.j256.ormlite.stmt.StatementBuilder$StatementType type -> type
    boolean addTableName -> addTableName
    com.j256.ormlite.stmt.Where where -> where
    com.j256.ormlite.stmt.Where where() -> where
    void setWhere(com.j256.ormlite.stmt.Where) -> setWhere
    com.j256.ormlite.stmt.mapped.MappedPreparedStmt prepareStatement(java.lang.Long) -> prepareStatement
    java.lang.String prepareStatementString() -> prepareStatementString
    com.j256.ormlite.stmt.StatementBuilder$StatementInfo prepareStatementInfo() -> prepareStatementInfo
    void clear() -> clear
    void reset() -> reset
    java.lang.String buildStatementString(java.util.List) -> buildStatementString
    void appendStatementString(java.lang.StringBuilder,java.util.List) -> appendStatementString
    void appendStatementStart(java.lang.StringBuilder,java.util.List) -> appendStatementStart
    boolean appendWhereStatement(java.lang.StringBuilder,java.util.List,com.j256.ormlite.stmt.StatementBuilder$WhereOperation) -> appendWhereStatement
    void appendStatementEnd(java.lang.StringBuilder,java.util.List) -> appendStatementEnd
    boolean shouldPrependTableNameToColumns() -> shouldPrependTableNameToColumns
    com.j256.ormlite.field.FieldType[] getResultFieldTypes() -> getResultFieldTypes
    com.j256.ormlite.field.FieldType verifyColumnName(java.lang.String) -> verifyColumnName
    com.j256.ormlite.stmt.StatementBuilder$StatementType getType() -> getType
com.j256.ormlite.stmt.StatementBuilder$StatementInfo -> com.j256.ormlite.stmt.StatementBuilder$StatementInfo:
    java.lang.String statement -> statement
    java.util.List argList -> argList
    java.lang.String getStatement() -> getStatement
    java.util.List getArgList() -> getArgList
com.j256.ormlite.stmt.StatementBuilder$StatementType -> com.j256.ormlite.stmt.StatementBuilder$StatementType:
    com.j256.ormlite.stmt.StatementBuilder$StatementType SELECT -> SELECT
    com.j256.ormlite.stmt.StatementBuilder$StatementType SELECT_LONG -> SELECT_LONG
    com.j256.ormlite.stmt.StatementBuilder$StatementType SELECT_RAW -> SELECT_RAW
    com.j256.ormlite.stmt.StatementBuilder$StatementType UPDATE -> UPDATE
    com.j256.ormlite.stmt.StatementBuilder$StatementType DELETE -> DELETE
    com.j256.ormlite.stmt.StatementBuilder$StatementType EXECUTE -> EXECUTE
    boolean okForStatementBuilder -> okForStatementBuilder
    boolean okForQuery -> okForQuery
    boolean okForUpdate -> okForUpdate
    boolean okForExecute -> okForExecute
    com.j256.ormlite.stmt.StatementBuilder$StatementType[] ENUM$VALUES -> ENUM$VALUES
    boolean isOkForStatementBuilder() -> isOkForStatementBuilder
    boolean isOkForQuery() -> isOkForQuery
    boolean isOkForUpdate() -> isOkForUpdate
    boolean isOkForExecute() -> isOkForExecute
    com.j256.ormlite.stmt.StatementBuilder$StatementType[] values() -> values
    com.j256.ormlite.stmt.StatementBuilder$StatementType valueOf(java.lang.String) -> valueOf
com.j256.ormlite.stmt.StatementBuilder$WhereOperation -> com.j256.ormlite.stmt.StatementBuilder$WhereOperation:
    com.j256.ormlite.stmt.StatementBuilder$WhereOperation FIRST -> FIRST
    com.j256.ormlite.stmt.StatementBuilder$WhereOperation AND -> AND
    com.j256.ormlite.stmt.StatementBuilder$WhereOperation OR -> OR
    java.lang.String before -> before
    java.lang.String after -> after
    com.j256.ormlite.stmt.StatementBuilder$WhereOperation[] ENUM$VALUES -> ENUM$VALUES
    void appendBefore(java.lang.StringBuilder) -> appendBefore
    void appendAfter(java.lang.StringBuilder) -> appendAfter
    com.j256.ormlite.stmt.StatementBuilder$WhereOperation[] values() -> values
    com.j256.ormlite.stmt.StatementBuilder$WhereOperation valueOf(java.lang.String) -> valueOf
com.j256.ormlite.stmt.StatementExecutor -> com.j256.ormlite.stmt.StatementExecutor:
    com.j256.ormlite.logger.Logger logger -> logger
    com.j256.ormlite.field.FieldType[] noFieldTypes -> noFieldTypes
    com.j256.ormlite.db.DatabaseType databaseType -> databaseType
    com.j256.ormlite.table.TableInfo tableInfo -> tableInfo
    com.j256.ormlite.dao.Dao dao -> dao
    com.j256.ormlite.stmt.mapped.MappedQueryForId mappedQueryForId -> mappedQueryForId
    com.j256.ormlite.stmt.PreparedQuery preparedQueryForAll -> preparedQueryForAll
    com.j256.ormlite.stmt.mapped.MappedCreate mappedInsert -> mappedInsert
    com.j256.ormlite.stmt.mapped.MappedUpdate mappedUpdate -> mappedUpdate
    com.j256.ormlite.stmt.mapped.MappedUpdateId mappedUpdateId -> mappedUpdateId
    com.j256.ormlite.stmt.mapped.MappedDelete mappedDelete -> mappedDelete
    com.j256.ormlite.stmt.mapped.MappedRefresh mappedRefresh -> mappedRefresh
    java.lang.String countStarQuery -> countStarQuery
    java.lang.String ifExistsQuery -> ifExistsQuery
    com.j256.ormlite.field.FieldType[] ifExistsFieldTypes -> ifExistsFieldTypes
    com.j256.ormlite.dao.RawRowMapper rawRowMapper -> rawRowMapper
    java.lang.ThreadLocal localIsInBatchMode -> localIsInBatchMode
    java.lang.Object queryForId(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> queryForId
    java.lang.Object queryForFirst(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.stmt.PreparedStmt,com.j256.ormlite.dao.ObjectCache) -> queryForFirst
    java.util.List queryForAll(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.dao.ObjectCache) -> queryForAll
    long queryForCountStar(com.j256.ormlite.support.DatabaseConnection) -> queryForCountStar
    long queryForLong(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.stmt.PreparedStmt) -> queryForLong
    long queryForLong(com.j256.ormlite.support.DatabaseConnection,java.lang.String,java.lang.String[]) -> queryForLong
    java.util.List query(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.stmt.PreparedStmt,com.j256.ormlite.dao.ObjectCache) -> query
    com.j256.ormlite.stmt.SelectIterator buildIterator(com.j256.ormlite.dao.BaseDaoImpl,com.j256.ormlite.support.ConnectionSource,int,com.j256.ormlite.dao.ObjectCache) -> buildIterator
    com.j256.ormlite.stmt.GenericRowMapper getSelectStarRowMapper() -> getSelectStarRowMapper
    com.j256.ormlite.dao.RawRowMapper getRawRowMapper() -> getRawRowMapper
    com.j256.ormlite.stmt.SelectIterator buildIterator(com.j256.ormlite.dao.BaseDaoImpl,com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.stmt.PreparedStmt,com.j256.ormlite.dao.ObjectCache,int) -> buildIterator
    com.j256.ormlite.dao.GenericRawResults queryRaw(com.j256.ormlite.support.ConnectionSource,java.lang.String,java.lang.String[],com.j256.ormlite.dao.ObjectCache) -> queryRaw
    com.j256.ormlite.dao.GenericRawResults queryRaw(com.j256.ormlite.support.ConnectionSource,java.lang.String,com.j256.ormlite.dao.RawRowMapper,java.lang.String[],com.j256.ormlite.dao.ObjectCache) -> queryRaw
    com.j256.ormlite.dao.GenericRawResults queryRaw(com.j256.ormlite.support.ConnectionSource,java.lang.String,com.j256.ormlite.field.DataType[],com.j256.ormlite.dao.RawRowObjectMapper,java.lang.String[],com.j256.ormlite.dao.ObjectCache) -> queryRaw
    com.j256.ormlite.dao.GenericRawResults queryRaw(com.j256.ormlite.support.ConnectionSource,java.lang.String,com.j256.ormlite.field.DataType[],java.lang.String[],com.j256.ormlite.dao.ObjectCache) -> queryRaw
    int updateRaw(com.j256.ormlite.support.DatabaseConnection,java.lang.String,java.lang.String[]) -> updateRaw
    int executeRawNoArgs(com.j256.ormlite.support.DatabaseConnection,java.lang.String) -> executeRawNoArgs
    int executeRaw(com.j256.ormlite.support.DatabaseConnection,java.lang.String,java.lang.String[]) -> executeRaw
    int create(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> create
    int update(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> update
    int updateId(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> updateId
    int update(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.stmt.PreparedUpdate) -> update
    int refresh(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> refresh
    int delete(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> delete
    int deleteById(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> deleteById
    int deleteObjects(com.j256.ormlite.support.DatabaseConnection,java.util.Collection,com.j256.ormlite.dao.ObjectCache) -> deleteObjects
    int deleteIds(com.j256.ormlite.support.DatabaseConnection,java.util.Collection,com.j256.ormlite.dao.ObjectCache) -> deleteIds
    int delete(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.stmt.PreparedDelete) -> delete
    java.lang.Object callBatchTasks(com.j256.ormlite.support.DatabaseConnection,boolean,java.util.concurrent.Callable) -> callBatchTasks
    java.lang.Object doCallBatchTasks(com.j256.ormlite.support.DatabaseConnection,boolean,java.util.concurrent.Callable) -> doCallBatchTasks
    java.lang.String[] mapRow(com.j256.ormlite.support.DatabaseResults) -> mapRow
    boolean ifExists(com.j256.ormlite.support.DatabaseConnection,java.lang.Object) -> ifExists
    void assignStatementArguments(com.j256.ormlite.support.CompiledStatement,java.lang.String[]) -> assignStatementArguments
    void prepareQueryForAll() -> prepareQueryForAll
    java.lang.Object mapRow(com.j256.ormlite.support.DatabaseResults) -> mapRow
com.j256.ormlite.stmt.StatementExecutor$1 -> com.j256.ormlite.stmt.StatementExecutor$1:
    com.j256.ormlite.stmt.StatementExecutor this$0 -> this$0
    java.lang.Boolean initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.j256.ormlite.stmt.StatementExecutor$ObjectArrayRowMapper -> com.j256.ormlite.stmt.StatementExecutor$ObjectArrayRowMapper:
    com.j256.ormlite.field.DataType[] columnTypes -> columnTypes
    java.lang.Object[] mapRow(com.j256.ormlite.support.DatabaseResults) -> mapRow
    java.lang.Object mapRow(com.j256.ormlite.support.DatabaseResults) -> mapRow
com.j256.ormlite.stmt.StatementExecutor$UserRawRowMapper -> com.j256.ormlite.stmt.StatementExecutor$UserRawRowMapper:
    com.j256.ormlite.dao.RawRowMapper mapper -> mapper
    com.j256.ormlite.stmt.GenericRowMapper stringRowMapper -> stringRowMapper
    java.lang.String[] columnNames -> columnNames
    java.lang.Object mapRow(com.j256.ormlite.support.DatabaseResults) -> mapRow
    java.lang.String[] getColumnNames(com.j256.ormlite.support.DatabaseResults) -> getColumnNames
com.j256.ormlite.stmt.StatementExecutor$UserRawRowObjectMapper -> com.j256.ormlite.stmt.StatementExecutor$UserRawRowObjectMapper:
    com.j256.ormlite.dao.RawRowObjectMapper mapper -> mapper
    com.j256.ormlite.field.DataType[] columnTypes -> columnTypes
    java.lang.String[] columnNames -> columnNames
    java.lang.Object mapRow(com.j256.ormlite.support.DatabaseResults) -> mapRow
    java.lang.String[] getColumnNames(com.j256.ormlite.support.DatabaseResults) -> getColumnNames
com.j256.ormlite.stmt.ThreadLocalSelectArg -> com.j256.ormlite.stmt.ThreadLocalSelectArg:
    java.lang.ThreadLocal threadValue -> threadValue
    java.lang.Object getValue() -> getValue
    void setValue(java.lang.Object) -> setValue
    boolean isValueSet() -> isValueSet
com.j256.ormlite.stmt.ThreadLocalSelectArg$ValueWrapper -> com.j256.ormlite.stmt.ThreadLocalSelectArg$ValueWrapper:
    java.lang.Object value -> value
com.j256.ormlite.stmt.UpdateBuilder -> com.j256.ormlite.stmt.UpdateBuilder:
    java.util.List updateClauseList -> updateClauseList
    com.j256.ormlite.stmt.PreparedUpdate prepare() -> prepare
    com.j256.ormlite.stmt.UpdateBuilder updateColumnValue(java.lang.String,java.lang.Object) -> updateColumnValue
    com.j256.ormlite.stmt.UpdateBuilder updateColumnExpression(java.lang.String,java.lang.String) -> updateColumnExpression
    void escapeColumnName(java.lang.StringBuilder,java.lang.String) -> escapeColumnName
    java.lang.String escapeColumnName(java.lang.String) -> escapeColumnName
    void escapeValue(java.lang.StringBuilder,java.lang.String) -> escapeValue
    java.lang.String escapeValue(java.lang.String) -> escapeValue
    int update() -> update
    void clear() -> clear
    void reset() -> reset
    void appendStatementStart(java.lang.StringBuilder,java.util.List) -> appendStatementStart
    void appendStatementEnd(java.lang.StringBuilder,java.util.List) -> appendStatementEnd
    void addUpdateColumnToList(java.lang.String,com.j256.ormlite.stmt.query.Clause) -> addUpdateColumnToList
com.j256.ormlite.stmt.Where -> com.j256.ormlite.stmt.Where:
    int CLAUSE_STACK_START_SIZE -> CLAUSE_STACK_START_SIZE
    com.j256.ormlite.table.TableInfo tableInfo -> tableInfo
    com.j256.ormlite.stmt.StatementBuilder statementBuilder -> statementBuilder
    com.j256.ormlite.field.FieldType idFieldType -> idFieldType
    java.lang.String idColumnName -> idColumnName
    com.j256.ormlite.db.DatabaseType databaseType -> databaseType
    com.j256.ormlite.stmt.query.Clause[] clauseStack -> clauseStack
    int clauseStackLevel -> clauseStackLevel
    com.j256.ormlite.stmt.query.NeedsFutureClause needsFuture -> needsFuture
    com.j256.ormlite.stmt.Where and() -> and
    com.j256.ormlite.stmt.Where and(com.j256.ormlite.stmt.Where,com.j256.ormlite.stmt.Where,com.j256.ormlite.stmt.Where[]) -> and
    com.j256.ormlite.stmt.Where and(int) -> and
    com.j256.ormlite.stmt.Where between(java.lang.String,java.lang.Object,java.lang.Object) -> between
    com.j256.ormlite.stmt.Where eq(java.lang.String,java.lang.Object) -> eq
    com.j256.ormlite.stmt.Where ge(java.lang.String,java.lang.Object) -> ge
    com.j256.ormlite.stmt.Where gt(java.lang.String,java.lang.Object) -> gt
    com.j256.ormlite.stmt.Where in(java.lang.String,java.lang.Iterable) -> in
    com.j256.ormlite.stmt.Where notIn(java.lang.String,java.lang.Iterable) -> notIn
    com.j256.ormlite.stmt.Where in(java.lang.String,java.lang.Object[]) -> in
    com.j256.ormlite.stmt.Where notIn(java.lang.String,java.lang.Object[]) -> notIn
    com.j256.ormlite.stmt.Where in(java.lang.String,com.j256.ormlite.stmt.QueryBuilder) -> in
    com.j256.ormlite.stmt.Where notIn(java.lang.String,com.j256.ormlite.stmt.QueryBuilder) -> notIn
    com.j256.ormlite.stmt.Where exists(com.j256.ormlite.stmt.QueryBuilder) -> exists
    com.j256.ormlite.stmt.Where isNull(java.lang.String) -> isNull
    com.j256.ormlite.stmt.Where isNotNull(java.lang.String) -> isNotNull
    com.j256.ormlite.stmt.Where le(java.lang.String,java.lang.Object) -> le
    com.j256.ormlite.stmt.Where lt(java.lang.String,java.lang.Object) -> lt
    com.j256.ormlite.stmt.Where like(java.lang.String,java.lang.Object) -> like
    com.j256.ormlite.stmt.Where ne(java.lang.String,java.lang.Object) -> ne
    com.j256.ormlite.stmt.Where not() -> not
    com.j256.ormlite.stmt.Where not(com.j256.ormlite.stmt.Where) -> not
    com.j256.ormlite.stmt.Where or() -> or
    com.j256.ormlite.stmt.Where or(com.j256.ormlite.stmt.Where,com.j256.ormlite.stmt.Where,com.j256.ormlite.stmt.Where[]) -> or
    com.j256.ormlite.stmt.Where or(int) -> or
    com.j256.ormlite.stmt.Where idEq(java.lang.Object) -> idEq
    com.j256.ormlite.stmt.Where idEq(com.j256.ormlite.dao.Dao,java.lang.Object) -> idEq
    com.j256.ormlite.stmt.Where raw(java.lang.String,com.j256.ormlite.stmt.ArgumentHolder[]) -> raw
    com.j256.ormlite.stmt.Where rawComparison(java.lang.String,java.lang.String,java.lang.Object) -> rawComparison
    com.j256.ormlite.stmt.PreparedQuery prepare() -> prepare
    java.util.List query() -> query
    com.j256.ormlite.dao.GenericRawResults queryRaw() -> queryRaw
    java.lang.Object queryForFirst() -> queryForFirst
    java.lang.String[] queryRawFirst() -> queryRawFirst
    long countOf() -> countOf
    com.j256.ormlite.dao.CloseableIterator iterator() -> iterator
    com.j256.ormlite.stmt.Where clear() -> clear
    com.j256.ormlite.stmt.Where reset() -> reset
    java.lang.String getStatement() -> getStatement
    void appendSql(java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
    java.lang.String toString() -> toString
    com.j256.ormlite.stmt.QueryBuilder checkQueryBuilderMethod(java.lang.String) -> checkQueryBuilderMethod
    com.j256.ormlite.stmt.Where in(boolean,java.lang.String,java.lang.Object[]) -> in
    com.j256.ormlite.stmt.Where in(boolean,java.lang.String,com.j256.ormlite.stmt.QueryBuilder) -> in
    com.j256.ormlite.stmt.query.Clause[] buildClauseArray(com.j256.ormlite.stmt.Where[],java.lang.String) -> buildClauseArray
    void addNeedsFuture(com.j256.ormlite.stmt.query.NeedsFutureClause) -> addNeedsFuture
    void addClause(com.j256.ormlite.stmt.query.Clause) -> addClause
    com.j256.ormlite.field.FieldType findColumnFieldType(java.lang.String) -> findColumnFieldType
    void push(com.j256.ormlite.stmt.query.Clause) -> push
    com.j256.ormlite.stmt.query.Clause pop(java.lang.String) -> pop
    com.j256.ormlite.stmt.query.Clause peek() -> peek
com.j256.ormlite.stmt.mapped.BaseMappedQuery -> com.j256.ormlite.stmt.mapped.BaseMappedQuery:
    com.j256.ormlite.field.FieldType[] resultsFieldTypes -> resultsFieldTypes
    java.util.Map columnPositions -> columnPositions
    java.lang.Object parent -> parent
    java.lang.Object parentId -> parentId
    java.lang.Object mapRow(com.j256.ormlite.support.DatabaseResults) -> mapRow
    void setParentInformation(java.lang.Object,java.lang.Object) -> setParentInformation
com.j256.ormlite.stmt.mapped.BaseMappedStatement -> com.j256.ormlite.stmt.mapped.BaseMappedStatement:
    com.j256.ormlite.logger.Logger logger -> logger
    com.j256.ormlite.table.TableInfo tableInfo -> tableInfo
    java.lang.Class clazz -> clazz
    com.j256.ormlite.field.FieldType idField -> idField
    java.lang.String statement -> statement
    com.j256.ormlite.field.FieldType[] argFieldTypes -> argFieldTypes
    java.lang.Object[] getFieldObjects(java.lang.Object) -> getFieldObjects
    java.lang.Object convertIdToFieldObject(java.lang.Object) -> convertIdToFieldObject
    void appendWhereFieldEq(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.field.FieldType,java.lang.StringBuilder,java.util.List) -> appendWhereFieldEq
    void appendTableName(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.lang.String,java.lang.String) -> appendTableName
    void appendFieldColumnName(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,com.j256.ormlite.field.FieldType,java.util.List) -> appendFieldColumnName
    java.lang.String toString() -> toString
com.j256.ormlite.stmt.mapped.MappedCreate -> com.j256.ormlite.stmt.mapped.MappedCreate:
    java.lang.String queryNextSequenceStmt -> queryNextSequenceStmt
    java.lang.String dataClassName -> dataClassName
    int versionFieldTypeIndex -> versionFieldTypeIndex
    int insert(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> insert
    com.j256.ormlite.stmt.mapped.MappedCreate build(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo) -> build
    boolean foreignCollectionsAreAssigned(com.j256.ormlite.field.FieldType[],java.lang.Object) -> foreignCollectionsAreAssigned
    boolean isFieldCreatable(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.field.FieldType) -> isFieldCreatable
    java.lang.String buildQueryNextSequence(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.field.FieldType) -> buildQueryNextSequence
    void assignSequenceId(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> assignSequenceId
    void assignIdValue(java.lang.Object,java.lang.Number,java.lang.String,com.j256.ormlite.dao.ObjectCache) -> assignIdValue
com.j256.ormlite.stmt.mapped.MappedCreate$KeyHolder -> com.j256.ormlite.stmt.mapped.MappedCreate$KeyHolder:
    java.lang.Number key -> key
    java.lang.Number getKey() -> getKey
    void addKey(java.lang.Number) -> addKey
com.j256.ormlite.stmt.mapped.MappedDelete -> com.j256.ormlite.stmt.mapped.MappedDelete:
    com.j256.ormlite.stmt.mapped.MappedDelete build(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo) -> build
    int delete(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> delete
    int deleteById(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> deleteById
com.j256.ormlite.stmt.mapped.MappedDeleteCollection -> com.j256.ormlite.stmt.mapped.MappedDeleteCollection:
    int deleteObjects(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo,com.j256.ormlite.support.DatabaseConnection,java.util.Collection,com.j256.ormlite.dao.ObjectCache) -> deleteObjects
    int deleteIds(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo,com.j256.ormlite.support.DatabaseConnection,java.util.Collection,com.j256.ormlite.dao.ObjectCache) -> deleteIds
    com.j256.ormlite.stmt.mapped.MappedDeleteCollection build(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo,int) -> build
    int updateRows(com.j256.ormlite.support.DatabaseConnection,java.lang.Class,com.j256.ormlite.stmt.mapped.MappedDeleteCollection,java.lang.Object[],com.j256.ormlite.dao.ObjectCache) -> updateRows
    void appendWhereIds(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.field.FieldType,java.lang.StringBuilder,int,com.j256.ormlite.field.FieldType[]) -> appendWhereIds
com.j256.ormlite.stmt.mapped.MappedPreparedStmt -> com.j256.ormlite.stmt.mapped.MappedPreparedStmt:
    com.j256.ormlite.stmt.ArgumentHolder[] argHolders -> argHolders
    java.lang.Long limit -> limit
    com.j256.ormlite.stmt.StatementBuilder$StatementType type -> type
    com.j256.ormlite.support.CompiledStatement compile(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.stmt.StatementBuilder$StatementType) -> compile
    com.j256.ormlite.support.CompiledStatement compile(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.stmt.StatementBuilder$StatementType,int) -> compile
    java.lang.String getStatement() -> getStatement
    com.j256.ormlite.stmt.StatementBuilder$StatementType getType() -> getType
    void setArgumentHolderValue(int,java.lang.Object) -> setArgumentHolderValue
    com.j256.ormlite.support.CompiledStatement assignStatementArguments(com.j256.ormlite.support.CompiledStatement) -> assignStatementArguments
com.j256.ormlite.stmt.mapped.MappedQueryForId -> com.j256.ormlite.stmt.mapped.MappedQueryForId:
    java.lang.String label -> label
    java.lang.Object execute(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> execute
    com.j256.ormlite.stmt.mapped.MappedQueryForId build(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo,com.j256.ormlite.field.FieldType) -> build
    java.lang.String buildStatement(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo,com.j256.ormlite.field.FieldType) -> buildStatement
    void logArgs(java.lang.Object[]) -> logArgs
com.j256.ormlite.stmt.mapped.MappedRefresh -> com.j256.ormlite.stmt.mapped.MappedRefresh:
    int executeRefresh(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> executeRefresh
    com.j256.ormlite.stmt.mapped.MappedRefresh build(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo) -> build
com.j256.ormlite.stmt.mapped.MappedUpdate -> com.j256.ormlite.stmt.mapped.MappedUpdate:
    com.j256.ormlite.field.FieldType versionFieldType -> versionFieldType
    int versionFieldTypeIndex -> versionFieldTypeIndex
    com.j256.ormlite.stmt.mapped.MappedUpdate build(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo) -> build
    int update(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> update
    boolean isFieldUpdatable(com.j256.ormlite.field.FieldType,com.j256.ormlite.field.FieldType) -> isFieldUpdatable
com.j256.ormlite.stmt.mapped.MappedUpdateId -> com.j256.ormlite.stmt.mapped.MappedUpdateId:
    int execute(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> execute
    com.j256.ormlite.stmt.mapped.MappedUpdateId build(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo) -> build
    java.lang.Object extractIdToFieldObject(java.lang.Object) -> extractIdToFieldObject
com.j256.ormlite.stmt.query.BaseComparison -> com.j256.ormlite.stmt.query.BaseComparison:
    java.lang.String NUMBER_CHARACTERS -> NUMBER_CHARACTERS
    java.lang.String columnName -> columnName
    com.j256.ormlite.field.FieldType fieldType -> fieldType
    java.lang.Object value -> value
    void appendOperation(java.lang.StringBuilder) -> appendOperation
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
    java.lang.String getColumnName() -> getColumnName
    void appendValue(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> appendValue
    void appendArgOrValue(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.field.FieldType,java.lang.StringBuilder,java.util.List,java.lang.Object) -> appendArgOrValue
    java.lang.String toString() -> toString
com.j256.ormlite.stmt.query.Between -> com.j256.ormlite.stmt.query.Between:
    java.lang.Object low -> low
    java.lang.Object high -> high
    void appendOperation(java.lang.StringBuilder) -> appendOperation
    void appendValue(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> appendValue
    java.lang.String toString() -> toString
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
    java.lang.String getColumnName() -> getColumnName
com.j256.ormlite.stmt.query.Clause -> com.j256.ormlite.stmt.query.Clause:
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
com.j256.ormlite.stmt.query.ColumnNameOrRawSql -> com.j256.ormlite.stmt.query.ColumnNameOrRawSql:
    java.lang.String columnName -> columnName
    java.lang.String rawSql -> rawSql
    com.j256.ormlite.stmt.query.ColumnNameOrRawSql withColumnName(java.lang.String) -> withColumnName
    com.j256.ormlite.stmt.query.ColumnNameOrRawSql withRawSql(java.lang.String) -> withRawSql
    java.lang.String getColumnName() -> getColumnName
    java.lang.String getRawSql() -> getRawSql
    java.lang.String toString() -> toString
com.j256.ormlite.stmt.query.Comparison -> com.j256.ormlite.stmt.query.Comparison:
    java.lang.String getColumnName() -> getColumnName
    void appendOperation(java.lang.StringBuilder) -> appendOperation
    void appendValue(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> appendValue
com.j256.ormlite.stmt.query.Exists -> com.j256.ormlite.stmt.query.Exists:
    com.j256.ormlite.stmt.QueryBuilder$InternalQueryBuilderWrapper subQueryBuilder -> subQueryBuilder
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
com.j256.ormlite.stmt.query.In -> com.j256.ormlite.stmt.query.In:
    java.lang.Iterable objects -> objects
    boolean in -> in
    void appendOperation(java.lang.StringBuilder) -> appendOperation
    void appendValue(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> appendValue
    java.lang.String toString() -> toString
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
    java.lang.String getColumnName() -> getColumnName
com.j256.ormlite.stmt.query.InSubQuery -> com.j256.ormlite.stmt.query.InSubQuery:
    com.j256.ormlite.stmt.QueryBuilder$InternalQueryBuilderWrapper subQueryBuilder -> subQueryBuilder
    boolean in -> in
    void appendOperation(java.lang.StringBuilder) -> appendOperation
    void appendValue(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> appendValue
    java.lang.String toString() -> toString
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
    java.lang.String getColumnName() -> getColumnName
com.j256.ormlite.stmt.query.IsNotNull -> com.j256.ormlite.stmt.query.IsNotNull:
    void appendOperation(java.lang.StringBuilder) -> appendOperation
    void appendValue(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> appendValue
    java.lang.String toString() -> toString
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
    java.lang.String getColumnName() -> getColumnName
com.j256.ormlite.stmt.query.IsNull -> com.j256.ormlite.stmt.query.IsNull:
    void appendOperation(java.lang.StringBuilder) -> appendOperation
    void appendValue(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> appendValue
    java.lang.String toString() -> toString
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
    java.lang.String getColumnName() -> getColumnName
com.j256.ormlite.stmt.query.ManyClause -> com.j256.ormlite.stmt.query.ManyClause:
    java.lang.String AND_OPERATION -> AND_OPERATION
    java.lang.String OR_OPERATION -> OR_OPERATION
    com.j256.ormlite.stmt.query.Clause first -> first
    com.j256.ormlite.stmt.query.Clause second -> second
    com.j256.ormlite.stmt.query.Clause[] others -> others
    int startOthersAt -> startOthersAt
    java.lang.String operation -> operation
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
    void setMissingClause(com.j256.ormlite.stmt.query.Clause) -> setMissingClause
com.j256.ormlite.stmt.query.NeedsFutureClause -> com.j256.ormlite.stmt.query.NeedsFutureClause:
    void setMissingClause(com.j256.ormlite.stmt.query.Clause) -> setMissingClause
com.j256.ormlite.stmt.query.Not -> com.j256.ormlite.stmt.query.Not:
    com.j256.ormlite.stmt.query.Comparison comparison -> comparison
    com.j256.ormlite.stmt.query.Exists exists -> exists
    void setMissingClause(com.j256.ormlite.stmt.query.Clause) -> setMissingClause
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
    java.lang.String toString() -> toString
com.j256.ormlite.stmt.query.OrderBy -> com.j256.ormlite.stmt.query.OrderBy:
    java.lang.String columnName -> columnName
    boolean ascending -> ascending
    java.lang.String rawSql -> rawSql
    com.j256.ormlite.stmt.ArgumentHolder[] orderByArgs -> orderByArgs
    java.lang.String getColumnName() -> getColumnName
    boolean isAscending() -> isAscending
    java.lang.String getRawSql() -> getRawSql
    com.j256.ormlite.stmt.ArgumentHolder[] getOrderByArgs() -> getOrderByArgs
com.j256.ormlite.stmt.query.Raw -> com.j256.ormlite.stmt.query.Raw:
    java.lang.String statement -> statement
    com.j256.ormlite.stmt.ArgumentHolder[] args -> args
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
com.j256.ormlite.stmt.query.SetExpression -> com.j256.ormlite.stmt.query.SetExpression:
    void appendOperation(java.lang.StringBuilder) -> appendOperation
    void appendArgOrValue(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.field.FieldType,java.lang.StringBuilder,java.util.List,java.lang.Object) -> appendArgOrValue
    java.lang.String toString() -> toString
    void appendValue(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> appendValue
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
    java.lang.String getColumnName() -> getColumnName
com.j256.ormlite.stmt.query.SetValue -> com.j256.ormlite.stmt.query.SetValue:
    com.j256.ormlite.stmt.ArgumentHolder nullValue -> nullValue
    void appendOperation(java.lang.StringBuilder) -> appendOperation
    java.lang.String toString() -> toString
    void appendValue(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> appendValue
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
    java.lang.String getColumnName() -> getColumnName
com.j256.ormlite.stmt.query.SimpleComparison -> com.j256.ormlite.stmt.query.SimpleComparison:
    java.lang.String EQUAL_TO_OPERATION -> EQUAL_TO_OPERATION
    java.lang.String GREATER_THAN_OPERATION -> GREATER_THAN_OPERATION
    java.lang.String GREATER_THAN_EQUAL_TO_OPERATION -> GREATER_THAN_EQUAL_TO_OPERATION
    java.lang.String LESS_THAN_OPERATION -> LESS_THAN_OPERATION
    java.lang.String LESS_THAN_EQUAL_TO_OPERATION -> LESS_THAN_EQUAL_TO_OPERATION
    java.lang.String LIKE_OPERATION -> LIKE_OPERATION
    java.lang.String NOT_EQUAL_TO_OPERATION -> NOT_EQUAL_TO_OPERATION
    java.lang.String operation -> operation
    void appendOperation(java.lang.StringBuilder) -> appendOperation
    java.lang.String toString() -> toString
    void appendValue(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> appendValue
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
    java.lang.String getColumnName() -> getColumnName
com.j256.ormlite.support.BaseConnectionSource -> com.j256.ormlite.support.BaseConnectionSource:
    java.lang.ThreadLocal specialConnection -> specialConnection
    com.j256.ormlite.support.DatabaseConnection getSpecialConnection() -> getSpecialConnection
    com.j256.ormlite.support.DatabaseConnection getSavedConnection() -> getSavedConnection
    boolean isSavedConnection(com.j256.ormlite.support.DatabaseConnection) -> isSavedConnection
    boolean saveSpecial(com.j256.ormlite.support.DatabaseConnection) -> saveSpecial
    boolean clearSpecial(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.logger.Logger) -> clearSpecial
com.j256.ormlite.support.BaseConnectionSource$NestedConnection -> com.j256.ormlite.support.BaseConnectionSource$NestedConnection:
    com.j256.ormlite.support.DatabaseConnection connection -> connection
    int nestedC -> nestedC
    void increment() -> increment
    int decrementAndGet() -> decrementAndGet
com.j256.ormlite.support.CompiledStatement -> com.j256.ormlite.support.CompiledStatement:
    int getColumnCount() -> getColumnCount
    java.lang.String getColumnName(int) -> getColumnName
    int runUpdate() -> runUpdate
    com.j256.ormlite.support.DatabaseResults runQuery(com.j256.ormlite.dao.ObjectCache) -> runQuery
    int runExecute() -> runExecute
    void closeQuietly() -> closeQuietly
    void cancel() -> cancel
    void setObject(int,java.lang.Object,com.j256.ormlite.field.SqlType) -> setObject
    void setMaxRows(int) -> setMaxRows
    void setQueryTimeout(long) -> setQueryTimeout
com.j256.ormlite.support.ConnectionSource -> com.j256.ormlite.support.ConnectionSource:
    com.j256.ormlite.support.DatabaseConnection getReadOnlyConnection() -> getReadOnlyConnection
    com.j256.ormlite.support.DatabaseConnection getReadWriteConnection() -> getReadWriteConnection
    void releaseConnection(com.j256.ormlite.support.DatabaseConnection) -> releaseConnection
    boolean saveSpecialConnection(com.j256.ormlite.support.DatabaseConnection) -> saveSpecialConnection
    void clearSpecialConnection(com.j256.ormlite.support.DatabaseConnection) -> clearSpecialConnection
    com.j256.ormlite.support.DatabaseConnection getSpecialConnection() -> getSpecialConnection
    void closeQuietly() -> closeQuietly
    com.j256.ormlite.db.DatabaseType getDatabaseType() -> getDatabaseType
    boolean isOpen() -> isOpen
com.j256.ormlite.support.DatabaseConnection -> com.j256.ormlite.support.DatabaseConnection:
    java.lang.Object MORE_THAN_ONE -> MORE_THAN_ONE
    int DEFAULT_RESULT_FLAGS -> DEFAULT_RESULT_FLAGS
    boolean isAutoCommitSupported() -> isAutoCommitSupported
    boolean isAutoCommit() -> isAutoCommit
    void setAutoCommit(boolean) -> setAutoCommit
    java.sql.Savepoint setSavePoint(java.lang.String) -> setSavePoint
    void commit(java.sql.Savepoint) -> commit
    void rollback(java.sql.Savepoint) -> rollback
    int executeStatement(java.lang.String,int) -> executeStatement
    com.j256.ormlite.support.CompiledStatement compileStatement(java.lang.String,com.j256.ormlite.stmt.StatementBuilder$StatementType,com.j256.ormlite.field.FieldType[],int) -> compileStatement
    int insert(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[],com.j256.ormlite.support.GeneratedKeyHolder) -> insert
    int update(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[]) -> update
    int delete(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[]) -> delete
    java.lang.Object queryForOne(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[],com.j256.ormlite.stmt.GenericRowMapper,com.j256.ormlite.dao.ObjectCache) -> queryForOne
    long queryForLong(java.lang.String) -> queryForLong
    long queryForLong(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[]) -> queryForLong
    void closeQuietly() -> closeQuietly
    boolean isClosed() -> isClosed
    boolean isTableExists(java.lang.String) -> isTableExists
com.j256.ormlite.support.DatabaseConnectionProxy -> com.j256.ormlite.support.DatabaseConnectionProxy:
    com.j256.ormlite.support.DatabaseConnection proxy -> proxy
    boolean isAutoCommitSupported() -> isAutoCommitSupported
    boolean isAutoCommit() -> isAutoCommit
    void setAutoCommit(boolean) -> setAutoCommit
    java.sql.Savepoint setSavePoint(java.lang.String) -> setSavePoint
    void commit(java.sql.Savepoint) -> commit
    void rollback(java.sql.Savepoint) -> rollback
    int executeStatement(java.lang.String,int) -> executeStatement
    com.j256.ormlite.support.CompiledStatement compileStatement(java.lang.String,com.j256.ormlite.stmt.StatementBuilder$StatementType,com.j256.ormlite.field.FieldType[],int) -> compileStatement
    int insert(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[],com.j256.ormlite.support.GeneratedKeyHolder) -> insert
    int update(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[]) -> update
    int delete(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[]) -> delete
    java.lang.Object queryForOne(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[],com.j256.ormlite.stmt.GenericRowMapper,com.j256.ormlite.dao.ObjectCache) -> queryForOne
    long queryForLong(java.lang.String) -> queryForLong
    long queryForLong(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[]) -> queryForLong
    void close() -> close
    void closeQuietly() -> closeQuietly
    boolean isClosed() -> isClosed
    boolean isTableExists(java.lang.String) -> isTableExists
com.j256.ormlite.support.DatabaseConnectionProxyFactory -> com.j256.ormlite.support.DatabaseConnectionProxyFactory:
    com.j256.ormlite.support.DatabaseConnection createProxy(com.j256.ormlite.support.DatabaseConnection) -> createProxy
com.j256.ormlite.support.DatabaseResults -> com.j256.ormlite.support.DatabaseResults:
    int getColumnCount() -> getColumnCount
    java.lang.String[] getColumnNames() -> getColumnNames
    boolean first() -> first
    boolean previous() -> previous
    boolean next() -> next
    boolean last() -> last
    boolean moveRelative(int) -> moveRelative
    boolean moveAbsolute(int) -> moveAbsolute
    int findColumn(java.lang.String) -> findColumn
    java.lang.String getString(int) -> getString
    boolean getBoolean(int) -> getBoolean
    char getChar(int) -> getChar
    byte getByte(int) -> getByte
    byte[] getBytes(int) -> getBytes
    short getShort(int) -> getShort
    int getInt(int) -> getInt
    long getLong(int) -> getLong
    float getFloat(int) -> getFloat
    double getDouble(int) -> getDouble
    java.sql.Timestamp getTimestamp(int) -> getTimestamp
    java.io.InputStream getBlobStream(int) -> getBlobStream
    java.math.BigDecimal getBigDecimal(int) -> getBigDecimal
    boolean wasNull(int) -> wasNull
    com.j256.ormlite.dao.ObjectCache getObjectCache() -> getObjectCache
    void closeQuietly() -> closeQuietly
com.j256.ormlite.support.GeneratedKeyHolder -> com.j256.ormlite.support.GeneratedKeyHolder:
    void addKey(java.lang.Number) -> addKey
com.j256.ormlite.support.ReflectionDatabaseConnectionProxyFactory -> com.j256.ormlite.support.ReflectionDatabaseConnectionProxyFactory:
    java.lang.Class proxyClass -> proxyClass
    java.lang.reflect.Constructor constructor -> constructor
    com.j256.ormlite.support.DatabaseConnection createProxy(com.j256.ormlite.support.DatabaseConnection) -> createProxy
com.j256.ormlite.table.DatabaseTable -> com.j256.ormlite.table.DatabaseTable:
    java.lang.String tableName() -> tableName
    java.lang.Class daoClass() -> daoClass
com.j256.ormlite.table.DatabaseTableConfig -> com.j256.ormlite.table.DatabaseTableConfig:
    com.j256.ormlite.misc.JavaxPersistenceConfigurer javaxPersistenceConfigurer -> javaxPersistenceConfigurer
    java.lang.Class dataClass -> dataClass
    java.lang.String tableName -> tableName
    java.util.List fieldConfigs -> fieldConfigs
    com.j256.ormlite.field.FieldType[] fieldTypes -> fieldTypes
    java.lang.reflect.Constructor constructor -> constructor
    void initialize() -> initialize
    java.lang.Class getDataClass() -> getDataClass
    void setDataClass(java.lang.Class) -> setDataClass
    java.lang.String getTableName() -> getTableName
    void setTableName(java.lang.String) -> setTableName
    void setFieldConfigs(java.util.List) -> setFieldConfigs
    void extractFieldTypes(com.j256.ormlite.support.ConnectionSource) -> extractFieldTypes
    com.j256.ormlite.field.FieldType[] getFieldTypes(com.j256.ormlite.db.DatabaseType) -> getFieldTypes
    java.util.List getFieldConfigs() -> getFieldConfigs
    java.lang.reflect.Constructor getConstructor() -> getConstructor
    void setConstructor(java.lang.reflect.Constructor) -> setConstructor
    com.j256.ormlite.table.DatabaseTableConfig fromClass(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> fromClass
    java.lang.String extractTableName(java.lang.Class) -> extractTableName
    java.lang.reflect.Constructor findNoArgConstructor(java.lang.Class) -> findNoArgConstructor
    com.j256.ormlite.field.FieldType[] extractFieldTypes(com.j256.ormlite.support.ConnectionSource,java.lang.Class,java.lang.String) -> extractFieldTypes
    com.j256.ormlite.field.FieldType[] convertFieldConfigs(com.j256.ormlite.support.ConnectionSource,java.lang.String,java.util.List) -> convertFieldConfigs
com.j256.ormlite.table.DatabaseTableConfigLoader -> com.j256.ormlite.table.DatabaseTableConfigLoader:
    java.lang.String CONFIG_FILE_START_MARKER -> CONFIG_FILE_START_MARKER
    java.lang.String CONFIG_FILE_END_MARKER -> CONFIG_FILE_END_MARKER
    java.lang.String CONFIG_FILE_FIELDS_START -> CONFIG_FILE_FIELDS_START
    java.lang.String CONFIG_FILE_FIELDS_END -> CONFIG_FILE_FIELDS_END
    java.lang.String FIELD_NAME_DATA_CLASS -> FIELD_NAME_DATA_CLASS
    java.lang.String FIELD_NAME_TABLE_NAME -> FIELD_NAME_TABLE_NAME
    java.util.List loadDatabaseConfigFromReader(java.io.BufferedReader) -> loadDatabaseConfigFromReader
    com.j256.ormlite.table.DatabaseTableConfig fromReader(java.io.BufferedReader) -> fromReader
    void write(java.io.BufferedWriter,com.j256.ormlite.table.DatabaseTableConfig) -> write
    void writeConfig(java.io.BufferedWriter,com.j256.ormlite.table.DatabaseTableConfig) -> writeConfig
    void readTableField(com.j256.ormlite.table.DatabaseTableConfig,java.lang.String,java.lang.String) -> readTableField
    void readFields(java.io.BufferedReader,com.j256.ormlite.table.DatabaseTableConfig) -> readFields
com.j256.ormlite.table.ObjectFactory -> com.j256.ormlite.table.ObjectFactory:
    java.lang.Object createObject(java.lang.reflect.Constructor,java.lang.Class) -> createObject
com.j256.ormlite.table.TableInfo -> com.j256.ormlite.table.TableInfo:
    com.j256.ormlite.field.FieldType[] NO_FOREIGN_COLLECTIONS -> NO_FOREIGN_COLLECTIONS
    com.j256.ormlite.dao.BaseDaoImpl baseDaoImpl -> baseDaoImpl
    java.lang.Class dataClass -> dataClass
    java.lang.String tableName -> tableName
    com.j256.ormlite.field.FieldType[] fieldTypes -> fieldTypes
    com.j256.ormlite.field.FieldType[] foreignCollections -> foreignCollections
    com.j256.ormlite.field.FieldType idField -> idField
    java.lang.reflect.Constructor constructor -> constructor
    boolean foreignAutoCreate -> foreignAutoCreate
    java.util.Map fieldNameMap -> fieldNameMap
    java.lang.Class getDataClass() -> getDataClass
    java.lang.String getTableName() -> getTableName
    com.j256.ormlite.field.FieldType[] getFieldTypes() -> getFieldTypes
    com.j256.ormlite.field.FieldType getFieldTypeByColumnName(java.lang.String) -> getFieldTypeByColumnName
    com.j256.ormlite.field.FieldType getIdField() -> getIdField
    java.lang.reflect.Constructor getConstructor() -> getConstructor
    java.lang.String objectToString(java.lang.Object) -> objectToString
    java.lang.Object createObject() -> createObject
    boolean isUpdatable() -> isUpdatable
    boolean isForeignAutoCreate() -> isForeignAutoCreate
    com.j256.ormlite.field.FieldType[] getForeignCollections() -> getForeignCollections
    boolean hasColumnName(java.lang.String) -> hasColumnName
    void wireNewInstance(com.j256.ormlite.dao.BaseDaoImpl,java.lang.Object) -> wireNewInstance
com.j256.ormlite.table.TableUtils -> com.j256.ormlite.table.TableUtils:
    com.j256.ormlite.logger.Logger logger -> logger
    com.j256.ormlite.field.FieldType[] noFieldTypes -> noFieldTypes
    int createTable(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> createTable
    int createTableIfNotExists(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> createTableIfNotExists
    int createTable(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.DatabaseTableConfig) -> createTable
    int createTableIfNotExists(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.DatabaseTableConfig) -> createTableIfNotExists
    java.util.List getCreateTableStatements(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> getCreateTableStatements
    java.util.List getCreateTableStatements(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.DatabaseTableConfig) -> getCreateTableStatements
    int dropTable(com.j256.ormlite.support.ConnectionSource,java.lang.Class,boolean) -> dropTable
    int dropTable(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.DatabaseTableConfig,boolean) -> dropTable
    int clearTable(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> clearTable
    int clearTable(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.DatabaseTableConfig) -> clearTable
    int createTable(com.j256.ormlite.support.ConnectionSource,java.lang.Class,boolean) -> createTable
    int createTable(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.DatabaseTableConfig,boolean) -> createTable
    int clearTable(com.j256.ormlite.support.ConnectionSource,java.lang.String) -> clearTable
    int doDropTable(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.TableInfo,boolean) -> doDropTable
    void addDropIndexStatements(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo,java.util.List) -> addDropIndexStatements
    void addCreateTableStatements(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo,java.util.List,java.util.List,boolean) -> addCreateTableStatements
    void addCreateIndexStatements(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo,java.util.List,boolean,boolean) -> addCreateIndexStatements
    void addDropTableStatements(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo,java.util.List) -> addDropTableStatements
    int doCreateTable(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.TableInfo,boolean) -> doCreateTable
    int doStatements(com.j256.ormlite.support.DatabaseConnection,java.lang.String,java.util.Collection,boolean,boolean,boolean) -> doStatements
    int doCreateTestQueries(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.db.DatabaseType,java.util.List) -> doCreateTestQueries
    java.util.List addCreateTableStatements(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.TableInfo,boolean) -> addCreateTableStatements
com.loopj.android.http.AssertUtils -> com.loopj.android.http.AssertUtils:
    void asserts(boolean,java.lang.String) -> asserts
com.loopj.android.http.AsyncHttpClient -> com.loopj.android.http.AsyncHttpClient:
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.String HEADER_CONTENT_TYPE -> HEADER_CONTENT_TYPE
    java.lang.String HEADER_CONTENT_RANGE -> HEADER_CONTENT_RANGE
    java.lang.String HEADER_CONTENT_ENCODING -> HEADER_CONTENT_ENCODING
    java.lang.String HEADER_CONTENT_DISPOSITION -> HEADER_CONTENT_DISPOSITION
    java.lang.String HEADER_ACCEPT_ENCODING -> HEADER_ACCEPT_ENCODING
    java.lang.String ENCODING_GZIP -> ENCODING_GZIP
    int DEFAULT_MAX_CONNECTIONS -> DEFAULT_MAX_CONNECTIONS
    int DEFAULT_SOCKET_TIMEOUT -> DEFAULT_SOCKET_TIMEOUT
    int DEFAULT_MAX_RETRIES -> DEFAULT_MAX_RETRIES
    int DEFAULT_RETRY_SLEEP_TIME_MILLIS -> DEFAULT_RETRY_SLEEP_TIME_MILLIS
    int DEFAULT_SOCKET_BUFFER_SIZE -> DEFAULT_SOCKET_BUFFER_SIZE
    int maxConnections -> maxConnections
    int connectTimeout -> connectTimeout
    int responseTimeout -> responseTimeout
    org.apache.http.impl.client.DefaultHttpClient httpClient -> httpClient
    org.apache.http.protocol.HttpContext httpContext -> httpContext
    java.util.concurrent.ExecutorService threadPool -> threadPool
    java.util.Map requestMap -> requestMap
    java.util.Map clientHeaderMap -> clientHeaderMap
    boolean isUrlEncodingEnabled -> isUrlEncodingEnabled
    org.apache.http.conn.scheme.SchemeRegistry getDefaultSchemeRegistry(boolean,int,int) -> getDefaultSchemeRegistry
    void allowRetryExceptionClass(java.lang.Class) -> allowRetryExceptionClass
    void blockRetryExceptionClass(java.lang.Class) -> blockRetryExceptionClass
    org.apache.http.client.HttpClient getHttpClient() -> getHttpClient
    org.apache.http.protocol.HttpContext getHttpContext() -> getHttpContext
    void setCookieStore(org.apache.http.client.CookieStore) -> setCookieStore
    void setThreadPool(java.util.concurrent.ExecutorService) -> setThreadPool
    java.util.concurrent.ExecutorService getThreadPool() -> getThreadPool
    java.util.concurrent.ExecutorService getDefaultThreadPool() -> getDefaultThreadPool
    void setEnableRedirects(boolean,boolean,boolean) -> setEnableRedirects
    void setEnableRedirects(boolean,boolean) -> setEnableRedirects
    void setEnableRedirects(boolean) -> setEnableRedirects
    void setRedirectHandler(org.apache.http.client.RedirectHandler) -> setRedirectHandler
    void setUserAgent(java.lang.String) -> setUserAgent
    int getMaxConnections() -> getMaxConnections
    void setMaxConnections(int) -> setMaxConnections
    int getTimeout() -> getTimeout
    void setTimeout(int) -> setTimeout
    int getConnectTimeout() -> getConnectTimeout
    void setConnectTimeout(int) -> setConnectTimeout
    int getResponseTimeout() -> getResponseTimeout
    void setResponseTimeout(int) -> setResponseTimeout
    void setProxy(java.lang.String,int) -> setProxy
    void setProxy(java.lang.String,int,java.lang.String,java.lang.String) -> setProxy
    void setSSLSocketFactory(org.apache.http.conn.ssl.SSLSocketFactory) -> setSSLSocketFactory
    void setMaxRetriesAndTimeout(int,int) -> setMaxRetriesAndTimeout
    void removeAllHeaders() -> removeAllHeaders
    void addHeader(java.lang.String,java.lang.String) -> addHeader
    void removeHeader(java.lang.String) -> removeHeader
    void setBasicAuth(java.lang.String,java.lang.String) -> setBasicAuth
    void setBasicAuth(java.lang.String,java.lang.String,boolean) -> setBasicAuth
    void setBasicAuth(java.lang.String,java.lang.String,org.apache.http.auth.AuthScope) -> setBasicAuth
    void setBasicAuth(java.lang.String,java.lang.String,org.apache.http.auth.AuthScope,boolean) -> setBasicAuth
    void setCredentials(org.apache.http.auth.AuthScope,org.apache.http.auth.Credentials) -> setCredentials
    void setAuthenticationPreemptive(boolean) -> setAuthenticationPreemptive
    void clearBasicAuth() -> clearBasicAuth
    void clearCredentialsProvider() -> clearCredentialsProvider
    void cancelRequests(android.content.Context,boolean) -> cancelRequests
    void cancelAllRequests(boolean) -> cancelAllRequests
    com.loopj.android.http.RequestHandle head(java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> head
    com.loopj.android.http.RequestHandle head(java.lang.String,com.loopj.android.http.RequestParams,com.loopj.android.http.ResponseHandlerInterface) -> head
    com.loopj.android.http.RequestHandle head(android.content.Context,java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> head
    com.loopj.android.http.RequestHandle head(android.content.Context,java.lang.String,com.loopj.android.http.RequestParams,com.loopj.android.http.ResponseHandlerInterface) -> head
    com.loopj.android.http.RequestHandle head(android.content.Context,java.lang.String,org.apache.http.Header[],com.loopj.android.http.RequestParams,com.loopj.android.http.ResponseHandlerInterface) -> head
    com.loopj.android.http.RequestHandle get(java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> get
    com.loopj.android.http.RequestHandle get(java.lang.String,com.loopj.android.http.RequestParams,com.loopj.android.http.ResponseHandlerInterface) -> get
    com.loopj.android.http.RequestHandle get(android.content.Context,java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> get
    com.loopj.android.http.RequestHandle get(android.content.Context,java.lang.String,com.loopj.android.http.RequestParams,com.loopj.android.http.ResponseHandlerInterface) -> get
    com.loopj.android.http.RequestHandle get(android.content.Context,java.lang.String,org.apache.http.Header[],com.loopj.android.http.RequestParams,com.loopj.android.http.ResponseHandlerInterface) -> get
    com.loopj.android.http.RequestHandle post(java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> post
    com.loopj.android.http.RequestHandle post(java.lang.String,com.loopj.android.http.RequestParams,com.loopj.android.http.ResponseHandlerInterface) -> post
    com.loopj.android.http.RequestHandle post(android.content.Context,java.lang.String,com.loopj.android.http.RequestParams,com.loopj.android.http.ResponseHandlerInterface) -> post
    com.loopj.android.http.RequestHandle post(android.content.Context,java.lang.String,org.apache.http.HttpEntity,java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> post
    com.loopj.android.http.RequestHandle post(android.content.Context,java.lang.String,org.apache.http.Header[],com.loopj.android.http.RequestParams,java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> post
    com.loopj.android.http.RequestHandle post(android.content.Context,java.lang.String,org.apache.http.Header[],org.apache.http.HttpEntity,java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> post
    com.loopj.android.http.RequestHandle put(java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> put
    com.loopj.android.http.RequestHandle put(java.lang.String,com.loopj.android.http.RequestParams,com.loopj.android.http.ResponseHandlerInterface) -> put
    com.loopj.android.http.RequestHandle put(android.content.Context,java.lang.String,com.loopj.android.http.RequestParams,com.loopj.android.http.ResponseHandlerInterface) -> put
    com.loopj.android.http.RequestHandle put(android.content.Context,java.lang.String,org.apache.http.HttpEntity,java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> put
    com.loopj.android.http.RequestHandle put(android.content.Context,java.lang.String,org.apache.http.Header[],org.apache.http.HttpEntity,java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> put
    com.loopj.android.http.RequestHandle delete(java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> delete
    com.loopj.android.http.RequestHandle delete(android.content.Context,java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> delete
    com.loopj.android.http.RequestHandle delete(android.content.Context,java.lang.String,org.apache.http.Header[],com.loopj.android.http.ResponseHandlerInterface) -> delete
    com.loopj.android.http.RequestHandle delete(android.content.Context,java.lang.String,org.apache.http.Header[],com.loopj.android.http.RequestParams,com.loopj.android.http.ResponseHandlerInterface) -> delete
    com.loopj.android.http.AsyncHttpRequest newAsyncHttpRequest(org.apache.http.impl.client.DefaultHttpClient,org.apache.http.protocol.HttpContext,org.apache.http.client.methods.HttpUriRequest,java.lang.String,com.loopj.android.http.ResponseHandlerInterface,android.content.Context) -> newAsyncHttpRequest
    com.loopj.android.http.RequestHandle sendRequest(org.apache.http.impl.client.DefaultHttpClient,org.apache.http.protocol.HttpContext,org.apache.http.client.methods.HttpUriRequest,java.lang.String,com.loopj.android.http.ResponseHandlerInterface,android.content.Context) -> sendRequest
    void setURLEncodingEnabled(boolean) -> setURLEncodingEnabled
    java.lang.String getUrlWithQueryString(boolean,java.lang.String,com.loopj.android.http.RequestParams) -> getUrlWithQueryString
    boolean isInputStreamGZIPCompressed(java.io.PushbackInputStream) -> isInputStreamGZIPCompressed
    void silentCloseInputStream(java.io.InputStream) -> silentCloseInputStream
    void silentCloseOutputStream(java.io.OutputStream) -> silentCloseOutputStream
    org.apache.http.HttpEntity paramsToEntity(com.loopj.android.http.RequestParams,com.loopj.android.http.ResponseHandlerInterface) -> paramsToEntity
    boolean isUrlEncodingEnabled() -> isUrlEncodingEnabled
    org.apache.http.client.methods.HttpEntityEnclosingRequestBase addEntityToRequestBase(org.apache.http.client.methods.HttpEntityEnclosingRequestBase,org.apache.http.HttpEntity) -> addEntityToRequestBase
    void endEntityViaReflection(org.apache.http.HttpEntity) -> endEntityViaReflection
    java.util.Map access$000(com.loopj.android.http.AsyncHttpClient) -> access$000
    java.util.Map access$100(com.loopj.android.http.AsyncHttpClient) -> access$100
com.loopj.android.http.AsyncHttpClient$1 -> com.loopj.android.http.AsyncHttpClient$1:
    com.loopj.android.http.AsyncHttpClient this$0 -> this$0
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
com.loopj.android.http.AsyncHttpClient$2 -> com.loopj.android.http.AsyncHttpClient$2:
    com.loopj.android.http.AsyncHttpClient this$0 -> this$0
    void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
com.loopj.android.http.AsyncHttpClient$3 -> com.loopj.android.http.AsyncHttpClient$3:
    com.loopj.android.http.AsyncHttpClient this$0 -> this$0
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
com.loopj.android.http.AsyncHttpClient$4 -> com.loopj.android.http.AsyncHttpClient$4:
    android.content.Context val$context -> val$context
    boolean val$mayInterruptIfRunning -> val$mayInterruptIfRunning
    com.loopj.android.http.AsyncHttpClient this$0 -> this$0
    void run() -> run
com.loopj.android.http.AsyncHttpClient$InflatingEntity -> com.loopj.android.http.AsyncHttpClient$InflatingEntity:
    java.io.InputStream wrappedStream -> wrappedStream
    java.io.PushbackInputStream pushbackStream -> pushbackStream
    java.util.zip.GZIPInputStream gzippedStream -> gzippedStream
    java.io.InputStream getContent() -> getContent
    long getContentLength() -> getContentLength
    void consumeContent() -> consumeContent
com.loopj.android.http.AsyncHttpRequest -> com.loopj.android.http.AsyncHttpRequest:
    org.apache.http.impl.client.AbstractHttpClient client -> client
    org.apache.http.protocol.HttpContext context -> context
    org.apache.http.client.methods.HttpUriRequest request -> request
    com.loopj.android.http.ResponseHandlerInterface responseHandler -> responseHandler
    int executionCount -> executionCount
    boolean isCancelled -> isCancelled
    boolean cancelIsNotified -> cancelIsNotified
    boolean isFinished -> isFinished
    boolean isRequestPreProcessed -> isRequestPreProcessed
    void onPreProcessRequest(com.loopj.android.http.AsyncHttpRequest) -> onPreProcessRequest
    void onPostProcessRequest(com.loopj.android.http.AsyncHttpRequest) -> onPostProcessRequest
    void run() -> run
    void makeRequest() -> makeRequest
    void makeRequestWithRetries() -> makeRequestWithRetries
    boolean isCancelled() -> isCancelled
    void sendCancelNotification() -> sendCancelNotification
    boolean isDone() -> isDone
    boolean cancel(boolean) -> cancel
com.loopj.android.http.AsyncHttpResponseHandler -> com.loopj.android.http.AsyncHttpResponseHandler:
    java.lang.String LOG_TAG -> LOG_TAG
    int SUCCESS_MESSAGE -> SUCCESS_MESSAGE
    int FAILURE_MESSAGE -> FAILURE_MESSAGE
    int START_MESSAGE -> START_MESSAGE
    int FINISH_MESSAGE -> FINISH_MESSAGE
    int PROGRESS_MESSAGE -> PROGRESS_MESSAGE
    int RETRY_MESSAGE -> RETRY_MESSAGE
    int CANCEL_MESSAGE -> CANCEL_MESSAGE
    int BUFFER_SIZE -> BUFFER_SIZE
    java.lang.String DEFAULT_CHARSET -> DEFAULT_CHARSET
    java.lang.String UTF8_BOM -> UTF8_BOM
    java.lang.String responseCharset -> responseCharset
    android.os.Handler handler -> handler
    boolean useSynchronousMode -> useSynchronousMode
    java.net.URI requestURI -> requestURI
    org.apache.http.Header[] requestHeaders -> requestHeaders
    android.os.Looper looper -> looper
    java.net.URI getRequestURI() -> getRequestURI
    org.apache.http.Header[] getRequestHeaders() -> getRequestHeaders
    void setRequestURI(java.net.URI) -> setRequestURI
    void setRequestHeaders(org.apache.http.Header[]) -> setRequestHeaders
    boolean getUseSynchronousMode() -> getUseSynchronousMode
    void setUseSynchronousMode(boolean) -> setUseSynchronousMode
    void setCharset(java.lang.String) -> setCharset
    java.lang.String getCharset() -> getCharset
    void onProgress(int,int) -> onProgress
    void onStart() -> onStart
    void onFinish() -> onFinish
    void onPreProcessResponse(com.loopj.android.http.ResponseHandlerInterface,org.apache.http.HttpResponse) -> onPreProcessResponse
    void onPostProcessResponse(com.loopj.android.http.ResponseHandlerInterface,org.apache.http.HttpResponse) -> onPostProcessResponse
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onRetry(int) -> onRetry
    void onCancel() -> onCancel
    void sendProgressMessage(int,int) -> sendProgressMessage
    void sendSuccessMessage(int,org.apache.http.Header[],byte[]) -> sendSuccessMessage
    void sendFailureMessage(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> sendFailureMessage
    void sendStartMessage() -> sendStartMessage
    void sendFinishMessage() -> sendFinishMessage
    void sendRetryMessage(int) -> sendRetryMessage
    void sendCancelMessage() -> sendCancelMessage
    void handleMessage(android.os.Message) -> handleMessage
    void sendMessage(android.os.Message) -> sendMessage
    void postRunnable(java.lang.Runnable) -> postRunnable
    android.os.Message obtainMessage(int,java.lang.Object) -> obtainMessage
    void sendResponseMessage(org.apache.http.HttpResponse) -> sendResponseMessage
    byte[] getResponseData(org.apache.http.HttpEntity) -> getResponseData
com.loopj.android.http.AsyncHttpResponseHandler$ResponderHandler -> com.loopj.android.http.AsyncHttpResponseHandler$ResponderHandler:
    com.loopj.android.http.AsyncHttpResponseHandler mResponder -> mResponder
    void handleMessage(android.os.Message) -> handleMessage
com.loopj.android.http.Base64 -> com.loopj.android.http.Base64:
    int DEFAULT -> DEFAULT
    int NO_PADDING -> NO_PADDING
    int NO_WRAP -> NO_WRAP
    int CRLF -> CRLF
    int URL_SAFE -> URL_SAFE
    int NO_CLOSE -> NO_CLOSE
    byte[] decode(java.lang.String,int) -> decode
    byte[] decode(byte[],int) -> decode
    byte[] decode(byte[],int,int,int) -> decode
    java.lang.String encodeToString(byte[],int) -> encodeToString
    java.lang.String encodeToString(byte[],int,int,int) -> encodeToString
    byte[] encode(byte[],int) -> encode
    byte[] encode(byte[],int,int,int) -> encode
com.loopj.android.http.Base64$Coder -> com.loopj.android.http.Base64$Coder:
    byte[] output -> output
    int op -> op
    boolean process(byte[],int,int,boolean) -> process
    int maxOutputSize(int) -> maxOutputSize
com.loopj.android.http.Base64$Decoder -> com.loopj.android.http.Base64$Decoder:
    int[] DECODE -> DECODE
    int[] DECODE_WEBSAFE -> DECODE_WEBSAFE
    int SKIP -> SKIP
    int EQUALS -> EQUALS
    int state -> state
    int value -> value
    int[] alphabet -> alphabet
    int maxOutputSize(int) -> maxOutputSize
    boolean process(byte[],int,int,boolean) -> process
com.loopj.android.http.Base64$Encoder -> com.loopj.android.http.Base64$Encoder:
    int LINE_GROUPS -> LINE_GROUPS
    byte[] ENCODE -> ENCODE
    byte[] ENCODE_WEBSAFE -> ENCODE_WEBSAFE
    byte[] tail -> tail
    int tailLen -> tailLen
    int count -> count
    boolean do_padding -> do_padding
    boolean do_newline -> do_newline
    boolean do_cr -> do_cr
    byte[] alphabet -> alphabet
    int maxOutputSize(int) -> maxOutputSize
    boolean process(byte[],int,int,boolean) -> process
com.loopj.android.http.Base64DataException -> com.loopj.android.http.Base64DataException:
com.loopj.android.http.Base64OutputStream -> com.loopj.android.http.Base64OutputStream:
    com.loopj.android.http.Base64$Coder coder -> coder
    int flags -> flags
    byte[] buffer -> buffer
    int bpos -> bpos
    byte[] EMPTY -> EMPTY
    void write(int) -> write
    void flushBuffer() -> flushBuffer
    void write(byte[],int,int) -> write
    void close() -> close
    void internalWrite(byte[],int,int,boolean) -> internalWrite
    byte[] embiggen(byte[],int) -> embiggen
com.loopj.android.http.BaseJsonHttpResponseHandler -> com.loopj.android.http.BaseJsonHttpResponseHandler:
    java.lang.String LOG_TAG -> LOG_TAG
    void onSuccess(int,org.apache.http.Header[],java.lang.String,java.lang.Object) -> onSuccess
    void onFailure(int,org.apache.http.Header[],java.lang.Throwable,java.lang.String,java.lang.Object) -> onFailure
    void onSuccess(int,org.apache.http.Header[],java.lang.String) -> onSuccess
    void onFailure(int,org.apache.http.Header[],java.lang.String,java.lang.Throwable) -> onFailure
    java.lang.Object parseResponse(java.lang.String,boolean) -> parseResponse
com.loopj.android.http.BaseJsonHttpResponseHandler$1 -> com.loopj.android.http.BaseJsonHttpResponseHandler$1:
    java.lang.String val$responseString -> val$responseString
    int val$statusCode -> val$statusCode
    org.apache.http.Header[] val$headers -> val$headers
    com.loopj.android.http.BaseJsonHttpResponseHandler this$0 -> this$0
    void run() -> run
com.loopj.android.http.BaseJsonHttpResponseHandler$1$1 -> com.loopj.android.http.BaseJsonHttpResponseHandler$1$1:
    java.lang.Object val$jsonResponse -> val$jsonResponse
    com.loopj.android.http.BaseJsonHttpResponseHandler$1 this$1 -> this$1
    void run() -> run
com.loopj.android.http.BaseJsonHttpResponseHandler$1$2 -> com.loopj.android.http.BaseJsonHttpResponseHandler$1$2:
    java.lang.Throwable val$t -> val$t
    com.loopj.android.http.BaseJsonHttpResponseHandler$1 this$1 -> this$1
    void run() -> run
com.loopj.android.http.BaseJsonHttpResponseHandler$2 -> com.loopj.android.http.BaseJsonHttpResponseHandler$2:
    java.lang.String val$responseString -> val$responseString
    int val$statusCode -> val$statusCode
    org.apache.http.Header[] val$headers -> val$headers
    java.lang.Throwable val$throwable -> val$throwable
    com.loopj.android.http.BaseJsonHttpResponseHandler this$0 -> this$0
    void run() -> run
com.loopj.android.http.BaseJsonHttpResponseHandler$2$1 -> com.loopj.android.http.BaseJsonHttpResponseHandler$2$1:
    java.lang.Object val$jsonResponse -> val$jsonResponse
    com.loopj.android.http.BaseJsonHttpResponseHandler$2 this$1 -> this$1
    void run() -> run
com.loopj.android.http.BaseJsonHttpResponseHandler$2$2 -> com.loopj.android.http.BaseJsonHttpResponseHandler$2$2:
    com.loopj.android.http.BaseJsonHttpResponseHandler$2 this$1 -> this$1
    void run() -> run
com.loopj.android.http.BinaryHttpResponseHandler -> com.loopj.android.http.BinaryHttpResponseHandler:
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.String[] mAllowedContentTypes -> mAllowedContentTypes
    java.lang.String[] getAllowedContentTypes() -> getAllowedContentTypes
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void sendResponseMessage(org.apache.http.HttpResponse) -> sendResponseMessage
com.loopj.android.http.BuildConfig -> com.loopj.android.http.BuildConfig:
    boolean DEBUG -> DEBUG
    java.lang.String PACKAGE_NAME -> PACKAGE_NAME
    java.lang.String BUILD_TYPE -> BUILD_TYPE
    java.lang.String FLAVOR -> FLAVOR
    int VERSION_CODE -> VERSION_CODE
    java.lang.String VERSION_NAME -> VERSION_NAME
com.loopj.android.http.DataAsyncHttpResponseHandler -> com.loopj.android.http.DataAsyncHttpResponseHandler:
    java.lang.String LOG_TAG -> LOG_TAG
    int PROGRESS_DATA_MESSAGE -> PROGRESS_DATA_MESSAGE
    void onProgressData(byte[]) -> onProgressData
    void sendProgressDataMessage(byte[]) -> sendProgressDataMessage
    void handleMessage(android.os.Message) -> handleMessage
    byte[] getResponseData(org.apache.http.HttpEntity) -> getResponseData
    byte[] copyOfRange(byte[],int,int) -> copyOfRange
com.loopj.android.http.FileAsyncHttpResponseHandler -> com.loopj.android.http.FileAsyncHttpResponseHandler:
    java.io.File mFile -> mFile
    boolean append -> append
    java.lang.String LOG_TAG -> LOG_TAG
    boolean $assertionsDisabled -> $assertionsDisabled
    boolean deleteTargetFile() -> deleteTargetFile
    java.io.File getTemporaryFile(android.content.Context) -> getTemporaryFile
    java.io.File getTargetFile() -> getTargetFile
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onFailure(int,org.apache.http.Header[],java.lang.Throwable,java.io.File) -> onFailure
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onSuccess(int,org.apache.http.Header[],java.io.File) -> onSuccess
    byte[] getResponseData(org.apache.http.HttpEntity) -> getResponseData
com.loopj.android.http.JsonHttpResponseHandler -> com.loopj.android.http.JsonHttpResponseHandler:
    java.lang.String LOG_TAG -> LOG_TAG
    void onSuccess(int,org.apache.http.Header[],org.json.JSONObject) -> onSuccess
    void onSuccess(int,org.apache.http.Header[],org.json.JSONArray) -> onSuccess
    void onFailure(int,org.apache.http.Header[],java.lang.Throwable,org.json.JSONObject) -> onFailure
    void onFailure(int,org.apache.http.Header[],java.lang.Throwable,org.json.JSONArray) -> onFailure
    void onFailure(int,org.apache.http.Header[],java.lang.String,java.lang.Throwable) -> onFailure
    void onSuccess(int,org.apache.http.Header[],java.lang.String) -> onSuccess
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    java.lang.Object parseResponse(byte[]) -> parseResponse
com.loopj.android.http.JsonHttpResponseHandler$1 -> com.loopj.android.http.JsonHttpResponseHandler$1:
    byte[] val$responseBytes -> val$responseBytes
    int val$statusCode -> val$statusCode
    org.apache.http.Header[] val$headers -> val$headers
    com.loopj.android.http.JsonHttpResponseHandler this$0 -> this$0
    void run() -> run
com.loopj.android.http.JsonHttpResponseHandler$1$1 -> com.loopj.android.http.JsonHttpResponseHandler$1$1:
    java.lang.Object val$jsonResponse -> val$jsonResponse
    com.loopj.android.http.JsonHttpResponseHandler$1 this$1 -> this$1
    void run() -> run
com.loopj.android.http.JsonHttpResponseHandler$1$2 -> com.loopj.android.http.JsonHttpResponseHandler$1$2:
    org.json.JSONException val$ex -> val$ex
    com.loopj.android.http.JsonHttpResponseHandler$1 this$1 -> this$1
    void run() -> run
com.loopj.android.http.JsonHttpResponseHandler$2 -> com.loopj.android.http.JsonHttpResponseHandler$2:
    byte[] val$responseBytes -> val$responseBytes
    int val$statusCode -> val$statusCode
    org.apache.http.Header[] val$headers -> val$headers
    java.lang.Throwable val$throwable -> val$throwable
    com.loopj.android.http.JsonHttpResponseHandler this$0 -> this$0
    void run() -> run
com.loopj.android.http.JsonHttpResponseHandler$2$1 -> com.loopj.android.http.JsonHttpResponseHandler$2$1:
    java.lang.Object val$jsonResponse -> val$jsonResponse
    com.loopj.android.http.JsonHttpResponseHandler$2 this$1 -> this$1
    void run() -> run
com.loopj.android.http.JsonHttpResponseHandler$2$2 -> com.loopj.android.http.JsonHttpResponseHandler$2$2:
    org.json.JSONException val$ex -> val$ex
    com.loopj.android.http.JsonHttpResponseHandler$2 this$1 -> this$1
    void run() -> run
com.loopj.android.http.JsonStreamerEntity -> com.loopj.android.http.JsonStreamerEntity:
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.UnsupportedOperationException ERR_UNSUPPORTED -> ERR_UNSUPPORTED
    int BUFFER_SIZE -> BUFFER_SIZE
    byte[] buffer -> buffer
    java.lang.StringBuilder BUILDER -> BUILDER
    byte[] JSON_TRUE -> JSON_TRUE
    byte[] JSON_FALSE -> JSON_FALSE
    byte[] JSON_NULL -> JSON_NULL
    byte[] STREAM_NAME -> STREAM_NAME
    byte[] STREAM_TYPE -> STREAM_TYPE
    byte[] STREAM_CONTENTS -> STREAM_CONTENTS
    byte[] STREAM_ELAPSED -> STREAM_ELAPSED
    org.apache.http.Header HEADER_JSON_CONTENT -> HEADER_JSON_CONTENT
    org.apache.http.Header HEADER_GZIP_ENCODING -> HEADER_GZIP_ENCODING
    java.util.Map jsonParams -> jsonParams
    org.apache.http.Header contentEncoding -> contentEncoding
    com.loopj.android.http.ResponseHandlerInterface progressHandler -> progressHandler
    void addPart(java.lang.String,java.lang.Object) -> addPart
    boolean isRepeatable() -> isRepeatable
    boolean isChunked() -> isChunked
    boolean isStreaming() -> isStreaming
    long getContentLength() -> getContentLength
    org.apache.http.Header getContentEncoding() -> getContentEncoding
    org.apache.http.Header getContentType() -> getContentType
    void consumeContent() -> consumeContent
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
    void writeToFromStream(java.io.OutputStream,com.loopj.android.http.RequestParams$StreamWrapper) -> writeToFromStream
    void writeToFromFile(java.io.OutputStream,com.loopj.android.http.RequestParams$FileWrapper) -> writeToFromFile
    void writeMetaData(java.io.OutputStream,java.lang.String,java.lang.String) -> writeMetaData
    void endMetaData(java.io.OutputStream) -> endMetaData
    byte[] escape(java.lang.String) -> escape
com.loopj.android.http.JsonValueInterface -> com.loopj.android.http.JsonValueInterface:
    byte[] getEscapedJsonValue() -> getEscapedJsonValue
com.loopj.android.http.MyRedirectHandler -> com.loopj.android.http.MyRedirectHandler:
    java.lang.String REDIRECT_LOCATIONS -> REDIRECT_LOCATIONS
    boolean enableRedirects -> enableRedirects
    boolean isRedirectRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isRedirectRequested
    java.net.URI getLocationURI(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getLocationURI
com.loopj.android.http.MySSLSocketFactory -> com.loopj.android.http.MySSLSocketFactory:
    javax.net.ssl.SSLContext sslContext -> sslContext
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    java.net.Socket createSocket() -> createSocket
    void fixHttpsURLConnection() -> fixHttpsURLConnection
    java.security.KeyStore getKeystoreOfCA(java.io.InputStream) -> getKeystoreOfCA
    java.security.KeyStore getKeystore() -> getKeystore
    org.apache.http.conn.ssl.SSLSocketFactory getFixedSocketFactory() -> getFixedSocketFactory
    org.apache.http.impl.client.DefaultHttpClient getNewHttpClient(java.security.KeyStore) -> getNewHttpClient
com.loopj.android.http.MySSLSocketFactory$1 -> com.loopj.android.http.MySSLSocketFactory$1:
    com.loopj.android.http.MySSLSocketFactory this$0 -> this$0
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
com.loopj.android.http.PersistentCookieStore -> com.loopj.android.http.PersistentCookieStore:
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.String COOKIE_PREFS -> COOKIE_PREFS
    java.lang.String COOKIE_NAME_STORE -> COOKIE_NAME_STORE
    java.lang.String COOKIE_NAME_PREFIX -> COOKIE_NAME_PREFIX
    boolean omitNonPersistentCookies -> omitNonPersistentCookies
    java.util.concurrent.ConcurrentHashMap cookies -> cookies
    android.content.SharedPreferences cookiePrefs -> cookiePrefs
    void addCookie(org.apache.http.cookie.Cookie) -> addCookie
    void clear() -> clear
    boolean clearExpired(java.util.Date) -> clearExpired
    java.util.List getCookies() -> getCookies
    void setOmitNonPersistentCookies(boolean) -> setOmitNonPersistentCookies
    void deleteCookie(org.apache.http.cookie.Cookie) -> deleteCookie
    java.lang.String encodeCookie(com.loopj.android.http.SerializableCookie) -> encodeCookie
    org.apache.http.cookie.Cookie decodeCookie(java.lang.String) -> decodeCookie
    java.lang.String byteArrayToHexString(byte[]) -> byteArrayToHexString
    byte[] hexStringToByteArray(java.lang.String) -> hexStringToByteArray
com.loopj.android.http.PreemtiveAuthorizationHttpRequestInterceptor -> com.loopj.android.http.PreemtiveAuthorizationHttpRequestInterceptor:
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
com.loopj.android.http.RangeFileAsyncHttpResponseHandler -> com.loopj.android.http.RangeFileAsyncHttpResponseHandler:
    java.lang.String LOG_TAG -> LOG_TAG
    long current -> current
    boolean append -> append
    void sendResponseMessage(org.apache.http.HttpResponse) -> sendResponseMessage
    byte[] getResponseData(org.apache.http.HttpEntity) -> getResponseData
    void updateRequestHeaders(org.apache.http.client.methods.HttpUriRequest) -> updateRequestHeaders
com.loopj.android.http.RequestHandle -> com.loopj.android.http.RequestHandle:
    java.lang.ref.WeakReference request -> request
    boolean cancel(boolean) -> cancel
    boolean isFinished() -> isFinished
    boolean isCancelled() -> isCancelled
    boolean shouldBeGarbageCollected() -> shouldBeGarbageCollected
com.loopj.android.http.RequestParams -> com.loopj.android.http.RequestParams:
    java.lang.String APPLICATION_OCTET_STREAM -> APPLICATION_OCTET_STREAM
    java.lang.String APPLICATION_JSON -> APPLICATION_JSON
    java.lang.String LOG_TAG -> LOG_TAG
    boolean isRepeatable -> isRepeatable
    boolean useJsonStreamer -> useJsonStreamer
    boolean autoCloseInputStreams -> autoCloseInputStreams
    java.util.concurrent.ConcurrentHashMap urlParams -> urlParams
    java.util.concurrent.ConcurrentHashMap streamParams -> streamParams
    java.util.concurrent.ConcurrentHashMap fileParams -> fileParams
    java.util.concurrent.ConcurrentHashMap urlParamsWithObjects -> urlParamsWithObjects
    java.lang.String contentEncoding -> contentEncoding
    void setContentEncoding(java.lang.String) -> setContentEncoding
    void put(java.lang.String,java.lang.String) -> put
    void put(java.lang.String,java.io.File) -> put
    void put(java.lang.String,java.lang.String,java.io.File) -> put
    void put(java.lang.String,java.io.File,java.lang.String) -> put
    void put(java.lang.String,java.io.File,java.lang.String,java.lang.String) -> put
    void put(java.lang.String,java.io.InputStream) -> put
    void put(java.lang.String,java.io.InputStream,java.lang.String) -> put
    void put(java.lang.String,java.io.InputStream,java.lang.String,java.lang.String) -> put
    void put(java.lang.String,java.io.InputStream,java.lang.String,java.lang.String,boolean) -> put
    void put(java.lang.String,java.lang.Object) -> put
    void put(java.lang.String,int) -> put
    void put(java.lang.String,long) -> put
    void add(java.lang.String,java.lang.String) -> add
    void remove(java.lang.String) -> remove
    boolean has(java.lang.String) -> has
    java.lang.String toString() -> toString
    void setHttpEntityIsRepeatable(boolean) -> setHttpEntityIsRepeatable
    void setUseJsonStreamer(boolean) -> setUseJsonStreamer
    void setAutoCloseInputStreams(boolean) -> setAutoCloseInputStreams
    org.apache.http.HttpEntity getEntity(com.loopj.android.http.ResponseHandlerInterface) -> getEntity
    org.apache.http.HttpEntity createJsonStreamerEntity(com.loopj.android.http.ResponseHandlerInterface) -> createJsonStreamerEntity
    org.apache.http.HttpEntity createFormEntity() -> createFormEntity
    org.apache.http.HttpEntity createMultipartEntity(com.loopj.android.http.ResponseHandlerInterface) -> createMultipartEntity
    java.util.List getParamsList() -> getParamsList
    java.util.List getParamsList(java.lang.String,java.lang.Object) -> getParamsList
    java.lang.String getParamString() -> getParamString
com.loopj.android.http.RequestParams$1 -> com.loopj.android.http.RequestParams$1:
    java.lang.String val$key -> val$key
    java.lang.String val$value -> val$value
com.loopj.android.http.RequestParams$FileWrapper -> com.loopj.android.http.RequestParams$FileWrapper:
    java.io.File file -> file
    java.lang.String contentType -> contentType
    java.lang.String customFileName -> customFileName
com.loopj.android.http.RequestParams$StreamWrapper -> com.loopj.android.http.RequestParams$StreamWrapper:
    java.io.InputStream inputStream -> inputStream
    java.lang.String name -> name
    java.lang.String contentType -> contentType
    boolean autoClose -> autoClose
    com.loopj.android.http.RequestParams$StreamWrapper newInstance(java.io.InputStream,java.lang.String,java.lang.String,boolean) -> newInstance
com.loopj.android.http.ResponseHandlerInterface -> com.loopj.android.http.ResponseHandlerInterface:
    void sendResponseMessage(org.apache.http.HttpResponse) -> sendResponseMessage
    void sendStartMessage() -> sendStartMessage
    void sendFinishMessage() -> sendFinishMessage
    void sendProgressMessage(int,int) -> sendProgressMessage
    void sendCancelMessage() -> sendCancelMessage
    void sendSuccessMessage(int,org.apache.http.Header[],byte[]) -> sendSuccessMessage
    void sendFailureMessage(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> sendFailureMessage
    void sendRetryMessage(int) -> sendRetryMessage
    java.net.URI getRequestURI() -> getRequestURI
    org.apache.http.Header[] getRequestHeaders() -> getRequestHeaders
    void setRequestURI(java.net.URI) -> setRequestURI
    void setRequestHeaders(org.apache.http.Header[]) -> setRequestHeaders
    void setUseSynchronousMode(boolean) -> setUseSynchronousMode
    boolean getUseSynchronousMode() -> getUseSynchronousMode
    void onPreProcessResponse(com.loopj.android.http.ResponseHandlerInterface,org.apache.http.HttpResponse) -> onPreProcessResponse
    void onPostProcessResponse(com.loopj.android.http.ResponseHandlerInterface,org.apache.http.HttpResponse) -> onPostProcessResponse
com.loopj.android.http.RetryHandler -> com.loopj.android.http.RetryHandler:
    java.util.HashSet exceptionWhitelist -> exceptionWhitelist
    java.util.HashSet exceptionBlacklist -> exceptionBlacklist
    int maxRetries -> maxRetries
    int retrySleepTimeMS -> retrySleepTimeMS
    boolean retryRequest(java.io.IOException,int,org.apache.http.protocol.HttpContext) -> retryRequest
    void addClassToWhitelist(java.lang.Class) -> addClassToWhitelist
    void addClassToBlacklist(java.lang.Class) -> addClassToBlacklist
    boolean isInList(java.util.HashSet,java.lang.Throwable) -> isInList
com.loopj.android.http.SaxAsyncHttpResponseHandler -> com.loopj.android.http.SaxAsyncHttpResponseHandler:
    org.xml.sax.helpers.DefaultHandler handler -> handler
    java.lang.String LOG_TAG -> LOG_TAG
    byte[] getResponseData(org.apache.http.HttpEntity) -> getResponseData
    void onSuccess(int,org.apache.http.Header[],org.xml.sax.helpers.DefaultHandler) -> onSuccess
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],org.xml.sax.helpers.DefaultHandler) -> onFailure
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
com.loopj.android.http.SerializableCookie -> com.loopj.android.http.SerializableCookie:
    long serialVersionUID -> serialVersionUID
    org.apache.http.cookie.Cookie cookie -> cookie
    org.apache.http.impl.cookie.BasicClientCookie clientCookie -> clientCookie
    org.apache.http.cookie.Cookie getCookie() -> getCookie
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
com.loopj.android.http.SimpleMultipartEntity -> com.loopj.android.http.SimpleMultipartEntity:
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.String STR_CR_LF -> STR_CR_LF
    byte[] CR_LF -> CR_LF
    byte[] TRANSFER_ENCODING_BINARY -> TRANSFER_ENCODING_BINARY
    char[] MULTIPART_CHARS -> MULTIPART_CHARS
    java.lang.String boundary -> boundary
    byte[] boundaryLine -> boundaryLine
    byte[] boundaryEnd -> boundaryEnd
    boolean isRepeatable -> isRepeatable
    java.util.List fileParts -> fileParts
    java.io.ByteArrayOutputStream out -> out
    com.loopj.android.http.ResponseHandlerInterface progressHandler -> progressHandler
    int bytesWritten -> bytesWritten
    int totalSize -> totalSize
    void addPart(java.lang.String,java.lang.String,java.lang.String) -> addPart
    void addPartWithCharset(java.lang.String,java.lang.String,java.lang.String) -> addPartWithCharset
    void addPart(java.lang.String,java.lang.String) -> addPart
    void addPart(java.lang.String,java.io.File) -> addPart
    void addPart(java.lang.String,java.io.File,java.lang.String) -> addPart
    void addPart(java.lang.String,java.io.File,java.lang.String,java.lang.String) -> addPart
    void addPart(java.lang.String,java.lang.String,java.io.InputStream,java.lang.String) -> addPart
    java.lang.String normalizeContentType(java.lang.String) -> normalizeContentType
    byte[] createContentType(java.lang.String) -> createContentType
    byte[] createContentDisposition(java.lang.String) -> createContentDisposition
    byte[] createContentDisposition(java.lang.String,java.lang.String) -> createContentDisposition
    void updateProgress(int) -> updateProgress
    long getContentLength() -> getContentLength
    org.apache.http.Header getContentType() -> getContentType
    boolean isChunked() -> isChunked
    void setIsRepeatable(boolean) -> setIsRepeatable
    boolean isRepeatable() -> isRepeatable
    boolean isStreaming() -> isStreaming
    void writeTo(java.io.OutputStream) -> writeTo
    org.apache.http.Header getContentEncoding() -> getContentEncoding
    void consumeContent() -> consumeContent
    java.io.InputStream getContent() -> getContent
    byte[] access$000(com.loopj.android.http.SimpleMultipartEntity) -> access$000
    byte[] access$100(com.loopj.android.http.SimpleMultipartEntity,java.lang.String,java.lang.String) -> access$100
    byte[] access$200(com.loopj.android.http.SimpleMultipartEntity,java.lang.String) -> access$200
    byte[] access$300() -> access$300
    byte[] access$400() -> access$400
    void access$500(com.loopj.android.http.SimpleMultipartEntity,int) -> access$500
com.loopj.android.http.SimpleMultipartEntity$FilePart -> com.loopj.android.http.SimpleMultipartEntity$FilePart:
    java.io.File file -> file
    byte[] header -> header
    com.loopj.android.http.SimpleMultipartEntity this$0 -> this$0
    byte[] createHeader(java.lang.String,java.lang.String,java.lang.String) -> createHeader
    long getTotalLength() -> getTotalLength
    void writeTo(java.io.OutputStream) -> writeTo
com.loopj.android.http.SyncHttpClient -> com.loopj.android.http.SyncHttpClient:
    com.loopj.android.http.RequestHandle sendRequest(org.apache.http.impl.client.DefaultHttpClient,org.apache.http.protocol.HttpContext,org.apache.http.client.methods.HttpUriRequest,java.lang.String,com.loopj.android.http.ResponseHandlerInterface,android.content.Context) -> sendRequest
com.loopj.android.http.TextHttpResponseHandler -> com.loopj.android.http.TextHttpResponseHandler:
    java.lang.String LOG_TAG -> LOG_TAG
    void onFailure(int,org.apache.http.Header[],java.lang.String,java.lang.Throwable) -> onFailure
    void onSuccess(int,org.apache.http.Header[],java.lang.String) -> onSuccess
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    java.lang.String getResponseString(byte[],java.lang.String) -> getResponseString
javax.persistence.Access -> javax.persistence.Access:
    javax.persistence.AccessType value() -> value
javax.persistence.AccessType -> javax.persistence.AccessType:
    javax.persistence.AccessType FIELD -> FIELD
    javax.persistence.AccessType PROPERTY -> PROPERTY
    javax.persistence.AccessType[] $VALUES -> $VALUES
    javax.persistence.AccessType[] values() -> values
    javax.persistence.AccessType valueOf(java.lang.String) -> valueOf
javax.persistence.AssociationOverride -> javax.persistence.AssociationOverride:
    java.lang.String name() -> name
    javax.persistence.JoinColumn[] joinColumns() -> joinColumns
    javax.persistence.JoinTable joinTable() -> joinTable
javax.persistence.AssociationOverrides -> javax.persistence.AssociationOverrides:
    javax.persistence.AssociationOverride[] value() -> value
javax.persistence.AttributeOverride -> javax.persistence.AttributeOverride:
    java.lang.String name() -> name
    javax.persistence.Column column() -> column
javax.persistence.AttributeOverrides -> javax.persistence.AttributeOverrides:
    javax.persistence.AttributeOverride[] value() -> value
javax.persistence.Basic -> javax.persistence.Basic:
    javax.persistence.FetchType fetch() -> fetch
    boolean optional() -> optional
javax.persistence.Cache -> javax.persistence.Cache:
    boolean contains(java.lang.Class,java.lang.Object) -> contains
    void evict(java.lang.Class,java.lang.Object) -> evict
    void evict(java.lang.Class) -> evict
    void evictAll() -> evictAll
javax.persistence.CacheRetrieveMode -> javax.persistence.CacheRetrieveMode:
    javax.persistence.CacheRetrieveMode USE -> USE
    javax.persistence.CacheRetrieveMode BYPASS -> BYPASS
    javax.persistence.CacheRetrieveMode[] $VALUES -> $VALUES
    javax.persistence.CacheRetrieveMode[] values() -> values
    javax.persistence.CacheRetrieveMode valueOf(java.lang.String) -> valueOf
javax.persistence.CacheStoreMode -> javax.persistence.CacheStoreMode:
    javax.persistence.CacheStoreMode USE -> USE
    javax.persistence.CacheStoreMode BYPASS -> BYPASS
    javax.persistence.CacheStoreMode REFRESH -> REFRESH
    javax.persistence.CacheStoreMode[] $VALUES -> $VALUES
    javax.persistence.CacheStoreMode[] values() -> values
    javax.persistence.CacheStoreMode valueOf(java.lang.String) -> valueOf
javax.persistence.Cacheable -> javax.persistence.Cacheable:
    boolean value() -> value
javax.persistence.CascadeType -> javax.persistence.CascadeType:
    javax.persistence.CascadeType ALL -> ALL
    javax.persistence.CascadeType PERSIST -> PERSIST
    javax.persistence.CascadeType MERGE -> MERGE
    javax.persistence.CascadeType REMOVE -> REMOVE
    javax.persistence.CascadeType REFRESH -> REFRESH
    javax.persistence.CascadeType DETACH -> DETACH
    javax.persistence.CascadeType[] $VALUES -> $VALUES
    javax.persistence.CascadeType[] values() -> values
    javax.persistence.CascadeType valueOf(java.lang.String) -> valueOf
javax.persistence.CollectionTable -> javax.persistence.CollectionTable:
    java.lang.String name() -> name
    java.lang.String catalog() -> catalog
    java.lang.String schema() -> schema
    javax.persistence.JoinColumn[] joinColumns() -> joinColumns
    javax.persistence.UniqueConstraint[] uniqueConstraints() -> uniqueConstraints
javax.persistence.Column -> javax.persistence.Column:
    java.lang.String name() -> name
    boolean unique() -> unique
    boolean nullable() -> nullable
    boolean insertable() -> insertable
    boolean updatable() -> updatable
    java.lang.String columnDefinition() -> columnDefinition
    java.lang.String table() -> table
    int length() -> length
    int precision() -> precision
    int scale() -> scale
javax.persistence.ColumnResult -> javax.persistence.ColumnResult:
    java.lang.String name() -> name
javax.persistence.DiscriminatorColumn -> javax.persistence.DiscriminatorColumn:
    java.lang.String name() -> name
    javax.persistence.DiscriminatorType discriminatorType() -> discriminatorType
    java.lang.String columnDefinition() -> columnDefinition
    int length() -> length
javax.persistence.DiscriminatorType -> javax.persistence.DiscriminatorType:
    javax.persistence.DiscriminatorType STRING -> STRING
    javax.persistence.DiscriminatorType CHAR -> CHAR
    javax.persistence.DiscriminatorType INTEGER -> INTEGER
    javax.persistence.DiscriminatorType[] $VALUES -> $VALUES
    javax.persistence.DiscriminatorType[] values() -> values
    javax.persistence.DiscriminatorType valueOf(java.lang.String) -> valueOf
javax.persistence.DiscriminatorValue -> javax.persistence.DiscriminatorValue:
    java.lang.String value() -> value
javax.persistence.ElementCollection -> javax.persistence.ElementCollection:
    java.lang.Class targetClass() -> targetClass
    javax.persistence.FetchType fetch() -> fetch
javax.persistence.Embeddable -> javax.persistence.Embeddable:
javax.persistence.Embedded -> javax.persistence.Embedded:
javax.persistence.EmbeddedId -> javax.persistence.EmbeddedId:
javax.persistence.Entity -> javax.persistence.Entity:
    java.lang.String name() -> name
javax.persistence.EntityExistsException -> javax.persistence.EntityExistsException:
javax.persistence.EntityListeners -> javax.persistence.EntityListeners:
    java.lang.Class[] value() -> value
javax.persistence.EntityManager -> javax.persistence.EntityManager:
    void persist(java.lang.Object) -> persist
    java.lang.Object merge(java.lang.Object) -> merge
    void remove(java.lang.Object) -> remove
    java.lang.Object find(java.lang.Class,java.lang.Object) -> find
    java.lang.Object find(java.lang.Class,java.lang.Object,java.util.Map) -> find
    java.lang.Object find(java.lang.Class,java.lang.Object,javax.persistence.LockModeType) -> find
    java.lang.Object find(java.lang.Class,java.lang.Object,javax.persistence.LockModeType,java.util.Map) -> find
    java.lang.Object getReference(java.lang.Class,java.lang.Object) -> getReference
    void flush() -> flush
    void setFlushMode(javax.persistence.FlushModeType) -> setFlushMode
    javax.persistence.FlushModeType getFlushMode() -> getFlushMode
    void lock(java.lang.Object,javax.persistence.LockModeType) -> lock
    void lock(java.lang.Object,javax.persistence.LockModeType,java.util.Map) -> lock
    void refresh(java.lang.Object) -> refresh
    void refresh(java.lang.Object,java.util.Map) -> refresh
    void refresh(java.lang.Object,javax.persistence.LockModeType) -> refresh
    void refresh(java.lang.Object,javax.persistence.LockModeType,java.util.Map) -> refresh
    void clear() -> clear
    void detach(java.lang.Object) -> detach
    boolean contains(java.lang.Object) -> contains
    javax.persistence.LockModeType getLockMode(java.lang.Object) -> getLockMode
    void setProperty(java.lang.String,java.lang.Object) -> setProperty
    java.util.Map getProperties() -> getProperties
    javax.persistence.Query createQuery(java.lang.String) -> createQuery
    javax.persistence.TypedQuery createQuery(javax.persistence.criteria.CriteriaQuery) -> createQuery
    javax.persistence.TypedQuery createQuery(java.lang.String,java.lang.Class) -> createQuery
    javax.persistence.Query createNamedQuery(java.lang.String) -> createNamedQuery
    javax.persistence.TypedQuery createNamedQuery(java.lang.String,java.lang.Class) -> createNamedQuery
    javax.persistence.Query createNativeQuery(java.lang.String) -> createNativeQuery
    javax.persistence.Query createNativeQuery(java.lang.String,java.lang.Class) -> createNativeQuery
    javax.persistence.Query createNativeQuery(java.lang.String,java.lang.String) -> createNativeQuery
    void joinTransaction() -> joinTransaction
    java.lang.Object unwrap(java.lang.Class) -> unwrap
    java.lang.Object getDelegate() -> getDelegate
    void close() -> close
    boolean isOpen() -> isOpen
    javax.persistence.EntityTransaction getTransaction() -> getTransaction
    javax.persistence.EntityManagerFactory getEntityManagerFactory() -> getEntityManagerFactory
    javax.persistence.criteria.CriteriaBuilder getCriteriaBuilder() -> getCriteriaBuilder
    javax.persistence.metamodel.Metamodel getMetamodel() -> getMetamodel
javax.persistence.EntityManagerFactory -> javax.persistence.EntityManagerFactory:
    javax.persistence.EntityManager createEntityManager() -> createEntityManager
    javax.persistence.EntityManager createEntityManager(java.util.Map) -> createEntityManager
    javax.persistence.criteria.CriteriaBuilder getCriteriaBuilder() -> getCriteriaBuilder
    javax.persistence.metamodel.Metamodel getMetamodel() -> getMetamodel
    boolean isOpen() -> isOpen
    void close() -> close
    java.util.Map getProperties() -> getProperties
    javax.persistence.Cache getCache() -> getCache
    javax.persistence.PersistenceUnitUtil getPersistenceUnitUtil() -> getPersistenceUnitUtil
javax.persistence.EntityNotFoundException -> javax.persistence.EntityNotFoundException:
javax.persistence.EntityResult -> javax.persistence.EntityResult:
    java.lang.Class entityClass() -> entityClass
    javax.persistence.FieldResult[] fields() -> fields
    java.lang.String discriminatorColumn() -> discriminatorColumn
javax.persistence.EntityTransaction -> javax.persistence.EntityTransaction:
    void begin() -> begin
    void commit() -> commit
    void rollback() -> rollback
    void setRollbackOnly() -> setRollbackOnly
    boolean getRollbackOnly() -> getRollbackOnly
    boolean isActive() -> isActive
javax.persistence.EnumType -> javax.persistence.EnumType:
    javax.persistence.EnumType ORDINAL -> ORDINAL
    javax.persistence.EnumType STRING -> STRING
    javax.persistence.EnumType[] $VALUES -> $VALUES
    javax.persistence.EnumType[] values() -> values
    javax.persistence.EnumType valueOf(java.lang.String) -> valueOf
javax.persistence.Enumerated -> javax.persistence.Enumerated:
    javax.persistence.EnumType value() -> value
javax.persistence.ExcludeDefaultListeners -> javax.persistence.ExcludeDefaultListeners:
javax.persistence.ExcludeSuperclassListeners -> javax.persistence.ExcludeSuperclassListeners:
javax.persistence.FetchType -> javax.persistence.FetchType:
    javax.persistence.FetchType LAZY -> LAZY
    javax.persistence.FetchType EAGER -> EAGER
    javax.persistence.FetchType[] $VALUES -> $VALUES
    javax.persistence.FetchType[] values() -> values
    javax.persistence.FetchType valueOf(java.lang.String) -> valueOf
javax.persistence.FieldResult -> javax.persistence.FieldResult:
    java.lang.String name() -> name
    java.lang.String column() -> column
javax.persistence.FlushModeType -> javax.persistence.FlushModeType:
    javax.persistence.FlushModeType COMMIT -> COMMIT
    javax.persistence.FlushModeType AUTO -> AUTO
    javax.persistence.FlushModeType[] $VALUES -> $VALUES
    javax.persistence.FlushModeType[] values() -> values
    javax.persistence.FlushModeType valueOf(java.lang.String) -> valueOf
javax.persistence.GeneratedValue -> javax.persistence.GeneratedValue:
    javax.persistence.GenerationType strategy() -> strategy
    java.lang.String generator() -> generator
javax.persistence.GenerationType -> javax.persistence.GenerationType:
    javax.persistence.GenerationType TABLE -> TABLE
    javax.persistence.GenerationType SEQUENCE -> SEQUENCE
    javax.persistence.GenerationType IDENTITY -> IDENTITY
    javax.persistence.GenerationType AUTO -> AUTO
    javax.persistence.GenerationType[] $VALUES -> $VALUES
    javax.persistence.GenerationType[] values() -> values
    javax.persistence.GenerationType valueOf(java.lang.String) -> valueOf
javax.persistence.Id -> javax.persistence.Id:
javax.persistence.IdClass -> javax.persistence.IdClass:
    java.lang.Class value() -> value
javax.persistence.Inheritance -> javax.persistence.Inheritance:
    javax.persistence.InheritanceType strategy() -> strategy
javax.persistence.InheritanceType -> javax.persistence.InheritanceType:
    javax.persistence.InheritanceType SINGLE_TABLE -> SINGLE_TABLE
    javax.persistence.InheritanceType TABLE_PER_CLASS -> TABLE_PER_CLASS
    javax.persistence.InheritanceType JOINED -> JOINED
    javax.persistence.InheritanceType[] $VALUES -> $VALUES
    javax.persistence.InheritanceType[] values() -> values
    javax.persistence.InheritanceType valueOf(java.lang.String) -> valueOf
javax.persistence.JoinColumn -> javax.persistence.JoinColumn:
    java.lang.String name() -> name
    java.lang.String referencedColumnName() -> referencedColumnName
    boolean unique() -> unique
    boolean nullable() -> nullable
    boolean insertable() -> insertable
    boolean updatable() -> updatable
    java.lang.String columnDefinition() -> columnDefinition
    java.lang.String table() -> table
javax.persistence.JoinColumns -> javax.persistence.JoinColumns:
    javax.persistence.JoinColumn[] value() -> value
javax.persistence.JoinTable -> javax.persistence.JoinTable:
    java.lang.String name() -> name
    java.lang.String catalog() -> catalog
    java.lang.String schema() -> schema
    javax.persistence.JoinColumn[] joinColumns() -> joinColumns
    javax.persistence.JoinColumn[] inverseJoinColumns() -> inverseJoinColumns
    javax.persistence.UniqueConstraint[] uniqueConstraints() -> uniqueConstraints
javax.persistence.Lob -> javax.persistence.Lob:
javax.persistence.LockModeType -> javax.persistence.LockModeType:
    javax.persistence.LockModeType READ -> READ
    javax.persistence.LockModeType WRITE -> WRITE
    javax.persistence.LockModeType OPTIMISTIC -> OPTIMISTIC
    javax.persistence.LockModeType OPTIMISTIC_FORCE_INCREMENT -> OPTIMISTIC_FORCE_INCREMENT
    javax.persistence.LockModeType PESSIMISTIC_READ -> PESSIMISTIC_READ
    javax.persistence.LockModeType PESSIMISTIC_WRITE -> PESSIMISTIC_WRITE
    javax.persistence.LockModeType PESSIMISTIC_FORCE_INCREMENT -> PESSIMISTIC_FORCE_INCREMENT
    javax.persistence.LockModeType NONE -> NONE
    javax.persistence.LockModeType[] $VALUES -> $VALUES
    javax.persistence.LockModeType[] values() -> values
    javax.persistence.LockModeType valueOf(java.lang.String) -> valueOf
javax.persistence.LockTimeoutException -> javax.persistence.LockTimeoutException:
    java.lang.Object entity -> entity
    java.lang.Object getObject() -> getObject
javax.persistence.ManyToMany -> javax.persistence.ManyToMany:
    java.lang.Class targetEntity() -> targetEntity
    javax.persistence.CascadeType[] cascade() -> cascade
    javax.persistence.FetchType fetch() -> fetch
    java.lang.String mappedBy() -> mappedBy
javax.persistence.ManyToOne -> javax.persistence.ManyToOne:
    java.lang.Class targetEntity() -> targetEntity
    javax.persistence.CascadeType[] cascade() -> cascade
    javax.persistence.FetchType fetch() -> fetch
    boolean optional() -> optional
javax.persistence.MapKey -> javax.persistence.MapKey:
    java.lang.String name() -> name
javax.persistence.MapKeyClass -> javax.persistence.MapKeyClass:
    java.lang.Class value() -> value
javax.persistence.MapKeyColumn -> javax.persistence.MapKeyColumn:
    java.lang.String name() -> name
    boolean unique() -> unique
    boolean nullable() -> nullable
    boolean insertable() -> insertable
    boolean updatable() -> updatable
    java.lang.String columnDefinition() -> columnDefinition
    java.lang.String table() -> table
    int length() -> length
    int precision() -> precision
    int scale() -> scale
javax.persistence.MapKeyEnumerated -> javax.persistence.MapKeyEnumerated:
    javax.persistence.EnumType value() -> value
javax.persistence.MapKeyJoinColumn -> javax.persistence.MapKeyJoinColumn:
    java.lang.String name() -> name
    java.lang.String referencedColumnName() -> referencedColumnName
    boolean unique() -> unique
    boolean nullable() -> nullable
    boolean insertable() -> insertable
    boolean updatable() -> updatable
    java.lang.String columnDefinition() -> columnDefinition
    java.lang.String table() -> table
javax.persistence.MapKeyJoinColumns -> javax.persistence.MapKeyJoinColumns:
    javax.persistence.MapKeyJoinColumn[] value() -> value
javax.persistence.MapKeyTemporal -> javax.persistence.MapKeyTemporal:
    javax.persistence.TemporalType value() -> value
javax.persistence.MappedSuperclass -> javax.persistence.MappedSuperclass:
javax.persistence.MapsId -> javax.persistence.MapsId:
    java.lang.String value() -> value
javax.persistence.NamedNativeQueries -> javax.persistence.NamedNativeQueries:
    javax.persistence.NamedNativeQuery[] value() -> value
javax.persistence.NamedNativeQuery -> javax.persistence.NamedNativeQuery:
    java.lang.String name() -> name
    java.lang.String query() -> query
    javax.persistence.QueryHint[] hints() -> hints
    java.lang.Class resultClass() -> resultClass
    java.lang.String resultSetMapping() -> resultSetMapping
javax.persistence.NamedQueries -> javax.persistence.NamedQueries:
    javax.persistence.NamedQuery[] value() -> value
javax.persistence.NamedQuery -> javax.persistence.NamedQuery:
    java.lang.String name() -> name
    java.lang.String query() -> query
    javax.persistence.LockModeType lockMode() -> lockMode
    javax.persistence.QueryHint[] hints() -> hints
javax.persistence.NoResultException -> javax.persistence.NoResultException:
javax.persistence.NonUniqueResultException -> javax.persistence.NonUniqueResultException:
javax.persistence.OneToMany -> javax.persistence.OneToMany:
    java.lang.Class targetEntity() -> targetEntity
    javax.persistence.CascadeType[] cascade() -> cascade
    javax.persistence.FetchType fetch() -> fetch
    java.lang.String mappedBy() -> mappedBy
    boolean orphanRemoval() -> orphanRemoval
javax.persistence.OneToOne -> javax.persistence.OneToOne:
    java.lang.Class targetEntity() -> targetEntity
    javax.persistence.CascadeType[] cascade() -> cascade
    javax.persistence.FetchType fetch() -> fetch
    boolean optional() -> optional
    java.lang.String mappedBy() -> mappedBy
    boolean orphanRemoval() -> orphanRemoval
javax.persistence.OptimisticLockException -> javax.persistence.OptimisticLockException:
    java.lang.Object entity -> entity
    java.lang.Object getEntity() -> getEntity
javax.persistence.OrderBy -> javax.persistence.OrderBy:
    java.lang.String value() -> value
javax.persistence.OrderColumn -> javax.persistence.OrderColumn:
    java.lang.String name() -> name
    boolean nullable() -> nullable
    boolean insertable() -> insertable
    boolean updatable() -> updatable
    java.lang.String columnDefinition() -> columnDefinition
javax.persistence.Parameter -> javax.persistence.Parameter:
    java.lang.String getName() -> getName
    java.lang.Integer getPosition() -> getPosition
    java.lang.Class getParameterType() -> getParameterType
javax.persistence.Persistence -> javax.persistence.Persistence:
    java.lang.String PERSISTENCE_PROVIDER -> PERSISTENCE_PROVIDER
    java.util.Set providers -> providers
    javax.persistence.EntityManagerFactory createEntityManagerFactory(java.lang.String) -> createEntityManagerFactory
    javax.persistence.EntityManagerFactory createEntityManagerFactory(java.lang.String,java.util.Map) -> createEntityManagerFactory
    javax.persistence.PersistenceUtil getPersistenceUtil() -> getPersistenceUtil
javax.persistence.Persistence$1 -> javax.persistence.Persistence$1:
javax.persistence.Persistence$PersistenceUtilImpl -> javax.persistence.Persistence$PersistenceUtilImpl:
    boolean isLoaded(java.lang.Object,java.lang.String) -> isLoaded
    boolean isLoaded(java.lang.Object) -> isLoaded
javax.persistence.PersistenceContext -> javax.persistence.PersistenceContext:
    java.lang.String name() -> name
    java.lang.String unitName() -> unitName
    javax.persistence.PersistenceContextType type() -> type
    javax.persistence.PersistenceProperty[] properties() -> properties
javax.persistence.PersistenceContextType -> javax.persistence.PersistenceContextType:
    javax.persistence.PersistenceContextType TRANSACTION -> TRANSACTION
    javax.persistence.PersistenceContextType EXTENDED -> EXTENDED
    javax.persistence.PersistenceContextType[] $VALUES -> $VALUES
    javax.persistence.PersistenceContextType[] values() -> values
    javax.persistence.PersistenceContextType valueOf(java.lang.String) -> valueOf
javax.persistence.PersistenceContexts -> javax.persistence.PersistenceContexts:
    javax.persistence.PersistenceContext[] value() -> value
javax.persistence.PersistenceException -> javax.persistence.PersistenceException:
javax.persistence.PersistenceProperty -> javax.persistence.PersistenceProperty:
    java.lang.String name() -> name
    java.lang.String value() -> value
javax.persistence.PersistenceUnit -> javax.persistence.PersistenceUnit:
    java.lang.String name() -> name
    java.lang.String unitName() -> unitName
javax.persistence.PersistenceUnitUtil -> javax.persistence.PersistenceUnitUtil:
    boolean isLoaded(java.lang.Object,java.lang.String) -> isLoaded
    boolean isLoaded(java.lang.Object) -> isLoaded
    java.lang.Object getIdentifier(java.lang.Object) -> getIdentifier
javax.persistence.PersistenceUnits -> javax.persistence.PersistenceUnits:
    javax.persistence.PersistenceUnit[] value() -> value
javax.persistence.PersistenceUtil -> javax.persistence.PersistenceUtil:
    boolean isLoaded(java.lang.Object,java.lang.String) -> isLoaded
    boolean isLoaded(java.lang.Object) -> isLoaded
javax.persistence.PessimisticLockException -> javax.persistence.PessimisticLockException:
    java.lang.Object entity -> entity
    java.lang.Object getEntity() -> getEntity
javax.persistence.PessimisticLockScope -> javax.persistence.PessimisticLockScope:
    javax.persistence.PessimisticLockScope NORMAL -> NORMAL
    javax.persistence.PessimisticLockScope EXTENDED -> EXTENDED
    javax.persistence.PessimisticLockScope[] $VALUES -> $VALUES
    javax.persistence.PessimisticLockScope[] values() -> values
    javax.persistence.PessimisticLockScope valueOf(java.lang.String) -> valueOf
javax.persistence.PostLoad -> javax.persistence.PostLoad:
javax.persistence.PostPersist -> javax.persistence.PostPersist:
javax.persistence.PostRemove -> javax.persistence.PostRemove:
javax.persistence.PostUpdate -> javax.persistence.PostUpdate:
javax.persistence.PrePersist -> javax.persistence.PrePersist:
javax.persistence.PreRemove -> javax.persistence.PreRemove:
javax.persistence.PreUpdate -> javax.persistence.PreUpdate:
javax.persistence.PrimaryKeyJoinColumn -> javax.persistence.PrimaryKeyJoinColumn:
    java.lang.String name() -> name
    java.lang.String referencedColumnName() -> referencedColumnName
    java.lang.String columnDefinition() -> columnDefinition
javax.persistence.PrimaryKeyJoinColumns -> javax.persistence.PrimaryKeyJoinColumns:
    javax.persistence.PrimaryKeyJoinColumn[] value() -> value
javax.persistence.Query -> javax.persistence.Query:
    java.util.List getResultList() -> getResultList
    java.lang.Object getSingleResult() -> getSingleResult
    int executeUpdate() -> executeUpdate
    javax.persistence.Query setMaxResults(int) -> setMaxResults
    int getMaxResults() -> getMaxResults
    javax.persistence.Query setFirstResult(int) -> setFirstResult
    int getFirstResult() -> getFirstResult
    javax.persistence.Query setHint(java.lang.String,java.lang.Object) -> setHint
    java.util.Map getHints() -> getHints
    javax.persistence.Query setParameter(javax.persistence.Parameter,java.lang.Object) -> setParameter
    javax.persistence.Query setParameter(javax.persistence.Parameter,java.util.Calendar,javax.persistence.TemporalType) -> setParameter
    javax.persistence.Query setParameter(javax.persistence.Parameter,java.util.Date,javax.persistence.TemporalType) -> setParameter
    javax.persistence.Query setParameter(java.lang.String,java.lang.Object) -> setParameter
    javax.persistence.Query setParameter(java.lang.String,java.util.Calendar,javax.persistence.TemporalType) -> setParameter
    javax.persistence.Query setParameter(java.lang.String,java.util.Date,javax.persistence.TemporalType) -> setParameter
    javax.persistence.Query setParameter(int,java.lang.Object) -> setParameter
    javax.persistence.Query setParameter(int,java.util.Calendar,javax.persistence.TemporalType) -> setParameter
    javax.persistence.Query setParameter(int,java.util.Date,javax.persistence.TemporalType) -> setParameter
    java.util.Set getParameters() -> getParameters
    javax.persistence.Parameter getParameter(java.lang.String) -> getParameter
    javax.persistence.Parameter getParameter(java.lang.String,java.lang.Class) -> getParameter
    javax.persistence.Parameter getParameter(int) -> getParameter
    javax.persistence.Parameter getParameter(int,java.lang.Class) -> getParameter
    boolean isBound(javax.persistence.Parameter) -> isBound
    java.lang.Object getParameterValue(javax.persistence.Parameter) -> getParameterValue
    java.lang.Object getParameterValue(java.lang.String) -> getParameterValue
    java.lang.Object getParameterValue(int) -> getParameterValue
    javax.persistence.Query setFlushMode(javax.persistence.FlushModeType) -> setFlushMode
    javax.persistence.FlushModeType getFlushMode() -> getFlushMode
    javax.persistence.Query setLockMode(javax.persistence.LockModeType) -> setLockMode
    javax.persistence.LockModeType getLockMode() -> getLockMode
    java.lang.Object unwrap(java.lang.Class) -> unwrap
javax.persistence.QueryHint -> javax.persistence.QueryHint:
    java.lang.String name() -> name
    java.lang.String value() -> value
javax.persistence.QueryTimeoutException -> javax.persistence.QueryTimeoutException:
    javax.persistence.Query query -> query
    javax.persistence.Query getQuery() -> getQuery
javax.persistence.RollbackException -> javax.persistence.RollbackException:
javax.persistence.SecondaryTable -> javax.persistence.SecondaryTable:
    java.lang.String name() -> name
    java.lang.String catalog() -> catalog
    java.lang.String schema() -> schema
    javax.persistence.PrimaryKeyJoinColumn[] pkJoinColumns() -> pkJoinColumns
    javax.persistence.UniqueConstraint[] uniqueConstraints() -> uniqueConstraints
javax.persistence.SecondaryTables -> javax.persistence.SecondaryTables:
    javax.persistence.SecondaryTable[] value() -> value
javax.persistence.SequenceGenerator -> javax.persistence.SequenceGenerator:
    java.lang.String name() -> name
    java.lang.String sequenceName() -> sequenceName
    java.lang.String catalog() -> catalog
    java.lang.String schema() -> schema
    int initialValue() -> initialValue
    int allocationSize() -> allocationSize
javax.persistence.SharedCacheMode -> javax.persistence.SharedCacheMode:
    javax.persistence.SharedCacheMode ALL -> ALL
    javax.persistence.SharedCacheMode NONE -> NONE
    javax.persistence.SharedCacheMode ENABLE_SELECTIVE -> ENABLE_SELECTIVE
    javax.persistence.SharedCacheMode DISABLE_SELECTIVE -> DISABLE_SELECTIVE
    javax.persistence.SharedCacheMode UNSPECIFIED -> UNSPECIFIED
    javax.persistence.SharedCacheMode[] $VALUES -> $VALUES
    javax.persistence.SharedCacheMode[] values() -> values
    javax.persistence.SharedCacheMode valueOf(java.lang.String) -> valueOf
javax.persistence.SqlResultSetMapping -> javax.persistence.SqlResultSetMapping:
    java.lang.String name() -> name
    javax.persistence.EntityResult[] entities() -> entities
    javax.persistence.ColumnResult[] columns() -> columns
javax.persistence.SqlResultSetMappings -> javax.persistence.SqlResultSetMappings:
    javax.persistence.SqlResultSetMapping[] value() -> value
javax.persistence.Table -> javax.persistence.Table:
    java.lang.String name() -> name
    java.lang.String catalog() -> catalog
    java.lang.String schema() -> schema
    javax.persistence.UniqueConstraint[] uniqueConstraints() -> uniqueConstraints
javax.persistence.TableGenerator -> javax.persistence.TableGenerator:
    java.lang.String name() -> name
    java.lang.String table() -> table
    java.lang.String catalog() -> catalog
    java.lang.String schema() -> schema
    java.lang.String pkColumnName() -> pkColumnName
    java.lang.String valueColumnName() -> valueColumnName
    java.lang.String pkColumnValue() -> pkColumnValue
    int initialValue() -> initialValue
    int allocationSize() -> allocationSize
    javax.persistence.UniqueConstraint[] uniqueConstraints() -> uniqueConstraints
javax.persistence.Temporal -> javax.persistence.Temporal:
    javax.persistence.TemporalType value() -> value
javax.persistence.TemporalType -> javax.persistence.TemporalType:
    javax.persistence.TemporalType DATE -> DATE
    javax.persistence.TemporalType TIME -> TIME
    javax.persistence.TemporalType TIMESTAMP -> TIMESTAMP
    javax.persistence.TemporalType[] $VALUES -> $VALUES
    javax.persistence.TemporalType[] values() -> values
    javax.persistence.TemporalType valueOf(java.lang.String) -> valueOf
javax.persistence.TransactionRequiredException -> javax.persistence.TransactionRequiredException:
javax.persistence.Transient -> javax.persistence.Transient:
javax.persistence.Tuple -> javax.persistence.Tuple:
    java.lang.Object get(javax.persistence.TupleElement) -> get
    java.lang.Object get(java.lang.String,java.lang.Class) -> get
    java.lang.Object get(java.lang.String) -> get
    java.lang.Object get(int,java.lang.Class) -> get
    java.lang.Object get(int) -> get
    java.lang.Object[] toArray() -> toArray
    java.util.List getElements() -> getElements
javax.persistence.TupleElement -> javax.persistence.TupleElement:
    java.lang.Class getJavaType() -> getJavaType
    java.lang.String getAlias() -> getAlias
javax.persistence.TypedQuery -> javax.persistence.TypedQuery:
    java.util.List getResultList() -> getResultList
    java.lang.Object getSingleResult() -> getSingleResult
    javax.persistence.TypedQuery setMaxResults(int) -> setMaxResults
    javax.persistence.TypedQuery setFirstResult(int) -> setFirstResult
    javax.persistence.TypedQuery setHint(java.lang.String,java.lang.Object) -> setHint
    javax.persistence.TypedQuery setParameter(javax.persistence.Parameter,java.lang.Object) -> setParameter
    javax.persistence.TypedQuery setParameter(javax.persistence.Parameter,java.util.Calendar,javax.persistence.TemporalType) -> setParameter
    javax.persistence.TypedQuery setParameter(javax.persistence.Parameter,java.util.Date,javax.persistence.TemporalType) -> setParameter
    javax.persistence.TypedQuery setParameter(java.lang.String,java.lang.Object) -> setParameter
    javax.persistence.TypedQuery setParameter(java.lang.String,java.util.Calendar,javax.persistence.TemporalType) -> setParameter
    javax.persistence.TypedQuery setParameter(java.lang.String,java.util.Date,javax.persistence.TemporalType) -> setParameter
    javax.persistence.TypedQuery setParameter(int,java.lang.Object) -> setParameter
    javax.persistence.TypedQuery setParameter(int,java.util.Calendar,javax.persistence.TemporalType) -> setParameter
    javax.persistence.TypedQuery setParameter(int,java.util.Date,javax.persistence.TemporalType) -> setParameter
    javax.persistence.TypedQuery setFlushMode(javax.persistence.FlushModeType) -> setFlushMode
    javax.persistence.TypedQuery setLockMode(javax.persistence.LockModeType) -> setLockMode
javax.persistence.UniqueConstraint -> javax.persistence.UniqueConstraint:
    java.lang.String name() -> name
    java.lang.String[] columnNames() -> columnNames
javax.persistence.ValidationMode -> javax.persistence.ValidationMode:
    javax.persistence.ValidationMode AUTO -> AUTO
    javax.persistence.ValidationMode CALLBACK -> CALLBACK
    javax.persistence.ValidationMode NONE -> NONE
    javax.persistence.ValidationMode[] $VALUES -> $VALUES
    javax.persistence.ValidationMode[] values() -> values
    javax.persistence.ValidationMode valueOf(java.lang.String) -> valueOf
javax.persistence.Version -> javax.persistence.Version:
javax.persistence.criteria.AbstractQuery -> javax.persistence.criteria.AbstractQuery:
    javax.persistence.criteria.Root from(java.lang.Class) -> from
    javax.persistence.criteria.Root from(javax.persistence.metamodel.EntityType) -> from
    javax.persistence.criteria.AbstractQuery where(javax.persistence.criteria.Expression) -> where
    javax.persistence.criteria.AbstractQuery where(javax.persistence.criteria.Predicate[]) -> where
    javax.persistence.criteria.AbstractQuery groupBy(javax.persistence.criteria.Expression[]) -> groupBy
    javax.persistence.criteria.AbstractQuery groupBy(java.util.List) -> groupBy
    javax.persistence.criteria.AbstractQuery having(javax.persistence.criteria.Expression) -> having
    javax.persistence.criteria.AbstractQuery having(javax.persistence.criteria.Predicate[]) -> having
    javax.persistence.criteria.AbstractQuery distinct(boolean) -> distinct
    javax.persistence.criteria.Subquery subquery(java.lang.Class) -> subquery
    java.util.Set getRoots() -> getRoots
    javax.persistence.criteria.Selection getSelection() -> getSelection
    javax.persistence.criteria.Predicate getRestriction() -> getRestriction
    java.util.List getGroupList() -> getGroupList
    javax.persistence.criteria.Predicate getGroupRestriction() -> getGroupRestriction
    boolean isDistinct() -> isDistinct
    java.lang.Class getResultType() -> getResultType
javax.persistence.criteria.CollectionJoin -> javax.persistence.criteria.CollectionJoin:
    javax.persistence.metamodel.CollectionAttribute getModel() -> getModel
javax.persistence.criteria.CompoundSelection -> javax.persistence.criteria.CompoundSelection:
javax.persistence.criteria.CriteriaBuilder -> javax.persistence.criteria.CriteriaBuilder:
    javax.persistence.criteria.CriteriaQuery createQuery() -> createQuery
    javax.persistence.criteria.CriteriaQuery createQuery(java.lang.Class) -> createQuery
    javax.persistence.criteria.CriteriaQuery createTupleQuery() -> createTupleQuery
    javax.persistence.criteria.CompoundSelection construct(java.lang.Class,javax.persistence.criteria.Selection[]) -> construct
    javax.persistence.criteria.CompoundSelection tuple(javax.persistence.criteria.Selection[]) -> tuple
    javax.persistence.criteria.CompoundSelection array(javax.persistence.criteria.Selection[]) -> array
    javax.persistence.criteria.Order asc(javax.persistence.criteria.Expression) -> asc
    javax.persistence.criteria.Order desc(javax.persistence.criteria.Expression) -> desc
    javax.persistence.criteria.Expression avg(javax.persistence.criteria.Expression) -> avg
    javax.persistence.criteria.Expression sum(javax.persistence.criteria.Expression) -> sum
    javax.persistence.criteria.Expression sumAsLong(javax.persistence.criteria.Expression) -> sumAsLong
    javax.persistence.criteria.Expression sumAsDouble(javax.persistence.criteria.Expression) -> sumAsDouble
    javax.persistence.criteria.Expression max(javax.persistence.criteria.Expression) -> max
    javax.persistence.criteria.Expression min(javax.persistence.criteria.Expression) -> min
    javax.persistence.criteria.Expression greatest(javax.persistence.criteria.Expression) -> greatest
    javax.persistence.criteria.Expression least(javax.persistence.criteria.Expression) -> least
    javax.persistence.criteria.Expression count(javax.persistence.criteria.Expression) -> count
    javax.persistence.criteria.Expression countDistinct(javax.persistence.criteria.Expression) -> countDistinct
    javax.persistence.criteria.Predicate exists(javax.persistence.criteria.Subquery) -> exists
    javax.persistence.criteria.Expression all(javax.persistence.criteria.Subquery) -> all
    javax.persistence.criteria.Expression some(javax.persistence.criteria.Subquery) -> some
    javax.persistence.criteria.Expression any(javax.persistence.criteria.Subquery) -> any
    javax.persistence.criteria.Predicate and(javax.persistence.criteria.Expression,javax.persistence.criteria.Expression) -> and
    javax.persistence.criteria.Predicate and(javax.persistence.criteria.Predicate[]) -> and
    javax.persistence.criteria.Predicate or(javax.persistence.criteria.Expression,javax.persistence.criteria.Expression) -> or
    javax.persistence.criteria.Predicate or(javax.persistence.criteria.Predicate[]) -> or
    javax.persistence.criteria.Predicate not(javax.persistence.criteria.Expression) -> not
    javax.persistence.criteria.Predicate conjunction() -> conjunction
    javax.persistence.criteria.Predicate disjunction() -> disjunction
    javax.persistence.criteria.Predicate isTrue(javax.persistence.criteria.Expression) -> isTrue
    javax.persistence.criteria.Predicate isFalse(javax.persistence.criteria.Expression) -> isFalse
    javax.persistence.criteria.Predicate isNull(javax.persistence.criteria.Expression) -> isNull
    javax.persistence.criteria.Predicate isNotNull(javax.persistence.criteria.Expression) -> isNotNull
    javax.persistence.criteria.Predicate equal(javax.persistence.criteria.Expression,javax.persistence.criteria.Expression) -> equal
    javax.persistence.criteria.Predicate equal(javax.persistence.criteria.Expression,java.lang.Object) -> equal
    javax.persistence.criteria.Predicate notEqual(javax.persistence.criteria.Expression,javax.persistence.criteria.Expression) -> notEqual
    javax.persistence.criteria.Predicate notEqual(javax.persistence.criteria.Expression,java.lang.Object) -> notEqual
    javax.persistence.criteria.Predicate greaterThan(javax.persistence.criteria.Expression,javax.persistence.criteria.Expression) -> greaterThan
    javax.persistence.criteria.Predicate greaterThan(javax.persistence.criteria.Expression,java.lang.Comparable) -> greaterThan
    javax.persistence.criteria.Predicate greaterThanOrEqualTo(javax.persistence.criteria.Expression,javax.persistence.criteria.Expression) -> greaterThanOrEqualTo
    javax.persistence.criteria.Predicate greaterThanOrEqualTo(javax.persistence.criteria.Expression,java.lang.Comparable) -> greaterThanOrEqualTo
    javax.persistence.criteria.Predicate lessThan(javax.persistence.criteria.Expression,javax.persistence.criteria.Expression) -> lessThan
    javax.persistence.criteria.Predicate lessThan(javax.persistence.criteria.Expression,java.lang.Comparable) -> lessThan
    javax.persistence.criteria.Predicate lessThanOrEqualTo(javax.persistence.criteria.Expression,javax.persistence.criteria.Expression) -> lessThanOrEqualTo
    javax.persistence.criteria.Predicate lessThanOrEqualTo(javax.persistence.criteria.Expression,java.lang.Comparable) -> lessThanOrEqualTo
    javax.persistence.criteria.Predicate between(javax.persistence.criteria.Expression,javax.persistence.criteria.Expression,javax.persistence.criteria.Expression) -> between
    javax.persistence.criteria.Predicate between(javax.persistence.criteria.Expression,java.lang.Comparable,java.lang.Comparable) -> between
    javax.persistence.criteria.Predicate gt(javax.persistence.criteria.Expression,javax.persistence.criteria.Expression) -> gt
    javax.persistence.criteria.Predicate gt(javax.persistence.criteria.Expression,java.lang.Number) -> gt
    javax.persistence.criteria.Predicate ge(javax.persistence.criteria.Expression,javax.persistence.criteria.Expression) -> ge
    javax.persistence.criteria.Predicate ge(javax.persistence.criteria.Expression,java.lang.Number) -> ge
    javax.persistence.criteria.Predicate lt(javax.persistence.criteria.Expression,javax.persistence.criteria.Expression) -> lt
    javax.persistence.criteria.Predicate lt(javax.persistence.criteria.Expression,java.lang.Number) -> lt
    javax.persistence.criteria.Predicate le(javax.persistence.criteria.Expression,javax.persistence.criteria.Expression) -> le
    javax.persistence.criteria.Predicate le(javax.persistence.criteria.Expression,java.lang.Number) -> le
    javax.persistence.criteria.Expression neg(javax.persistence.criteria.Expression) -> neg
    javax.persistence.criteria.Expression abs(javax.persistence.criteria.Expression) -> abs
    javax.persistence.criteria.Expression sum(javax.persistence.criteria.Expression,javax.persistence.criteria.Expression) -> sum
    javax.persistence.criteria.Expression sum(javax.persistence.criteria.Expression,java.lang.Number) -> sum
    javax.persistence.criteria.Expression sum(java.lang.Number,javax.persistence.criteria.Expression) -> sum
    javax.persistence.criteria.Expression prod(javax.persistence.criteria.Expression,javax.persistence.criteria.Expression) -> prod
    javax.persistence.criteria.Expression prod(javax.persistence.criteria.Expression,java.lang.Number) -> prod
    javax.persistence.criteria.Expression prod(java.lang.Number,javax.persistence.criteria.Expression) -> prod
    javax.persistence.criteria.Expression diff(javax.persistence.criteria.Expression,javax.persistence.criteria.Expression) -> diff
    javax.persistence.criteria.Expression diff(javax.persistence.criteria.Expression,java.lang.Number) -> diff
    javax.persistence.criteria.Expression diff(java.lang.Number,javax.persistence.criteria.Expression) -> diff
    javax.persistence.criteria.Expression quot(javax.persistence.criteria.Expression,javax.persistence.criteria.Expression) -> quot
    javax.persistence.criteria.Expression quot(javax.persistence.criteria.Expression,java.lang.Number) -> quot
    javax.persistence.criteria.Expression quot(java.lang.Number,javax.persistence.criteria.Expression) -> quot
    javax.persistence.criteria.Expression mod(javax.persistence.criteria.Expression,javax.persistence.criteria.Expression) -> mod
    javax.persistence.criteria.Expression mod(javax.persistence.criteria.Expression,java.lang.Integer) -> mod
    javax.persistence.criteria.Expression mod(java.lang.Integer,javax.persistence.criteria.Expression) -> mod
    javax.persistence.criteria.Expression sqrt(javax.persistence.criteria.Expression) -> sqrt
    javax.persistence.criteria.Expression toLong(javax.persistence.criteria.Expression) -> toLong
    javax.persistence.criteria.Expression toInteger(javax.persistence.criteria.Expression) -> toInteger
    javax.persistence.criteria.Expression toFloat(javax.persistence.criteria.Expression) -> toFloat
    javax.persistence.criteria.Expression toDouble(javax.persistence.criteria.Expression) -> toDouble
    javax.persistence.criteria.Expression toBigDecimal(javax.persistence.criteria.Expression) -> toBigDecimal
    javax.persistence.criteria.Expression toBigInteger(javax.persistence.criteria.Expression) -> toBigInteger
    javax.persistence.criteria.Expression toString(javax.persistence.criteria.Expression) -> toString
    javax.persistence.criteria.Expression literal(java.lang.Object) -> literal
    javax.persistence.criteria.Expression nullLiteral(java.lang.Class) -> nullLiteral
    javax.persistence.criteria.ParameterExpression parameter(java.lang.Class) -> parameter
    javax.persistence.criteria.ParameterExpression parameter(java.lang.Class,java.lang.String) -> parameter
    javax.persistence.criteria.Predicate isEmpty(javax.persistence.criteria.Expression) -> isEmpty
    javax.persistence.criteria.Predicate isNotEmpty(javax.persistence.criteria.Expression) -> isNotEmpty
    javax.persistence.criteria.Expression size(javax.persistence.criteria.Expression) -> size
    javax.persistence.criteria.Expression size(java.util.Collection) -> size
    javax.persistence.criteria.Predicate isMember(javax.persistence.criteria.Expression,javax.persistence.criteria.Expression) -> isMember
    javax.persistence.criteria.Predicate isMember(java.lang.Object,javax.persistence.criteria.Expression) -> isMember
    javax.persistence.criteria.Predicate isNotMember(javax.persistence.criteria.Expression,javax.persistence.criteria.Expression) -> isNotMember
    javax.persistence.criteria.Predicate isNotMember(java.lang.Object,javax.persistence.criteria.Expression) -> isNotMember
    javax.persistence.criteria.Expression values(java.util.Map) -> values
    javax.persistence.criteria.Expression keys(java.util.Map) -> keys
    javax.persistence.criteria.Predicate like(javax.persistence.criteria.Expression,javax.persistence.criteria.Expression) -> like
    javax.persistence.criteria.Predicate like(javax.persistence.criteria.Expression,java.lang.String) -> like
    javax.persistence.criteria.Predicate like(javax.persistence.criteria.Expression,javax.persistence.criteria.Expression,javax.persistence.criteria.Expression) -> like
    javax.persistence.criteria.Predicate like(javax.persistence.criteria.Expression,javax.persistence.criteria.Expression,char) -> like
    javax.persistence.criteria.Predicate like(javax.persistence.criteria.Expression,java.lang.String,javax.persistence.criteria.Expression) -> like
    javax.persistence.criteria.Predicate like(javax.persistence.criteria.Expression,java.lang.String,char) -> like
    javax.persistence.criteria.Predicate notLike(javax.persistence.criteria.Expression,javax.persistence.criteria.Expression) -> notLike
    javax.persistence.criteria.Predicate notLike(javax.persistence.criteria.Expression,java.lang.String) -> notLike
    javax.persistence.criteria.Predicate notLike(javax.persistence.criteria.Expression,javax.persistence.criteria.Expression,javax.persistence.criteria.Expression) -> notLike
    javax.persistence.criteria.Predicate notLike(javax.persistence.criteria.Expression,javax.persistence.criteria.Expression,char) -> notLike
    javax.persistence.criteria.Predicate notLike(javax.persistence.criteria.Expression,java.lang.String,javax.persistence.criteria.Expression) -> notLike
    javax.persistence.criteria.Predicate notLike(javax.persistence.criteria.Expression,java.lang.String,char) -> notLike
    javax.persistence.criteria.Expression concat(javax.persistence.criteria.Expression,javax.persistence.criteria.Expression) -> concat
    javax.persistence.criteria.Expression concat(javax.persistence.criteria.Expression,java.lang.String) -> concat
    javax.persistence.criteria.Expression concat(java.lang.String,javax.persistence.criteria.Expression) -> concat
    javax.persistence.criteria.Expression substring(javax.persistence.criteria.Expression,javax.persistence.criteria.Expression) -> substring
    javax.persistence.criteria.Expression substring(javax.persistence.criteria.Expression,int) -> substring
    javax.persistence.criteria.Expression substring(javax.persistence.criteria.Expression,javax.persistence.criteria.Expression,javax.persistence.criteria.Expression) -> substring
    javax.persistence.criteria.Expression substring(javax.persistence.criteria.Expression,int,int) -> substring
    javax.persistence.criteria.Expression trim(javax.persistence.criteria.Expression) -> trim
    javax.persistence.criteria.Expression trim(javax.persistence.criteria.CriteriaBuilder$Trimspec,javax.persistence.criteria.Expression) -> trim
    javax.persistence.criteria.Expression trim(javax.persistence.criteria.Expression,javax.persistence.criteria.Expression) -> trim
    javax.persistence.criteria.Expression trim(javax.persistence.criteria.CriteriaBuilder$Trimspec,javax.persistence.criteria.Expression,javax.persistence.criteria.Expression) -> trim
    javax.persistence.criteria.Expression trim(char,javax.persistence.criteria.Expression) -> trim
    javax.persistence.criteria.Expression trim(javax.persistence.criteria.CriteriaBuilder$Trimspec,char,javax.persistence.criteria.Expression) -> trim
    javax.persistence.criteria.Expression lower(javax.persistence.criteria.Expression) -> lower
    javax.persistence.criteria.Expression upper(javax.persistence.criteria.Expression) -> upper
    javax.persistence.criteria.Expression length(javax.persistence.criteria.Expression) -> length
    javax.persistence.criteria.Expression locate(javax.persistence.criteria.Expression,javax.persistence.criteria.Expression) -> locate
    javax.persistence.criteria.Expression locate(javax.persistence.criteria.Expression,java.lang.String) -> locate
    javax.persistence.criteria.Expression locate(javax.persistence.criteria.Expression,javax.persistence.criteria.Expression,javax.persistence.criteria.Expression) -> locate
    javax.persistence.criteria.Expression locate(javax.persistence.criteria.Expression,java.lang.String,int) -> locate
    javax.persistence.criteria.Expression currentDate() -> currentDate
    javax.persistence.criteria.Expression currentTimestamp() -> currentTimestamp
    javax.persistence.criteria.Expression currentTime() -> currentTime
    javax.persistence.criteria.CriteriaBuilder$In in(javax.persistence.criteria.Expression) -> in
    javax.persistence.criteria.Expression coalesce(javax.persistence.criteria.Expression,javax.persistence.criteria.Expression) -> coalesce
    javax.persistence.criteria.Expression coalesce(javax.persistence.criteria.Expression,java.lang.Object) -> coalesce
    javax.persistence.criteria.Expression nullif(javax.persistence.criteria.Expression,javax.persistence.criteria.Expression) -> nullif
    javax.persistence.criteria.Expression nullif(javax.persistence.criteria.Expression,java.lang.Object) -> nullif
    javax.persistence.criteria.CriteriaBuilder$Coalesce coalesce() -> coalesce
    javax.persistence.criteria.CriteriaBuilder$SimpleCase selectCase(javax.persistence.criteria.Expression) -> selectCase
    javax.persistence.criteria.CriteriaBuilder$Case selectCase() -> selectCase
    javax.persistence.criteria.Expression function(java.lang.String,java.lang.Class,javax.persistence.criteria.Expression[]) -> function
javax.persistence.criteria.CriteriaBuilder$Case -> javax.persistence.criteria.CriteriaBuilder$Case:
    javax.persistence.criteria.CriteriaBuilder$Case when(javax.persistence.criteria.Expression,java.lang.Object) -> when
    javax.persistence.criteria.CriteriaBuilder$Case when(javax.persistence.criteria.Expression,javax.persistence.criteria.Expression) -> when
    javax.persistence.criteria.Expression otherwise(java.lang.Object) -> otherwise
    javax.persistence.criteria.Expression otherwise(javax.persistence.criteria.Expression) -> otherwise
javax.persistence.criteria.CriteriaBuilder$Coalesce -> javax.persistence.criteria.CriteriaBuilder$Coalesce:
    javax.persistence.criteria.CriteriaBuilder$Coalesce value(java.lang.Object) -> value
    javax.persistence.criteria.CriteriaBuilder$Coalesce value(javax.persistence.criteria.Expression) -> value
javax.persistence.criteria.CriteriaBuilder$In -> javax.persistence.criteria.CriteriaBuilder$In:
    javax.persistence.criteria.Expression getExpression() -> getExpression
    javax.persistence.criteria.CriteriaBuilder$In value(java.lang.Object) -> value
    javax.persistence.criteria.CriteriaBuilder$In value(javax.persistence.criteria.Expression) -> value
javax.persistence.criteria.CriteriaBuilder$SimpleCase -> javax.persistence.criteria.CriteriaBuilder$SimpleCase:
    javax.persistence.criteria.Expression getExpression() -> getExpression
    javax.persistence.criteria.CriteriaBuilder$SimpleCase when(java.lang.Object,java.lang.Object) -> when
    javax.persistence.criteria.CriteriaBuilder$SimpleCase when(java.lang.Object,javax.persistence.criteria.Expression) -> when
    javax.persistence.criteria.Expression otherwise(java.lang.Object) -> otherwise
    javax.persistence.criteria.Expression otherwise(javax.persistence.criteria.Expression) -> otherwise
javax.persistence.criteria.CriteriaBuilder$Trimspec -> javax.persistence.criteria.CriteriaBuilder$Trimspec:
    javax.persistence.criteria.CriteriaBuilder$Trimspec LEADING -> LEADING
    javax.persistence.criteria.CriteriaBuilder$Trimspec TRAILING -> TRAILING
    javax.persistence.criteria.CriteriaBuilder$Trimspec BOTH -> BOTH
    javax.persistence.criteria.CriteriaBuilder$Trimspec[] $VALUES -> $VALUES
    javax.persistence.criteria.CriteriaBuilder$Trimspec[] values() -> values
    javax.persistence.criteria.CriteriaBuilder$Trimspec valueOf(java.lang.String) -> valueOf
javax.persistence.criteria.CriteriaQuery -> javax.persistence.criteria.CriteriaQuery:
    javax.persistence.criteria.CriteriaQuery select(javax.persistence.criteria.Selection) -> select
    javax.persistence.criteria.CriteriaQuery multiselect(javax.persistence.criteria.Selection[]) -> multiselect
    javax.persistence.criteria.CriteriaQuery multiselect(java.util.List) -> multiselect
    javax.persistence.criteria.CriteriaQuery where(javax.persistence.criteria.Expression) -> where
    javax.persistence.criteria.CriteriaQuery where(javax.persistence.criteria.Predicate[]) -> where
    javax.persistence.criteria.CriteriaQuery groupBy(javax.persistence.criteria.Expression[]) -> groupBy
    javax.persistence.criteria.CriteriaQuery groupBy(java.util.List) -> groupBy
    javax.persistence.criteria.CriteriaQuery having(javax.persistence.criteria.Expression) -> having
    javax.persistence.criteria.CriteriaQuery having(javax.persistence.criteria.Predicate[]) -> having
    javax.persistence.criteria.CriteriaQuery orderBy(javax.persistence.criteria.Order[]) -> orderBy
    javax.persistence.criteria.CriteriaQuery orderBy(java.util.List) -> orderBy
    javax.persistence.criteria.CriteriaQuery distinct(boolean) -> distinct
    java.util.List getOrderList() -> getOrderList
    java.util.Set getParameters() -> getParameters
javax.persistence.criteria.Expression -> javax.persistence.criteria.Expression:
    javax.persistence.criteria.Predicate isNull() -> isNull
    javax.persistence.criteria.Predicate isNotNull() -> isNotNull
    javax.persistence.criteria.Predicate in(java.lang.Object[]) -> in
    javax.persistence.criteria.Predicate in(javax.persistence.criteria.Expression[]) -> in
    javax.persistence.criteria.Predicate in(java.util.Collection) -> in
    javax.persistence.criteria.Predicate in(javax.persistence.criteria.Expression) -> in
    javax.persistence.criteria.Expression as(java.lang.Class) -> as
javax.persistence.criteria.Fetch -> javax.persistence.criteria.Fetch:
    javax.persistence.metamodel.Attribute getAttribute() -> getAttribute
    javax.persistence.criteria.FetchParent getParent() -> getParent
    javax.persistence.criteria.JoinType getJoinType() -> getJoinType
javax.persistence.criteria.FetchParent -> javax.persistence.criteria.FetchParent:
    java.util.Set getFetches() -> getFetches
    javax.persistence.criteria.Fetch fetch(javax.persistence.metamodel.SingularAttribute) -> fetch
    javax.persistence.criteria.Fetch fetch(javax.persistence.metamodel.SingularAttribute,javax.persistence.criteria.JoinType) -> fetch
    javax.persistence.criteria.Fetch fetch(javax.persistence.metamodel.PluralAttribute) -> fetch
    javax.persistence.criteria.Fetch fetch(javax.persistence.metamodel.PluralAttribute,javax.persistence.criteria.JoinType) -> fetch
    javax.persistence.criteria.Fetch fetch(java.lang.String) -> fetch
    javax.persistence.criteria.Fetch fetch(java.lang.String,javax.persistence.criteria.JoinType) -> fetch
javax.persistence.criteria.From -> javax.persistence.criteria.From:
    java.util.Set getJoins() -> getJoins
    boolean isCorrelated() -> isCorrelated
    javax.persistence.criteria.From getCorrelationParent() -> getCorrelationParent
    javax.persistence.criteria.Join join(javax.persistence.metamodel.SingularAttribute) -> join
    javax.persistence.criteria.Join join(javax.persistence.metamodel.SingularAttribute,javax.persistence.criteria.JoinType) -> join
    javax.persistence.criteria.CollectionJoin join(javax.persistence.metamodel.CollectionAttribute) -> join
    javax.persistence.criteria.SetJoin join(javax.persistence.metamodel.SetAttribute) -> join
    javax.persistence.criteria.ListJoin join(javax.persistence.metamodel.ListAttribute) -> join
    javax.persistence.criteria.MapJoin join(javax.persistence.metamodel.MapAttribute) -> join
    javax.persistence.criteria.CollectionJoin join(javax.persistence.metamodel.CollectionAttribute,javax.persistence.criteria.JoinType) -> join
    javax.persistence.criteria.SetJoin join(javax.persistence.metamodel.SetAttribute,javax.persistence.criteria.JoinType) -> join
    javax.persistence.criteria.ListJoin join(javax.persistence.metamodel.ListAttribute,javax.persistence.criteria.JoinType) -> join
    javax.persistence.criteria.MapJoin join(javax.persistence.metamodel.MapAttribute,javax.persistence.criteria.JoinType) -> join
    javax.persistence.criteria.Join join(java.lang.String) -> join
    javax.persistence.criteria.CollectionJoin joinCollection(java.lang.String) -> joinCollection
    javax.persistence.criteria.SetJoin joinSet(java.lang.String) -> joinSet
    javax.persistence.criteria.ListJoin joinList(java.lang.String) -> joinList
    javax.persistence.criteria.MapJoin joinMap(java.lang.String) -> joinMap
    javax.persistence.criteria.Join join(java.lang.String,javax.persistence.criteria.JoinType) -> join
    javax.persistence.criteria.CollectionJoin joinCollection(java.lang.String,javax.persistence.criteria.JoinType) -> joinCollection
    javax.persistence.criteria.SetJoin joinSet(java.lang.String,javax.persistence.criteria.JoinType) -> joinSet
    javax.persistence.criteria.ListJoin joinList(java.lang.String,javax.persistence.criteria.JoinType) -> joinList
    javax.persistence.criteria.MapJoin joinMap(java.lang.String,javax.persistence.criteria.JoinType) -> joinMap
javax.persistence.criteria.Join -> javax.persistence.criteria.Join:
    javax.persistence.metamodel.Attribute getAttribute() -> getAttribute
    javax.persistence.criteria.From getParent() -> getParent
    javax.persistence.criteria.JoinType getJoinType() -> getJoinType
javax.persistence.criteria.JoinType -> javax.persistence.criteria.JoinType:
    javax.persistence.criteria.JoinType INNER -> INNER
    javax.persistence.criteria.JoinType LEFT -> LEFT
    javax.persistence.criteria.JoinType RIGHT -> RIGHT
    javax.persistence.criteria.JoinType[] $VALUES -> $VALUES
    javax.persistence.criteria.JoinType[] values() -> values
    javax.persistence.criteria.JoinType valueOf(java.lang.String) -> valueOf
javax.persistence.criteria.ListJoin -> javax.persistence.criteria.ListJoin:
    javax.persistence.metamodel.ListAttribute getModel() -> getModel
    javax.persistence.criteria.Expression index() -> index
javax.persistence.criteria.MapJoin -> javax.persistence.criteria.MapJoin:
    javax.persistence.metamodel.MapAttribute getModel() -> getModel
    javax.persistence.criteria.Path key() -> key
    javax.persistence.criteria.Path value() -> value
    javax.persistence.criteria.Expression entry() -> entry
javax.persistence.criteria.Order -> javax.persistence.criteria.Order:
    javax.persistence.criteria.Order reverse() -> reverse
    boolean isAscending() -> isAscending
    javax.persistence.criteria.Expression getExpression() -> getExpression
javax.persistence.criteria.ParameterExpression -> javax.persistence.criteria.ParameterExpression:
javax.persistence.criteria.Path -> javax.persistence.criteria.Path:
    javax.persistence.metamodel.Bindable getModel() -> getModel
    javax.persistence.criteria.Path getParentPath() -> getParentPath
    javax.persistence.criteria.Path get(javax.persistence.metamodel.SingularAttribute) -> get
    javax.persistence.criteria.Expression get(javax.persistence.metamodel.PluralAttribute) -> get
    javax.persistence.criteria.Expression get(javax.persistence.metamodel.MapAttribute) -> get
    javax.persistence.criteria.Expression type() -> type
    javax.persistence.criteria.Path get(java.lang.String) -> get
javax.persistence.criteria.PluralJoin -> javax.persistence.criteria.PluralJoin:
    javax.persistence.metamodel.PluralAttribute getModel() -> getModel
javax.persistence.criteria.Predicate -> javax.persistence.criteria.Predicate:
    javax.persistence.criteria.Predicate$BooleanOperator getOperator() -> getOperator
    boolean isNegated() -> isNegated
    java.util.List getExpressions() -> getExpressions
    javax.persistence.criteria.Predicate not() -> not
javax.persistence.criteria.Predicate$BooleanOperator -> javax.persistence.criteria.Predicate$BooleanOperator:
    javax.persistence.criteria.Predicate$BooleanOperator AND -> AND
    javax.persistence.criteria.Predicate$BooleanOperator OR -> OR
    javax.persistence.criteria.Predicate$BooleanOperator[] $VALUES -> $VALUES
    javax.persistence.criteria.Predicate$BooleanOperator[] values() -> values
    javax.persistence.criteria.Predicate$BooleanOperator valueOf(java.lang.String) -> valueOf
javax.persistence.criteria.Root -> javax.persistence.criteria.Root:
    javax.persistence.metamodel.EntityType getModel() -> getModel
javax.persistence.criteria.Selection -> javax.persistence.criteria.Selection:
    javax.persistence.criteria.Selection alias(java.lang.String) -> alias
    boolean isCompoundSelection() -> isCompoundSelection
    java.util.List getCompoundSelectionItems() -> getCompoundSelectionItems
javax.persistence.criteria.SetJoin -> javax.persistence.criteria.SetJoin:
    javax.persistence.metamodel.SetAttribute getModel() -> getModel
javax.persistence.criteria.Subquery -> javax.persistence.criteria.Subquery:
    javax.persistence.criteria.Subquery select(javax.persistence.criteria.Expression) -> select
    javax.persistence.criteria.Subquery where(javax.persistence.criteria.Expression) -> where
    javax.persistence.criteria.Subquery where(javax.persistence.criteria.Predicate[]) -> where
    javax.persistence.criteria.Subquery groupBy(javax.persistence.criteria.Expression[]) -> groupBy
    javax.persistence.criteria.Subquery groupBy(java.util.List) -> groupBy
    javax.persistence.criteria.Subquery having(javax.persistence.criteria.Expression) -> having
    javax.persistence.criteria.Subquery having(javax.persistence.criteria.Predicate[]) -> having
    javax.persistence.criteria.Subquery distinct(boolean) -> distinct
    javax.persistence.criteria.Root correlate(javax.persistence.criteria.Root) -> correlate
    javax.persistence.criteria.Join correlate(javax.persistence.criteria.Join) -> correlate
    javax.persistence.criteria.CollectionJoin correlate(javax.persistence.criteria.CollectionJoin) -> correlate
    javax.persistence.criteria.SetJoin correlate(javax.persistence.criteria.SetJoin) -> correlate
    javax.persistence.criteria.ListJoin correlate(javax.persistence.criteria.ListJoin) -> correlate
    javax.persistence.criteria.MapJoin correlate(javax.persistence.criteria.MapJoin) -> correlate
    javax.persistence.criteria.AbstractQuery getParent() -> getParent
    javax.persistence.criteria.Expression getSelection() -> getSelection
    java.util.Set getCorrelatedJoins() -> getCorrelatedJoins
javax.persistence.metamodel.Attribute -> javax.persistence.metamodel.Attribute:
    java.lang.String getName() -> getName
    javax.persistence.metamodel.Attribute$PersistentAttributeType getPersistentAttributeType() -> getPersistentAttributeType
    javax.persistence.metamodel.ManagedType getDeclaringType() -> getDeclaringType
    java.lang.Class getJavaType() -> getJavaType
    java.lang.reflect.Member getJavaMember() -> getJavaMember
    boolean isAssociation() -> isAssociation
    boolean isCollection() -> isCollection
javax.persistence.metamodel.Attribute$PersistentAttributeType -> javax.persistence.metamodel.Attribute$PersistentAttributeType:
    javax.persistence.metamodel.Attribute$PersistentAttributeType MANY_TO_ONE -> MANY_TO_ONE
    javax.persistence.metamodel.Attribute$PersistentAttributeType ONE_TO_ONE -> ONE_TO_ONE
    javax.persistence.metamodel.Attribute$PersistentAttributeType BASIC -> BASIC
    javax.persistence.metamodel.Attribute$PersistentAttributeType EMBEDDED -> EMBEDDED
    javax.persistence.metamodel.Attribute$PersistentAttributeType MANY_TO_MANY -> MANY_TO_MANY
    javax.persistence.metamodel.Attribute$PersistentAttributeType ONE_TO_MANY -> ONE_TO_MANY
    javax.persistence.metamodel.Attribute$PersistentAttributeType ELEMENT_COLLECTION -> ELEMENT_COLLECTION
    javax.persistence.metamodel.Attribute$PersistentAttributeType[] $VALUES -> $VALUES
    javax.persistence.metamodel.Attribute$PersistentAttributeType[] values() -> values
    javax.persistence.metamodel.Attribute$PersistentAttributeType valueOf(java.lang.String) -> valueOf
javax.persistence.metamodel.BasicType -> javax.persistence.metamodel.BasicType:
javax.persistence.metamodel.Bindable -> javax.persistence.metamodel.Bindable:
    javax.persistence.metamodel.Bindable$BindableType getBindableType() -> getBindableType
    java.lang.Class getBindableJavaType() -> getBindableJavaType
javax.persistence.metamodel.Bindable$BindableType -> javax.persistence.metamodel.Bindable$BindableType:
    javax.persistence.metamodel.Bindable$BindableType SINGULAR_ATTRIBUTE -> SINGULAR_ATTRIBUTE
    javax.persistence.metamodel.Bindable$BindableType PLURAL_ATTRIBUTE -> PLURAL_ATTRIBUTE
    javax.persistence.metamodel.Bindable$BindableType ENTITY_TYPE -> ENTITY_TYPE
    javax.persistence.metamodel.Bindable$BindableType[] $VALUES -> $VALUES
    javax.persistence.metamodel.Bindable$BindableType[] values() -> values
    javax.persistence.metamodel.Bindable$BindableType valueOf(java.lang.String) -> valueOf
javax.persistence.metamodel.CollectionAttribute -> javax.persistence.metamodel.CollectionAttribute:
javax.persistence.metamodel.EmbeddableType -> javax.persistence.metamodel.EmbeddableType:
javax.persistence.metamodel.EntityType -> javax.persistence.metamodel.EntityType:
    java.lang.String getName() -> getName
javax.persistence.metamodel.IdentifiableType -> javax.persistence.metamodel.IdentifiableType:
    javax.persistence.metamodel.SingularAttribute getId(java.lang.Class) -> getId
    javax.persistence.metamodel.SingularAttribute getDeclaredId(java.lang.Class) -> getDeclaredId
    javax.persistence.metamodel.SingularAttribute getVersion(java.lang.Class) -> getVersion
    javax.persistence.metamodel.SingularAttribute getDeclaredVersion(java.lang.Class) -> getDeclaredVersion
    javax.persistence.metamodel.IdentifiableType getSupertype() -> getSupertype
    boolean hasSingleIdAttribute() -> hasSingleIdAttribute
    boolean hasVersionAttribute() -> hasVersionAttribute
    java.util.Set getIdClassAttributes() -> getIdClassAttributes
    javax.persistence.metamodel.Type getIdType() -> getIdType
javax.persistence.metamodel.ListAttribute -> javax.persistence.metamodel.ListAttribute:
javax.persistence.metamodel.ManagedType -> javax.persistence.metamodel.ManagedType:
    java.util.Set getAttributes() -> getAttributes
    java.util.Set getDeclaredAttributes() -> getDeclaredAttributes
    javax.persistence.metamodel.SingularAttribute getSingularAttribute(java.lang.String,java.lang.Class) -> getSingularAttribute
    javax.persistence.metamodel.SingularAttribute getDeclaredSingularAttribute(java.lang.String,java.lang.Class) -> getDeclaredSingularAttribute
    java.util.Set getSingularAttributes() -> getSingularAttributes
    java.util.Set getDeclaredSingularAttributes() -> getDeclaredSingularAttributes
    javax.persistence.metamodel.CollectionAttribute getCollection(java.lang.String,java.lang.Class) -> getCollection
    javax.persistence.metamodel.CollectionAttribute getDeclaredCollection(java.lang.String,java.lang.Class) -> getDeclaredCollection
    javax.persistence.metamodel.SetAttribute getSet(java.lang.String,java.lang.Class) -> getSet
    javax.persistence.metamodel.SetAttribute getDeclaredSet(java.lang.String,java.lang.Class) -> getDeclaredSet
    javax.persistence.metamodel.ListAttribute getList(java.lang.String,java.lang.Class) -> getList
    javax.persistence.metamodel.ListAttribute getDeclaredList(java.lang.String,java.lang.Class) -> getDeclaredList
    javax.persistence.metamodel.MapAttribute getMap(java.lang.String,java.lang.Class,java.lang.Class) -> getMap
    javax.persistence.metamodel.MapAttribute getDeclaredMap(java.lang.String,java.lang.Class,java.lang.Class) -> getDeclaredMap
    java.util.Set getPluralAttributes() -> getPluralAttributes
    java.util.Set getDeclaredPluralAttributes() -> getDeclaredPluralAttributes
    javax.persistence.metamodel.Attribute getAttribute(java.lang.String) -> getAttribute
    javax.persistence.metamodel.Attribute getDeclaredAttribute(java.lang.String) -> getDeclaredAttribute
    javax.persistence.metamodel.SingularAttribute getSingularAttribute(java.lang.String) -> getSingularAttribute
    javax.persistence.metamodel.SingularAttribute getDeclaredSingularAttribute(java.lang.String) -> getDeclaredSingularAttribute
    javax.persistence.metamodel.CollectionAttribute getCollection(java.lang.String) -> getCollection
    javax.persistence.metamodel.CollectionAttribute getDeclaredCollection(java.lang.String) -> getDeclaredCollection
    javax.persistence.metamodel.SetAttribute getSet(java.lang.String) -> getSet
    javax.persistence.metamodel.SetAttribute getDeclaredSet(java.lang.String) -> getDeclaredSet
    javax.persistence.metamodel.ListAttribute getList(java.lang.String) -> getList
    javax.persistence.metamodel.ListAttribute getDeclaredList(java.lang.String) -> getDeclaredList
    javax.persistence.metamodel.MapAttribute getMap(java.lang.String) -> getMap
    javax.persistence.metamodel.MapAttribute getDeclaredMap(java.lang.String) -> getDeclaredMap
javax.persistence.metamodel.MapAttribute -> javax.persistence.metamodel.MapAttribute:
    java.lang.Class getKeyJavaType() -> getKeyJavaType
    javax.persistence.metamodel.Type getKeyType() -> getKeyType
javax.persistence.metamodel.MappedSuperclassType -> javax.persistence.metamodel.MappedSuperclassType:
javax.persistence.metamodel.Metamodel -> javax.persistence.metamodel.Metamodel:
    javax.persistence.metamodel.EntityType entity(java.lang.Class) -> entity
    javax.persistence.metamodel.ManagedType managedType(java.lang.Class) -> managedType
    javax.persistence.metamodel.EmbeddableType embeddable(java.lang.Class) -> embeddable
    java.util.Set getManagedTypes() -> getManagedTypes
    java.util.Set getEntities() -> getEntities
    java.util.Set getEmbeddables() -> getEmbeddables
javax.persistence.metamodel.PluralAttribute -> javax.persistence.metamodel.PluralAttribute:
    javax.persistence.metamodel.PluralAttribute$CollectionType getCollectionType() -> getCollectionType
    javax.persistence.metamodel.Type getElementType() -> getElementType
javax.persistence.metamodel.PluralAttribute$CollectionType -> javax.persistence.metamodel.PluralAttribute$CollectionType:
    javax.persistence.metamodel.PluralAttribute$CollectionType COLLECTION -> COLLECTION
    javax.persistence.metamodel.PluralAttribute$CollectionType SET -> SET
    javax.persistence.metamodel.PluralAttribute$CollectionType LIST -> LIST
    javax.persistence.metamodel.PluralAttribute$CollectionType MAP -> MAP
    javax.persistence.metamodel.PluralAttribute$CollectionType[] $VALUES -> $VALUES
    javax.persistence.metamodel.PluralAttribute$CollectionType[] values() -> values
    javax.persistence.metamodel.PluralAttribute$CollectionType valueOf(java.lang.String) -> valueOf
javax.persistence.metamodel.SetAttribute -> javax.persistence.metamodel.SetAttribute:
javax.persistence.metamodel.SingularAttribute -> javax.persistence.metamodel.SingularAttribute:
    boolean isId() -> isId
    boolean isVersion() -> isVersion
    boolean isOptional() -> isOptional
    javax.persistence.metamodel.Type getType() -> getType
javax.persistence.metamodel.StaticMetamodel -> javax.persistence.metamodel.StaticMetamodel:
    java.lang.Class value() -> value
javax.persistence.metamodel.Type -> javax.persistence.metamodel.Type:
    javax.persistence.metamodel.Type$PersistenceType getPersistenceType() -> getPersistenceType
    java.lang.Class getJavaType() -> getJavaType
javax.persistence.metamodel.Type$PersistenceType -> javax.persistence.metamodel.Type$PersistenceType:
    javax.persistence.metamodel.Type$PersistenceType ENTITY -> ENTITY
    javax.persistence.metamodel.Type$PersistenceType EMBEDDABLE -> EMBEDDABLE
    javax.persistence.metamodel.Type$PersistenceType MAPPED_SUPERCLASS -> MAPPED_SUPERCLASS
    javax.persistence.metamodel.Type$PersistenceType BASIC -> BASIC
    javax.persistence.metamodel.Type$PersistenceType[] $VALUES -> $VALUES
    javax.persistence.metamodel.Type$PersistenceType[] values() -> values
    javax.persistence.metamodel.Type$PersistenceType valueOf(java.lang.String) -> valueOf
javax.persistence.spi.ClassTransformer -> javax.persistence.spi.ClassTransformer:
    byte[] transform(java.lang.ClassLoader,java.lang.String,java.lang.Class,java.security.ProtectionDomain,byte[]) -> transform
javax.persistence.spi.LoadState -> javax.persistence.spi.LoadState:
    javax.persistence.spi.LoadState LOADED -> LOADED
    javax.persistence.spi.LoadState NOT_LOADED -> NOT_LOADED
    javax.persistence.spi.LoadState UNKNOWN -> UNKNOWN
    javax.persistence.spi.LoadState[] $VALUES -> $VALUES
    javax.persistence.spi.LoadState[] values() -> values
    javax.persistence.spi.LoadState valueOf(java.lang.String) -> valueOf
javax.persistence.spi.PersistenceProvider -> javax.persistence.spi.PersistenceProvider:
    javax.persistence.EntityManagerFactory createEntityManagerFactory(java.lang.String,java.util.Map) -> createEntityManagerFactory
    javax.persistence.EntityManagerFactory createContainerEntityManagerFactory(javax.persistence.spi.PersistenceUnitInfo,java.util.Map) -> createContainerEntityManagerFactory
    javax.persistence.spi.ProviderUtil getProviderUtil() -> getProviderUtil
javax.persistence.spi.PersistenceProviderResolver -> javax.persistence.spi.PersistenceProviderResolver:
    java.util.List getPersistenceProviders() -> getPersistenceProviders
    void clearCachedProviders() -> clearCachedProviders
javax.persistence.spi.PersistenceProviderResolverHolder -> javax.persistence.spi.PersistenceProviderResolverHolder:
    javax.persistence.spi.PersistenceProviderResolver singleton -> singleton
    javax.persistence.spi.PersistenceProviderResolver getPersistenceProviderResolver() -> getPersistenceProviderResolver
    void setPersistenceProviderResolver(javax.persistence.spi.PersistenceProviderResolver) -> setPersistenceProviderResolver
javax.persistence.spi.PersistenceProviderResolverHolder$1 -> javax.persistence.spi.PersistenceProviderResolverHolder$1:
javax.persistence.spi.PersistenceProviderResolverHolder$DefaultPersistenceProviderResolver -> javax.persistence.spi.PersistenceProviderResolverHolder$DefaultPersistenceProviderResolver:
    java.util.WeakHashMap providers -> providers
    java.lang.String LOGGER_SUBSYSTEM -> LOGGER_SUBSYSTEM
    java.util.logging.Logger logger -> logger
    java.lang.String SERVICE_PROVIDER_FILE -> SERVICE_PROVIDER_FILE
    java.util.regex.Pattern nonCommentPattern -> nonCommentPattern
    java.util.List getPersistenceProviders() -> getPersistenceProviders
    void log(java.util.logging.Level,java.lang.String) -> log
    java.util.Collection getProviderNames(java.lang.ClassLoader) -> getProviderNames
    void addProviderNames(java.net.URL,java.util.Collection) -> addProviderNames
    void clearCachedProviders() -> clearCachedProviders
javax.persistence.spi.PersistenceProviderResolverHolder$DefaultPersistenceProviderResolver$ProviderName -> javax.persistence.spi.PersistenceProviderResolverHolder$DefaultPersistenceProviderResolver$ProviderName:
    java.lang.String name -> name
    java.net.URL source -> source
    javax.persistence.spi.PersistenceProviderResolverHolder$DefaultPersistenceProviderResolver this$0 -> this$0
    java.lang.String getName() -> getName
    java.net.URL getSource() -> getSource
    java.lang.String toString() -> toString
javax.persistence.spi.PersistenceUnitInfo -> javax.persistence.spi.PersistenceUnitInfo:
    java.lang.String getPersistenceUnitName() -> getPersistenceUnitName
    java.lang.String getPersistenceProviderClassName() -> getPersistenceProviderClassName
    javax.persistence.spi.PersistenceUnitTransactionType getTransactionType() -> getTransactionType
    javax.sql.DataSource getJtaDataSource() -> getJtaDataSource
    javax.sql.DataSource getNonJtaDataSource() -> getNonJtaDataSource
    java.util.List getMappingFileNames() -> getMappingFileNames
    java.util.List getJarFileUrls() -> getJarFileUrls
    java.net.URL getPersistenceUnitRootUrl() -> getPersistenceUnitRootUrl
    java.util.List getManagedClassNames() -> getManagedClassNames
    boolean excludeUnlistedClasses() -> excludeUnlistedClasses
    javax.persistence.SharedCacheMode getSharedCacheMode() -> getSharedCacheMode
    javax.persistence.ValidationMode getValidationMode() -> getValidationMode
    java.util.Properties getProperties() -> getProperties
    java.lang.String getPersistenceXMLSchemaVersion() -> getPersistenceXMLSchemaVersion
    java.lang.ClassLoader getClassLoader() -> getClassLoader
    void addTransformer(javax.persistence.spi.ClassTransformer) -> addTransformer
    java.lang.ClassLoader getNewTempClassLoader() -> getNewTempClassLoader
javax.persistence.spi.PersistenceUnitTransactionType -> javax.persistence.spi.PersistenceUnitTransactionType:
    javax.persistence.spi.PersistenceUnitTransactionType JTA -> JTA
    javax.persistence.spi.PersistenceUnitTransactionType RESOURCE_LOCAL -> RESOURCE_LOCAL
    javax.persistence.spi.PersistenceUnitTransactionType[] $VALUES -> $VALUES
    javax.persistence.spi.PersistenceUnitTransactionType[] values() -> values
    javax.persistence.spi.PersistenceUnitTransactionType valueOf(java.lang.String) -> valueOf
javax.persistence.spi.ProviderUtil -> javax.persistence.spi.ProviderUtil:
    javax.persistence.spi.LoadState isLoadedWithoutReference(java.lang.Object,java.lang.String) -> isLoadedWithoutReference
    javax.persistence.spi.LoadState isLoadedWithReference(java.lang.Object,java.lang.String) -> isLoadedWithReference
    javax.persistence.spi.LoadState isLoaded(java.lang.Object) -> isLoaded
org.apache.commons.lang3.AnnotationUtils -> org.apache.commons.lang3.AnnotationUtils:
    org.apache.commons.lang3.builder.ToStringStyle TO_STRING_STYLE -> TO_STRING_STYLE
    boolean equals(java.lang.annotation.Annotation,java.lang.annotation.Annotation) -> equals
    int hashCode(java.lang.annotation.Annotation) -> hashCode
    java.lang.String toString(java.lang.annotation.Annotation) -> toString
    boolean isValidAnnotationMemberType(java.lang.Class) -> isValidAnnotationMemberType
    int hashMember(java.lang.String,java.lang.Object) -> hashMember
    boolean memberEquals(java.lang.Class,java.lang.Object,java.lang.Object) -> memberEquals
    boolean arrayMemberEquals(java.lang.Class,java.lang.Object,java.lang.Object) -> arrayMemberEquals
    boolean annotationArrayMemberEquals(java.lang.annotation.Annotation[],java.lang.annotation.Annotation[]) -> annotationArrayMemberEquals
    int arrayMemberHash(java.lang.Class,java.lang.Object) -> arrayMemberHash
org.apache.commons.lang3.AnnotationUtils$1 -> org.apache.commons.lang3.AnnotationUtils$1:
    long serialVersionUID -> serialVersionUID
    java.lang.String getShortClassName(java.lang.Class) -> getShortClassName
    void appendDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object) -> appendDetail
org.apache.commons.lang3.ArrayUtils -> org.apache.commons.lang3.ArrayUtils:
    java.lang.Object[] EMPTY_OBJECT_ARRAY -> EMPTY_OBJECT_ARRAY
    java.lang.Class[] EMPTY_CLASS_ARRAY -> EMPTY_CLASS_ARRAY
    java.lang.String[] EMPTY_STRING_ARRAY -> EMPTY_STRING_ARRAY
    long[] EMPTY_LONG_ARRAY -> EMPTY_LONG_ARRAY
    java.lang.Long[] EMPTY_LONG_OBJECT_ARRAY -> EMPTY_LONG_OBJECT_ARRAY
    int[] EMPTY_INT_ARRAY -> EMPTY_INT_ARRAY
    java.lang.Integer[] EMPTY_INTEGER_OBJECT_ARRAY -> EMPTY_INTEGER_OBJECT_ARRAY
    short[] EMPTY_SHORT_ARRAY -> EMPTY_SHORT_ARRAY
    java.lang.Short[] EMPTY_SHORT_OBJECT_ARRAY -> EMPTY_SHORT_OBJECT_ARRAY
    byte[] EMPTY_BYTE_ARRAY -> EMPTY_BYTE_ARRAY
    java.lang.Byte[] EMPTY_BYTE_OBJECT_ARRAY -> EMPTY_BYTE_OBJECT_ARRAY
    double[] EMPTY_DOUBLE_ARRAY -> EMPTY_DOUBLE_ARRAY
    java.lang.Double[] EMPTY_DOUBLE_OBJECT_ARRAY -> EMPTY_DOUBLE_OBJECT_ARRAY
    float[] EMPTY_FLOAT_ARRAY -> EMPTY_FLOAT_ARRAY
    java.lang.Float[] EMPTY_FLOAT_OBJECT_ARRAY -> EMPTY_FLOAT_OBJECT_ARRAY
    boolean[] EMPTY_BOOLEAN_ARRAY -> EMPTY_BOOLEAN_ARRAY
    java.lang.Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY -> EMPTY_BOOLEAN_OBJECT_ARRAY
    char[] EMPTY_CHAR_ARRAY -> EMPTY_CHAR_ARRAY
    java.lang.Character[] EMPTY_CHARACTER_OBJECT_ARRAY -> EMPTY_CHARACTER_OBJECT_ARRAY
    int INDEX_NOT_FOUND -> INDEX_NOT_FOUND
    java.lang.String toString(java.lang.Object) -> toString
    java.lang.String toString(java.lang.Object,java.lang.String) -> toString
    int hashCode(java.lang.Object) -> hashCode
    boolean isEquals(java.lang.Object,java.lang.Object) -> isEquals
    java.util.Map toMap(java.lang.Object[]) -> toMap
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    java.lang.Object[] clone(java.lang.Object[]) -> clone
    long[] clone(long[]) -> clone
    int[] clone(int[]) -> clone
    short[] clone(short[]) -> clone
    char[] clone(char[]) -> clone
    byte[] clone(byte[]) -> clone
    double[] clone(double[]) -> clone
    float[] clone(float[]) -> clone
    boolean[] clone(boolean[]) -> clone
    java.lang.Object[] nullToEmpty(java.lang.Object[]) -> nullToEmpty
    java.lang.Class[] nullToEmpty(java.lang.Class[]) -> nullToEmpty
    java.lang.String[] nullToEmpty(java.lang.String[]) -> nullToEmpty
    long[] nullToEmpty(long[]) -> nullToEmpty
    int[] nullToEmpty(int[]) -> nullToEmpty
    short[] nullToEmpty(short[]) -> nullToEmpty
    char[] nullToEmpty(char[]) -> nullToEmpty
    byte[] nullToEmpty(byte[]) -> nullToEmpty
    double[] nullToEmpty(double[]) -> nullToEmpty
    float[] nullToEmpty(float[]) -> nullToEmpty
    boolean[] nullToEmpty(boolean[]) -> nullToEmpty
    java.lang.Long[] nullToEmpty(java.lang.Long[]) -> nullToEmpty
    java.lang.Integer[] nullToEmpty(java.lang.Integer[]) -> nullToEmpty
    java.lang.Short[] nullToEmpty(java.lang.Short[]) -> nullToEmpty
    java.lang.Character[] nullToEmpty(java.lang.Character[]) -> nullToEmpty
    java.lang.Byte[] nullToEmpty(java.lang.Byte[]) -> nullToEmpty
    java.lang.Double[] nullToEmpty(java.lang.Double[]) -> nullToEmpty
    java.lang.Float[] nullToEmpty(java.lang.Float[]) -> nullToEmpty
    java.lang.Boolean[] nullToEmpty(java.lang.Boolean[]) -> nullToEmpty
    java.lang.Object[] subarray(java.lang.Object[],int,int) -> subarray
    long[] subarray(long[],int,int) -> subarray
    int[] subarray(int[],int,int) -> subarray
    short[] subarray(short[],int,int) -> subarray
    char[] subarray(char[],int,int) -> subarray
    byte[] subarray(byte[],int,int) -> subarray
    double[] subarray(double[],int,int) -> subarray
    float[] subarray(float[],int,int) -> subarray
    boolean[] subarray(boolean[],int,int) -> subarray
    boolean isSameLength(java.lang.Object[],java.lang.Object[]) -> isSameLength
    boolean isSameLength(long[],long[]) -> isSameLength
    boolean isSameLength(int[],int[]) -> isSameLength
    boolean isSameLength(short[],short[]) -> isSameLength
    boolean isSameLength(char[],char[]) -> isSameLength
    boolean isSameLength(byte[],byte[]) -> isSameLength
    boolean isSameLength(double[],double[]) -> isSameLength
    boolean isSameLength(float[],float[]) -> isSameLength
    boolean isSameLength(boolean[],boolean[]) -> isSameLength
    int getLength(java.lang.Object) -> getLength
    boolean isSameType(java.lang.Object,java.lang.Object) -> isSameType
    void reverse(java.lang.Object[]) -> reverse
    void reverse(long[]) -> reverse
    void reverse(int[]) -> reverse
    void reverse(short[]) -> reverse
    void reverse(char[]) -> reverse
    void reverse(byte[]) -> reverse
    void reverse(double[]) -> reverse
    void reverse(float[]) -> reverse
    void reverse(boolean[]) -> reverse
    void reverse(boolean[],int,int) -> reverse
    void reverse(byte[],int,int) -> reverse
    void reverse(char[],int,int) -> reverse
    void reverse(double[],int,int) -> reverse
    void reverse(float[],int,int) -> reverse
    void reverse(int[],int,int) -> reverse
    void reverse(long[],int,int) -> reverse
    void reverse(java.lang.Object[],int,int) -> reverse
    void reverse(short[],int,int) -> reverse
    int indexOf(java.lang.Object[],java.lang.Object) -> indexOf
    int indexOf(java.lang.Object[],java.lang.Object,int) -> indexOf
    int lastIndexOf(java.lang.Object[],java.lang.Object) -> lastIndexOf
    int lastIndexOf(java.lang.Object[],java.lang.Object,int) -> lastIndexOf
    boolean contains(java.lang.Object[],java.lang.Object) -> contains
    int indexOf(long[],long) -> indexOf
    int indexOf(long[],long,int) -> indexOf
    int lastIndexOf(long[],long) -> lastIndexOf
    int lastIndexOf(long[],long,int) -> lastIndexOf
    boolean contains(long[],long) -> contains
    int indexOf(int[],int) -> indexOf
    int indexOf(int[],int,int) -> indexOf
    int lastIndexOf(int[],int) -> lastIndexOf
    int lastIndexOf(int[],int,int) -> lastIndexOf
    boolean contains(int[],int) -> contains
    int indexOf(short[],short) -> indexOf
    int indexOf(short[],short,int) -> indexOf
    int lastIndexOf(short[],short) -> lastIndexOf
    int lastIndexOf(short[],short,int) -> lastIndexOf
    boolean contains(short[],short) -> contains
    int indexOf(char[],char) -> indexOf
    int indexOf(char[],char,int) -> indexOf
    int lastIndexOf(char[],char) -> lastIndexOf
    int lastIndexOf(char[],char,int) -> lastIndexOf
    boolean contains(char[],char) -> contains
    int indexOf(byte[],byte) -> indexOf
    int indexOf(byte[],byte,int) -> indexOf
    int lastIndexOf(byte[],byte) -> lastIndexOf
    int lastIndexOf(byte[],byte,int) -> lastIndexOf
    boolean contains(byte[],byte) -> contains
    int indexOf(double[],double) -> indexOf
    int indexOf(double[],double,double) -> indexOf
    int indexOf(double[],double,int) -> indexOf
    int indexOf(double[],double,int,double) -> indexOf
    int lastIndexOf(double[],double) -> lastIndexOf
    int lastIndexOf(double[],double,double) -> lastIndexOf
    int lastIndexOf(double[],double,int) -> lastIndexOf
    int lastIndexOf(double[],double,int,double) -> lastIndexOf
    boolean contains(double[],double) -> contains
    boolean contains(double[],double,double) -> contains
    int indexOf(float[],float) -> indexOf
    int indexOf(float[],float,int) -> indexOf
    int lastIndexOf(float[],float) -> lastIndexOf
    int lastIndexOf(float[],float,int) -> lastIndexOf
    boolean contains(float[],float) -> contains
    int indexOf(boolean[],boolean) -> indexOf
    int indexOf(boolean[],boolean,int) -> indexOf
    int lastIndexOf(boolean[],boolean) -> lastIndexOf
    int lastIndexOf(boolean[],boolean,int) -> lastIndexOf
    boolean contains(boolean[],boolean) -> contains
    char[] toPrimitive(java.lang.Character[]) -> toPrimitive
    char[] toPrimitive(java.lang.Character[],char) -> toPrimitive
    java.lang.Character[] toObject(char[]) -> toObject
    long[] toPrimitive(java.lang.Long[]) -> toPrimitive
    long[] toPrimitive(java.lang.Long[],long) -> toPrimitive
    java.lang.Long[] toObject(long[]) -> toObject
    int[] toPrimitive(java.lang.Integer[]) -> toPrimitive
    int[] toPrimitive(java.lang.Integer[],int) -> toPrimitive
    java.lang.Integer[] toObject(int[]) -> toObject
    short[] toPrimitive(java.lang.Short[]) -> toPrimitive
    short[] toPrimitive(java.lang.Short[],short) -> toPrimitive
    java.lang.Short[] toObject(short[]) -> toObject
    byte[] toPrimitive(java.lang.Byte[]) -> toPrimitive
    byte[] toPrimitive(java.lang.Byte[],byte) -> toPrimitive
    java.lang.Byte[] toObject(byte[]) -> toObject
    double[] toPrimitive(java.lang.Double[]) -> toPrimitive
    double[] toPrimitive(java.lang.Double[],double) -> toPrimitive
    java.lang.Double[] toObject(double[]) -> toObject
    float[] toPrimitive(java.lang.Float[]) -> toPrimitive
    float[] toPrimitive(java.lang.Float[],float) -> toPrimitive
    java.lang.Float[] toObject(float[]) -> toObject
    boolean[] toPrimitive(java.lang.Boolean[]) -> toPrimitive
    boolean[] toPrimitive(java.lang.Boolean[],boolean) -> toPrimitive
    java.lang.Boolean[] toObject(boolean[]) -> toObject
    boolean isEmpty(java.lang.Object[]) -> isEmpty
    boolean isEmpty(long[]) -> isEmpty
    boolean isEmpty(int[]) -> isEmpty
    boolean isEmpty(short[]) -> isEmpty
    boolean isEmpty(char[]) -> isEmpty
    boolean isEmpty(byte[]) -> isEmpty
    boolean isEmpty(double[]) -> isEmpty
    boolean isEmpty(float[]) -> isEmpty
    boolean isEmpty(boolean[]) -> isEmpty
    boolean isNotEmpty(java.lang.Object[]) -> isNotEmpty
    boolean isNotEmpty(long[]) -> isNotEmpty
    boolean isNotEmpty(int[]) -> isNotEmpty
    boolean isNotEmpty(short[]) -> isNotEmpty
    boolean isNotEmpty(char[]) -> isNotEmpty
    boolean isNotEmpty(byte[]) -> isNotEmpty
    boolean isNotEmpty(double[]) -> isNotEmpty
    boolean isNotEmpty(float[]) -> isNotEmpty
    boolean isNotEmpty(boolean[]) -> isNotEmpty
    java.lang.Object[] addAll(java.lang.Object[],java.lang.Object[]) -> addAll
    boolean[] addAll(boolean[],boolean[]) -> addAll
    char[] addAll(char[],char[]) -> addAll
    byte[] addAll(byte[],byte[]) -> addAll
    short[] addAll(short[],short[]) -> addAll
    int[] addAll(int[],int[]) -> addAll
    long[] addAll(long[],long[]) -> addAll
    float[] addAll(float[],float[]) -> addAll
    double[] addAll(double[],double[]) -> addAll
    java.lang.Object[] add(java.lang.Object[],java.lang.Object) -> add
    boolean[] add(boolean[],boolean) -> add
    byte[] add(byte[],byte) -> add
    char[] add(char[],char) -> add
    double[] add(double[],double) -> add
    float[] add(float[],float) -> add
    int[] add(int[],int) -> add
    long[] add(long[],long) -> add
    short[] add(short[],short) -> add
    java.lang.Object copyArrayGrow1(java.lang.Object,java.lang.Class) -> copyArrayGrow1
    java.lang.Object[] add(java.lang.Object[],int,java.lang.Object) -> add
    boolean[] add(boolean[],int,boolean) -> add
    char[] add(char[],int,char) -> add
    byte[] add(byte[],int,byte) -> add
    short[] add(short[],int,short) -> add
    int[] add(int[],int,int) -> add
    long[] add(long[],int,long) -> add
    float[] add(float[],int,float) -> add
    double[] add(double[],int,double) -> add
    java.lang.Object add(java.lang.Object,int,java.lang.Object,java.lang.Class) -> add
    java.lang.Object[] remove(java.lang.Object[],int) -> remove
    java.lang.Object[] removeElement(java.lang.Object[],java.lang.Object) -> removeElement
    boolean[] remove(boolean[],int) -> remove
    boolean[] removeElement(boolean[],boolean) -> removeElement
    byte[] remove(byte[],int) -> remove
    byte[] removeElement(byte[],byte) -> removeElement
    char[] remove(char[],int) -> remove
    char[] removeElement(char[],char) -> removeElement
    double[] remove(double[],int) -> remove
    double[] removeElement(double[],double) -> removeElement
    float[] remove(float[],int) -> remove
    float[] removeElement(float[],float) -> removeElement
    int[] remove(int[],int) -> remove
    int[] removeElement(int[],int) -> removeElement
    long[] remove(long[],int) -> remove
    long[] removeElement(long[],long) -> removeElement
    short[] remove(short[],int) -> remove
    short[] removeElement(short[],short) -> removeElement
    java.lang.Object remove(java.lang.Object,int) -> remove
    java.lang.Object[] removeAll(java.lang.Object[],int[]) -> removeAll
    java.lang.Object[] removeElements(java.lang.Object[],java.lang.Object[]) -> removeElements
    byte[] removeAll(byte[],int[]) -> removeAll
    byte[] removeElements(byte[],byte[]) -> removeElements
    short[] removeAll(short[],int[]) -> removeAll
    short[] removeElements(short[],short[]) -> removeElements
    int[] removeAll(int[],int[]) -> removeAll
    int[] removeElements(int[],int[]) -> removeElements
    char[] removeAll(char[],int[]) -> removeAll
    char[] removeElements(char[],char[]) -> removeElements
    long[] removeAll(long[],int[]) -> removeAll
    long[] removeElements(long[],long[]) -> removeElements
    float[] removeAll(float[],int[]) -> removeAll
    float[] removeElements(float[],float[]) -> removeElements
    double[] removeAll(double[],int[]) -> removeAll
    double[] removeElements(double[],double[]) -> removeElements
    boolean[] removeAll(boolean[],int[]) -> removeAll
    boolean[] removeElements(boolean[],boolean[]) -> removeElements
    java.lang.Object removeAll(java.lang.Object,int[]) -> removeAll
    java.lang.Object removeAll(java.lang.Object,java.util.BitSet) -> removeAll
org.apache.commons.lang3.BitField -> org.apache.commons.lang3.BitField:
    int _mask -> _mask
    int _shift_count -> _shift_count
    int getValue(int) -> getValue
    short getShortValue(short) -> getShortValue
    int getRawValue(int) -> getRawValue
    short getShortRawValue(short) -> getShortRawValue
    boolean isSet(int) -> isSet
    boolean isAllSet(int) -> isAllSet
    int setValue(int,int) -> setValue
    short setShortValue(short,short) -> setShortValue
    int clear(int) -> clear
    short clearShort(short) -> clearShort
    byte clearByte(byte) -> clearByte
    int set(int) -> set
    short setShort(short) -> setShort
    byte setByte(byte) -> setByte
    int setBoolean(int,boolean) -> setBoolean
    short setShortBoolean(short,boolean) -> setShortBoolean
    byte setByteBoolean(byte,boolean) -> setByteBoolean
org.apache.commons.lang3.BooleanUtils -> org.apache.commons.lang3.BooleanUtils:
    java.lang.Boolean negate(java.lang.Boolean) -> negate
    boolean isTrue(java.lang.Boolean) -> isTrue
    boolean isNotTrue(java.lang.Boolean) -> isNotTrue
    boolean isFalse(java.lang.Boolean) -> isFalse
    boolean isNotFalse(java.lang.Boolean) -> isNotFalse
    boolean toBoolean(java.lang.Boolean) -> toBoolean
    boolean toBooleanDefaultIfNull(java.lang.Boolean,boolean) -> toBooleanDefaultIfNull
    boolean toBoolean(int) -> toBoolean
    java.lang.Boolean toBooleanObject(int) -> toBooleanObject
    java.lang.Boolean toBooleanObject(java.lang.Integer) -> toBooleanObject
    boolean toBoolean(int,int,int) -> toBoolean
    boolean toBoolean(java.lang.Integer,java.lang.Integer,java.lang.Integer) -> toBoolean
    java.lang.Boolean toBooleanObject(int,int,int,int) -> toBooleanObject
    java.lang.Boolean toBooleanObject(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer) -> toBooleanObject
    int toInteger(boolean) -> toInteger
    java.lang.Integer toIntegerObject(boolean) -> toIntegerObject
    java.lang.Integer toIntegerObject(java.lang.Boolean) -> toIntegerObject
    int toInteger(boolean,int,int) -> toInteger
    int toInteger(java.lang.Boolean,int,int,int) -> toInteger
    java.lang.Integer toIntegerObject(boolean,java.lang.Integer,java.lang.Integer) -> toIntegerObject
    java.lang.Integer toIntegerObject(java.lang.Boolean,java.lang.Integer,java.lang.Integer,java.lang.Integer) -> toIntegerObject
    java.lang.Boolean toBooleanObject(java.lang.String) -> toBooleanObject
    java.lang.Boolean toBooleanObject(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> toBooleanObject
    boolean toBoolean(java.lang.String) -> toBoolean
    boolean toBoolean(java.lang.String,java.lang.String,java.lang.String) -> toBoolean
    java.lang.String toStringTrueFalse(java.lang.Boolean) -> toStringTrueFalse
    java.lang.String toStringOnOff(java.lang.Boolean) -> toStringOnOff
    java.lang.String toStringYesNo(java.lang.Boolean) -> toStringYesNo
    java.lang.String toString(java.lang.Boolean,java.lang.String,java.lang.String,java.lang.String) -> toString
    java.lang.String toStringTrueFalse(boolean) -> toStringTrueFalse
    java.lang.String toStringOnOff(boolean) -> toStringOnOff
    java.lang.String toStringYesNo(boolean) -> toStringYesNo
    java.lang.String toString(boolean,java.lang.String,java.lang.String) -> toString
    boolean and(boolean[]) -> and
    java.lang.Boolean and(java.lang.Boolean[]) -> and
    boolean or(boolean[]) -> or
    java.lang.Boolean or(java.lang.Boolean[]) -> or
    boolean xor(boolean[]) -> xor
    java.lang.Boolean xor(java.lang.Boolean[]) -> xor
org.apache.commons.lang3.CharEncoding -> org.apache.commons.lang3.CharEncoding:
    java.lang.String ISO_8859_1 -> ISO_8859_1
    java.lang.String US_ASCII -> US_ASCII
    java.lang.String UTF_16 -> UTF_16
    java.lang.String UTF_16BE -> UTF_16BE
    java.lang.String UTF_16LE -> UTF_16LE
    java.lang.String UTF_8 -> UTF_8
    boolean isSupported(java.lang.String) -> isSupported
org.apache.commons.lang3.CharRange -> org.apache.commons.lang3.CharRange:
    long serialVersionUID -> serialVersionUID
    char start -> start
    char end -> end
    boolean negated -> negated
    java.lang.String iToString -> iToString
    org.apache.commons.lang3.CharRange is(char) -> is
    org.apache.commons.lang3.CharRange isNot(char) -> isNot
    org.apache.commons.lang3.CharRange isIn(char,char) -> isIn
    org.apache.commons.lang3.CharRange isNotIn(char,char) -> isNotIn
    char getStart() -> getStart
    char getEnd() -> getEnd
    boolean isNegated() -> isNegated
    boolean contains(char) -> contains
    boolean contains(org.apache.commons.lang3.CharRange) -> contains
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.util.Iterator iterator() -> iterator
    boolean access$100(org.apache.commons.lang3.CharRange) -> access$100
    char access$200(org.apache.commons.lang3.CharRange) -> access$200
    char access$300(org.apache.commons.lang3.CharRange) -> access$300
org.apache.commons.lang3.CharRange$1 -> org.apache.commons.lang3.CharRange$1:
org.apache.commons.lang3.CharRange$CharacterIterator -> org.apache.commons.lang3.CharRange$CharacterIterator:
    char current -> current
    org.apache.commons.lang3.CharRange range -> range
    boolean hasNext -> hasNext
    void prepareNext() -> prepareNext
    boolean hasNext() -> hasNext
    java.lang.Character next() -> next
    void remove() -> remove
    java.lang.Object next() -> next
org.apache.commons.lang3.CharSequenceUtils -> org.apache.commons.lang3.CharSequenceUtils:
    java.lang.CharSequence subSequence(java.lang.CharSequence,int) -> subSequence
    int indexOf(java.lang.CharSequence,int,int) -> indexOf
    int indexOf(java.lang.CharSequence,java.lang.CharSequence,int) -> indexOf
    int lastIndexOf(java.lang.CharSequence,int,int) -> lastIndexOf
    int lastIndexOf(java.lang.CharSequence,java.lang.CharSequence,int) -> lastIndexOf
    char[] toCharArray(java.lang.CharSequence) -> toCharArray
    boolean regionMatches(java.lang.CharSequence,boolean,int,java.lang.CharSequence,int,int) -> regionMatches
org.apache.commons.lang3.CharSet -> org.apache.commons.lang3.CharSet:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.lang3.CharSet EMPTY -> EMPTY
    org.apache.commons.lang3.CharSet ASCII_ALPHA -> ASCII_ALPHA
    org.apache.commons.lang3.CharSet ASCII_ALPHA_LOWER -> ASCII_ALPHA_LOWER
    org.apache.commons.lang3.CharSet ASCII_ALPHA_UPPER -> ASCII_ALPHA_UPPER
    org.apache.commons.lang3.CharSet ASCII_NUMERIC -> ASCII_NUMERIC
    java.util.Map COMMON -> COMMON
    java.util.Set set -> set
    org.apache.commons.lang3.CharSet getInstance(java.lang.String[]) -> getInstance
    void add(java.lang.String) -> add
    org.apache.commons.lang3.CharRange[] getCharRanges() -> getCharRanges
    boolean contains(char) -> contains
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
org.apache.commons.lang3.CharSetUtils -> org.apache.commons.lang3.CharSetUtils:
    java.lang.String squeeze(java.lang.String,java.lang.String[]) -> squeeze
    boolean containsAny(java.lang.String,java.lang.String[]) -> containsAny
    int count(java.lang.String,java.lang.String[]) -> count
    java.lang.String keep(java.lang.String,java.lang.String[]) -> keep
    java.lang.String delete(java.lang.String,java.lang.String[]) -> delete
    java.lang.String modify(java.lang.String,java.lang.String[],boolean) -> modify
    boolean deepEmpty(java.lang.String[]) -> deepEmpty
org.apache.commons.lang3.CharUtils -> org.apache.commons.lang3.CharUtils:
    java.lang.String[] CHAR_STRING_ARRAY -> CHAR_STRING_ARRAY
    char LF -> LF
    char CR -> CR
    java.lang.Character toCharacterObject(char) -> toCharacterObject
    java.lang.Character toCharacterObject(java.lang.String) -> toCharacterObject
    char toChar(java.lang.Character) -> toChar
    char toChar(java.lang.Character,char) -> toChar
    char toChar(java.lang.String) -> toChar
    char toChar(java.lang.String,char) -> toChar
    int toIntValue(char) -> toIntValue
    int toIntValue(char,int) -> toIntValue
    int toIntValue(java.lang.Character) -> toIntValue
    int toIntValue(java.lang.Character,int) -> toIntValue
    java.lang.String toString(char) -> toString
    java.lang.String toString(java.lang.Character) -> toString
    java.lang.String unicodeEscaped(char) -> unicodeEscaped
    java.lang.String unicodeEscaped(java.lang.Character) -> unicodeEscaped
    boolean isAscii(char) -> isAscii
    boolean isAsciiPrintable(char) -> isAsciiPrintable
    boolean isAsciiControl(char) -> isAsciiControl
    boolean isAsciiAlpha(char) -> isAsciiAlpha
    boolean isAsciiAlphaUpper(char) -> isAsciiAlphaUpper
    boolean isAsciiAlphaLower(char) -> isAsciiAlphaLower
    boolean isAsciiNumeric(char) -> isAsciiNumeric
    boolean isAsciiAlphanumeric(char) -> isAsciiAlphanumeric
org.apache.commons.lang3.ClassPathUtils -> org.apache.commons.lang3.ClassPathUtils:
    java.lang.String toFullyQualifiedName(java.lang.Class,java.lang.String) -> toFullyQualifiedName
    java.lang.String toFullyQualifiedName(java.lang.Package,java.lang.String) -> toFullyQualifiedName
    java.lang.String toFullyQualifiedPath(java.lang.Class,java.lang.String) -> toFullyQualifiedPath
    java.lang.String toFullyQualifiedPath(java.lang.Package,java.lang.String) -> toFullyQualifiedPath
org.apache.commons.lang3.ClassUtils -> org.apache.commons.lang3.ClassUtils:
    char PACKAGE_SEPARATOR_CHAR -> PACKAGE_SEPARATOR_CHAR
    java.lang.String PACKAGE_SEPARATOR -> PACKAGE_SEPARATOR
    char INNER_CLASS_SEPARATOR_CHAR -> INNER_CLASS_SEPARATOR_CHAR
    java.lang.String INNER_CLASS_SEPARATOR -> INNER_CLASS_SEPARATOR
    java.util.Map primitiveWrapperMap -> primitiveWrapperMap
    java.util.Map wrapperPrimitiveMap -> wrapperPrimitiveMap
    java.util.Map abbreviationMap -> abbreviationMap
    java.util.Map reverseAbbreviationMap -> reverseAbbreviationMap
    java.lang.String getShortClassName(java.lang.Object,java.lang.String) -> getShortClassName
    java.lang.String getShortClassName(java.lang.Class) -> getShortClassName
    java.lang.String getShortClassName(java.lang.String) -> getShortClassName
    java.lang.String getSimpleName(java.lang.Class) -> getSimpleName
    java.lang.String getSimpleName(java.lang.Object,java.lang.String) -> getSimpleName
    java.lang.String getPackageName(java.lang.Object,java.lang.String) -> getPackageName
    java.lang.String getPackageName(java.lang.Class) -> getPackageName
    java.lang.String getPackageName(java.lang.String) -> getPackageName
    java.util.List getAllSuperclasses(java.lang.Class) -> getAllSuperclasses
    java.util.List getAllInterfaces(java.lang.Class) -> getAllInterfaces
    void getAllInterfaces(java.lang.Class,java.util.HashSet) -> getAllInterfaces
    java.util.List convertClassNamesToClasses(java.util.List) -> convertClassNamesToClasses
    java.util.List convertClassesToClassNames(java.util.List) -> convertClassesToClassNames
    boolean isAssignable(java.lang.Class[],java.lang.Class[]) -> isAssignable
    boolean isAssignable(java.lang.Class[],java.lang.Class[],boolean) -> isAssignable
    boolean isPrimitiveOrWrapper(java.lang.Class) -> isPrimitiveOrWrapper
    boolean isPrimitiveWrapper(java.lang.Class) -> isPrimitiveWrapper
    boolean isAssignable(java.lang.Class,java.lang.Class) -> isAssignable
    boolean isAssignable(java.lang.Class,java.lang.Class,boolean) -> isAssignable
    java.lang.Class primitiveToWrapper(java.lang.Class) -> primitiveToWrapper
    java.lang.Class[] primitivesToWrappers(java.lang.Class[]) -> primitivesToWrappers
    java.lang.Class wrapperToPrimitive(java.lang.Class) -> wrapperToPrimitive
    java.lang.Class[] wrappersToPrimitives(java.lang.Class[]) -> wrappersToPrimitives
    boolean isInnerClass(java.lang.Class) -> isInnerClass
    java.lang.Class getClass(java.lang.ClassLoader,java.lang.String,boolean) -> getClass
    java.lang.Class getClass(java.lang.ClassLoader,java.lang.String) -> getClass
    java.lang.Class getClass(java.lang.String) -> getClass
    java.lang.Class getClass(java.lang.String,boolean) -> getClass
    java.lang.reflect.Method getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[]) -> getPublicMethod
    java.lang.String toCanonicalName(java.lang.String) -> toCanonicalName
    java.lang.Class[] toClass(java.lang.Object[]) -> toClass
    java.lang.String getShortCanonicalName(java.lang.Object,java.lang.String) -> getShortCanonicalName
    java.lang.String getShortCanonicalName(java.lang.Class) -> getShortCanonicalName
    java.lang.String getShortCanonicalName(java.lang.String) -> getShortCanonicalName
    java.lang.String getPackageCanonicalName(java.lang.Object,java.lang.String) -> getPackageCanonicalName
    java.lang.String getPackageCanonicalName(java.lang.Class) -> getPackageCanonicalName
    java.lang.String getPackageCanonicalName(java.lang.String) -> getPackageCanonicalName
    java.lang.String getCanonicalName(java.lang.String) -> getCanonicalName
    java.lang.Iterable hierarchy(java.lang.Class) -> hierarchy
    java.lang.Iterable hierarchy(java.lang.Class,org.apache.commons.lang3.ClassUtils$Interfaces) -> hierarchy
org.apache.commons.lang3.ClassUtils$1 -> org.apache.commons.lang3.ClassUtils$1:
    java.lang.Class val$type -> val$type
    java.util.Iterator iterator() -> iterator
org.apache.commons.lang3.ClassUtils$1$1 -> org.apache.commons.lang3.ClassUtils$1$1:
    org.apache.commons.lang3.mutable.MutableObject val$next -> val$next
    org.apache.commons.lang3.ClassUtils$1 this$0 -> this$0
    boolean hasNext() -> hasNext
    java.lang.Class next() -> next
    void remove() -> remove
    java.lang.Object next() -> next
org.apache.commons.lang3.ClassUtils$2 -> org.apache.commons.lang3.ClassUtils$2:
    java.lang.Iterable val$classes -> val$classes
    java.util.Iterator iterator() -> iterator
org.apache.commons.lang3.ClassUtils$2$1 -> org.apache.commons.lang3.ClassUtils$2$1:
    java.util.Iterator interfaces -> interfaces
    java.util.Iterator val$wrapped -> val$wrapped
    java.util.Set val$seenInterfaces -> val$seenInterfaces
    org.apache.commons.lang3.ClassUtils$2 this$0 -> this$0
    boolean hasNext() -> hasNext
    java.lang.Class next() -> next
    void walkInterfaces(java.util.Set,java.lang.Class) -> walkInterfaces
    void remove() -> remove
    java.lang.Object next() -> next
org.apache.commons.lang3.ClassUtils$Interfaces -> org.apache.commons.lang3.ClassUtils$Interfaces:
    org.apache.commons.lang3.ClassUtils$Interfaces INCLUDE -> INCLUDE
    org.apache.commons.lang3.ClassUtils$Interfaces EXCLUDE -> EXCLUDE
    org.apache.commons.lang3.ClassUtils$Interfaces[] $VALUES -> $VALUES
    org.apache.commons.lang3.ClassUtils$Interfaces[] values() -> values
    org.apache.commons.lang3.ClassUtils$Interfaces valueOf(java.lang.String) -> valueOf
org.apache.commons.lang3.Conversion -> org.apache.commons.lang3.Conversion:
    boolean $assertionsDisabled -> $assertionsDisabled
    int hexDigitToInt(char) -> hexDigitToInt
    int hexDigitMsb0ToInt(char) -> hexDigitMsb0ToInt
    boolean[] hexDigitToBinary(char) -> hexDigitToBinary
    boolean[] hexDigitMsb0ToBinary(char) -> hexDigitMsb0ToBinary
    char binaryToHexDigit(boolean[]) -> binaryToHexDigit
    char binaryToHexDigit(boolean[],int) -> binaryToHexDigit
    char binaryToHexDigitMsb0_4bits(boolean[]) -> binaryToHexDigitMsb0_4bits
    char binaryToHexDigitMsb0_4bits(boolean[],int) -> binaryToHexDigitMsb0_4bits
    char binaryBeMsb0ToHexDigit(boolean[]) -> binaryBeMsb0ToHexDigit
    char binaryBeMsb0ToHexDigit(boolean[],int) -> binaryBeMsb0ToHexDigit
    char intToHexDigit(int) -> intToHexDigit
    char intToHexDigitMsb0(int) -> intToHexDigitMsb0
    long intArrayToLong(int[],int,long,int,int) -> intArrayToLong
    long shortArrayToLong(short[],int,long,int,int) -> shortArrayToLong
    int shortArrayToInt(short[],int,int,int,int) -> shortArrayToInt
    long byteArrayToLong(byte[],int,long,int,int) -> byteArrayToLong
    int byteArrayToInt(byte[],int,int,int,int) -> byteArrayToInt
    short byteArrayToShort(byte[],int,short,int,int) -> byteArrayToShort
    long hexToLong(java.lang.String,int,long,int,int) -> hexToLong
    int hexToInt(java.lang.String,int,int,int,int) -> hexToInt
    short hexToShort(java.lang.String,int,short,int,int) -> hexToShort
    byte hexToByte(java.lang.String,int,byte,int,int) -> hexToByte
    long binaryToLong(boolean[],int,long,int,int) -> binaryToLong
    int binaryToInt(boolean[],int,int,int,int) -> binaryToInt
    short binaryToShort(boolean[],int,short,int,int) -> binaryToShort
    byte binaryToByte(boolean[],int,byte,int,int) -> binaryToByte
    int[] longToIntArray(long,int,int[],int,int) -> longToIntArray
    short[] longToShortArray(long,int,short[],int,int) -> longToShortArray
    short[] intToShortArray(int,int,short[],int,int) -> intToShortArray
    byte[] longToByteArray(long,int,byte[],int,int) -> longToByteArray
    byte[] intToByteArray(int,int,byte[],int,int) -> intToByteArray
    byte[] shortToByteArray(short,int,byte[],int,int) -> shortToByteArray
    java.lang.String longToHex(long,int,java.lang.String,int,int) -> longToHex
    java.lang.String intToHex(int,int,java.lang.String,int,int) -> intToHex
    java.lang.String shortToHex(short,int,java.lang.String,int,int) -> shortToHex
    java.lang.String byteToHex(byte,int,java.lang.String,int,int) -> byteToHex
    boolean[] longToBinary(long,int,boolean[],int,int) -> longToBinary
    boolean[] intToBinary(int,int,boolean[],int,int) -> intToBinary
    boolean[] shortToBinary(short,int,boolean[],int,int) -> shortToBinary
    boolean[] byteToBinary(byte,int,boolean[],int,int) -> byteToBinary
    byte[] uuidToByteArray(java.util.UUID,byte[],int,int) -> uuidToByteArray
    java.util.UUID byteArrayToUuid(byte[],int) -> byteArrayToUuid
org.apache.commons.lang3.EnumUtils -> org.apache.commons.lang3.EnumUtils:
    java.lang.String NULL_ELEMENTS_NOT_PERMITTED -> NULL_ELEMENTS_NOT_PERMITTED
    java.lang.String CANNOT_STORE_S_S_VALUES_IN_S_BITS -> CANNOT_STORE_S_S_VALUES_IN_S_BITS
    java.lang.String S_DOES_NOT_SEEM_TO_BE_AN_ENUM_TYPE -> S_DOES_NOT_SEEM_TO_BE_AN_ENUM_TYPE
    java.lang.String ENUM_CLASS_MUST_BE_DEFINED -> ENUM_CLASS_MUST_BE_DEFINED
    java.util.Map getEnumMap(java.lang.Class) -> getEnumMap
    java.util.List getEnumList(java.lang.Class) -> getEnumList
    boolean isValidEnum(java.lang.Class,java.lang.String) -> isValidEnum
    java.lang.Enum getEnum(java.lang.Class,java.lang.String) -> getEnum
    long generateBitVector(java.lang.Class,java.lang.Iterable) -> generateBitVector
    long[] generateBitVectors(java.lang.Class,java.lang.Iterable) -> generateBitVectors
    long generateBitVector(java.lang.Class,java.lang.Enum[]) -> generateBitVector
    long[] generateBitVectors(java.lang.Class,java.lang.Enum[]) -> generateBitVectors
    java.util.EnumSet processBitVector(java.lang.Class,long) -> processBitVector
    java.util.EnumSet processBitVectors(java.lang.Class,long[]) -> processBitVectors
    java.lang.Class checkBitVectorable(java.lang.Class) -> checkBitVectorable
    java.lang.Class asEnum(java.lang.Class) -> asEnum
org.apache.commons.lang3.JavaVersion -> org.apache.commons.lang3.JavaVersion:
    org.apache.commons.lang3.JavaVersion JAVA_0_9 -> JAVA_0_9
    org.apache.commons.lang3.JavaVersion JAVA_1_1 -> JAVA_1_1
    org.apache.commons.lang3.JavaVersion JAVA_1_2 -> JAVA_1_2
    org.apache.commons.lang3.JavaVersion JAVA_1_3 -> JAVA_1_3
    org.apache.commons.lang3.JavaVersion JAVA_1_4 -> JAVA_1_4
    org.apache.commons.lang3.JavaVersion JAVA_1_5 -> JAVA_1_5
    org.apache.commons.lang3.JavaVersion JAVA_1_6 -> JAVA_1_6
    org.apache.commons.lang3.JavaVersion JAVA_1_7 -> JAVA_1_7
    org.apache.commons.lang3.JavaVersion JAVA_1_8 -> JAVA_1_8
    float value -> value
    java.lang.String name -> name
    org.apache.commons.lang3.JavaVersion[] $VALUES -> $VALUES
    org.apache.commons.lang3.JavaVersion[] values() -> values
    org.apache.commons.lang3.JavaVersion valueOf(java.lang.String) -> valueOf
    boolean atLeast(org.apache.commons.lang3.JavaVersion) -> atLeast
    org.apache.commons.lang3.JavaVersion getJavaVersion(java.lang.String) -> getJavaVersion
    org.apache.commons.lang3.JavaVersion get(java.lang.String) -> get
    java.lang.String toString() -> toString
org.apache.commons.lang3.LocaleUtils -> org.apache.commons.lang3.LocaleUtils:
    java.util.concurrent.ConcurrentMap cLanguagesByCountry -> cLanguagesByCountry
    java.util.concurrent.ConcurrentMap cCountriesByLanguage -> cCountriesByLanguage
    java.util.Locale toLocale(java.lang.String) -> toLocale
    java.util.List localeLookupList(java.util.Locale) -> localeLookupList
    java.util.List localeLookupList(java.util.Locale,java.util.Locale) -> localeLookupList
    java.util.List availableLocaleList() -> availableLocaleList
    java.util.Set availableLocaleSet() -> availableLocaleSet
    boolean isAvailableLocale(java.util.Locale) -> isAvailableLocale
    java.util.List languagesByCountry(java.lang.String) -> languagesByCountry
    java.util.List countriesByLanguage(java.lang.String) -> countriesByLanguage
org.apache.commons.lang3.LocaleUtils$SyncAvoid -> org.apache.commons.lang3.LocaleUtils$SyncAvoid:
    java.util.List AVAILABLE_LOCALE_LIST -> AVAILABLE_LOCALE_LIST
    java.util.Set AVAILABLE_LOCALE_SET -> AVAILABLE_LOCALE_SET
    java.util.List access$000() -> access$000
    java.util.Set access$100() -> access$100
org.apache.commons.lang3.NotImplementedException -> org.apache.commons.lang3.NotImplementedException:
    long serialVersionUID -> serialVersionUID
    java.lang.String code -> code
    java.lang.String getCode() -> getCode
org.apache.commons.lang3.ObjectUtils -> org.apache.commons.lang3.ObjectUtils:
    org.apache.commons.lang3.ObjectUtils$Null NULL -> NULL
    java.lang.Object defaultIfNull(java.lang.Object,java.lang.Object) -> defaultIfNull
    java.lang.Object firstNonNull(java.lang.Object[]) -> firstNonNull
    boolean equals(java.lang.Object,java.lang.Object) -> equals
    boolean notEqual(java.lang.Object,java.lang.Object) -> notEqual
    int hashCode(java.lang.Object) -> hashCode
    java.lang.String toString() -> toString
    int hashCodeMulti(java.lang.Object[]) -> hashCodeMulti
    java.lang.String identityToString(java.lang.Object) -> identityToString
    void identityToString(java.lang.Appendable,java.lang.Object) -> identityToString
    void identityToString(org.apache.commons.lang3.text.StrBuilder,java.lang.Object) -> identityToString
    void identityToString(java.lang.StringBuffer,java.lang.Object) -> identityToString
    void identityToString(java.lang.StringBuilder,java.lang.Object) -> identityToString
    java.lang.String toString(java.lang.Object) -> toString
    java.lang.String toString(java.lang.Object,java.lang.String) -> toString
    java.lang.Comparable min(java.lang.Comparable[]) -> min
    java.lang.Comparable max(java.lang.Comparable[]) -> max
    int compare(java.lang.Comparable,java.lang.Comparable) -> compare
    int compare(java.lang.Comparable,java.lang.Comparable,boolean) -> compare
    java.lang.Comparable median(java.lang.Comparable[]) -> median
    java.lang.Object median(java.util.Comparator,java.lang.Object[]) -> median
    java.lang.Object mode(java.lang.Object[]) -> mode
    java.lang.Object clone(java.lang.Object) -> clone
    java.lang.Object cloneIfPossible(java.lang.Object) -> cloneIfPossible
    boolean CONST(boolean) -> CONST
    byte CONST(byte) -> CONST
    byte CONST_BYTE(int) -> CONST_BYTE
    char CONST(char) -> CONST
    short CONST(short) -> CONST
    short CONST_SHORT(int) -> CONST_SHORT
    int CONST(int) -> CONST
    long CONST(long) -> CONST
    float CONST(float) -> CONST
    double CONST(double) -> CONST
    java.lang.Object CONST(java.lang.Object) -> CONST
org.apache.commons.lang3.ObjectUtils$Null -> org.apache.commons.lang3.ObjectUtils$Null:
    long serialVersionUID -> serialVersionUID
    java.lang.Object readResolve() -> readResolve
org.apache.commons.lang3.RandomStringUtils -> org.apache.commons.lang3.RandomStringUtils:
    java.util.Random RANDOM -> RANDOM
    java.lang.String random(int) -> random
    java.lang.String randomAscii(int) -> randomAscii
    java.lang.String randomAlphabetic(int) -> randomAlphabetic
    java.lang.String randomAlphanumeric(int) -> randomAlphanumeric
    java.lang.String randomNumeric(int) -> randomNumeric
    java.lang.String random(int,boolean,boolean) -> random
    java.lang.String random(int,int,int,boolean,boolean) -> random
    java.lang.String random(int,int,int,boolean,boolean,char[]) -> random
    java.lang.String random(int,int,int,boolean,boolean,char[],java.util.Random) -> random
    java.lang.String random(int,java.lang.String) -> random
    java.lang.String random(int,char[]) -> random
org.apache.commons.lang3.RandomUtils -> org.apache.commons.lang3.RandomUtils:
    java.util.Random RANDOM -> RANDOM
    byte[] nextBytes(int) -> nextBytes
    int nextInt(int,int) -> nextInt
    long nextLong(long,long) -> nextLong
    double nextDouble(double,double) -> nextDouble
    float nextFloat(float,float) -> nextFloat
org.apache.commons.lang3.Range -> org.apache.commons.lang3.Range:
    long serialVersionUID -> serialVersionUID
    java.util.Comparator comparator -> comparator
    java.lang.Object minimum -> minimum
    java.lang.Object maximum -> maximum
    int hashCode -> hashCode
    java.lang.String toString -> toString
    org.apache.commons.lang3.Range is(java.lang.Comparable) -> is
    org.apache.commons.lang3.Range is(java.lang.Object,java.util.Comparator) -> is
    org.apache.commons.lang3.Range between(java.lang.Comparable,java.lang.Comparable) -> between
    org.apache.commons.lang3.Range between(java.lang.Object,java.lang.Object,java.util.Comparator) -> between
    java.lang.Object getMinimum() -> getMinimum
    java.lang.Object getMaximum() -> getMaximum
    java.util.Comparator getComparator() -> getComparator
    boolean isNaturalOrdering() -> isNaturalOrdering
    boolean contains(java.lang.Object) -> contains
    boolean isAfter(java.lang.Object) -> isAfter
    boolean isStartedBy(java.lang.Object) -> isStartedBy
    boolean isEndedBy(java.lang.Object) -> isEndedBy
    boolean isBefore(java.lang.Object) -> isBefore
    int elementCompareTo(java.lang.Object) -> elementCompareTo
    boolean containsRange(org.apache.commons.lang3.Range) -> containsRange
    boolean isAfterRange(org.apache.commons.lang3.Range) -> isAfterRange
    boolean isOverlappedBy(org.apache.commons.lang3.Range) -> isOverlappedBy
    boolean isBeforeRange(org.apache.commons.lang3.Range) -> isBeforeRange
    org.apache.commons.lang3.Range intersectionWith(org.apache.commons.lang3.Range) -> intersectionWith
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.String toString(java.lang.String) -> toString
org.apache.commons.lang3.Range$ComparableComparator -> org.apache.commons.lang3.Range$ComparableComparator:
    org.apache.commons.lang3.Range$ComparableComparator INSTANCE -> INSTANCE
    org.apache.commons.lang3.Range$ComparableComparator[] $VALUES -> $VALUES
    org.apache.commons.lang3.Range$ComparableComparator[] values() -> values
    org.apache.commons.lang3.Range$ComparableComparator valueOf(java.lang.String) -> valueOf
    int compare(java.lang.Object,java.lang.Object) -> compare
org.apache.commons.lang3.SerializationException -> org.apache.commons.lang3.SerializationException:
    long serialVersionUID -> serialVersionUID
org.apache.commons.lang3.SerializationUtils -> org.apache.commons.lang3.SerializationUtils:
    java.io.Serializable clone(java.io.Serializable) -> clone
    java.io.Serializable roundtrip(java.io.Serializable) -> roundtrip
    void serialize(java.io.Serializable,java.io.OutputStream) -> serialize
    byte[] serialize(java.io.Serializable) -> serialize
    java.lang.Object deserialize(java.io.InputStream) -> deserialize
    java.lang.Object deserialize(byte[]) -> deserialize
org.apache.commons.lang3.SerializationUtils$ClassLoaderAwareObjectInputStream -> org.apache.commons.lang3.SerializationUtils$ClassLoaderAwareObjectInputStream:
    java.util.Map primitiveTypes -> primitiveTypes
    java.lang.ClassLoader classLoader -> classLoader
    java.lang.Class resolveClass(java.io.ObjectStreamClass) -> resolveClass
org.apache.commons.lang3.StringEscapeUtils -> org.apache.commons.lang3.StringEscapeUtils:
    org.apache.commons.lang3.text.translate.CharSequenceTranslator ESCAPE_JAVA -> ESCAPE_JAVA
    org.apache.commons.lang3.text.translate.CharSequenceTranslator ESCAPE_ECMASCRIPT -> ESCAPE_ECMASCRIPT
    org.apache.commons.lang3.text.translate.CharSequenceTranslator ESCAPE_JSON -> ESCAPE_JSON
    org.apache.commons.lang3.text.translate.CharSequenceTranslator ESCAPE_XML -> ESCAPE_XML
    org.apache.commons.lang3.text.translate.CharSequenceTranslator ESCAPE_XML10 -> ESCAPE_XML10
    org.apache.commons.lang3.text.translate.CharSequenceTranslator ESCAPE_XML11 -> ESCAPE_XML11
    org.apache.commons.lang3.text.translate.CharSequenceTranslator ESCAPE_HTML3 -> ESCAPE_HTML3
    org.apache.commons.lang3.text.translate.CharSequenceTranslator ESCAPE_HTML4 -> ESCAPE_HTML4
    org.apache.commons.lang3.text.translate.CharSequenceTranslator ESCAPE_CSV -> ESCAPE_CSV
    org.apache.commons.lang3.text.translate.CharSequenceTranslator UNESCAPE_JAVA -> UNESCAPE_JAVA
    org.apache.commons.lang3.text.translate.CharSequenceTranslator UNESCAPE_ECMASCRIPT -> UNESCAPE_ECMASCRIPT
    org.apache.commons.lang3.text.translate.CharSequenceTranslator UNESCAPE_JSON -> UNESCAPE_JSON
    org.apache.commons.lang3.text.translate.CharSequenceTranslator UNESCAPE_HTML3 -> UNESCAPE_HTML3
    org.apache.commons.lang3.text.translate.CharSequenceTranslator UNESCAPE_HTML4 -> UNESCAPE_HTML4
    org.apache.commons.lang3.text.translate.CharSequenceTranslator UNESCAPE_XML -> UNESCAPE_XML
    org.apache.commons.lang3.text.translate.CharSequenceTranslator UNESCAPE_CSV -> UNESCAPE_CSV
    java.lang.String escapeJava(java.lang.String) -> escapeJava
    java.lang.String escapeEcmaScript(java.lang.String) -> escapeEcmaScript
    java.lang.String escapeJson(java.lang.String) -> escapeJson
    java.lang.String unescapeJava(java.lang.String) -> unescapeJava
    java.lang.String unescapeEcmaScript(java.lang.String) -> unescapeEcmaScript
    java.lang.String unescapeJson(java.lang.String) -> unescapeJson
    java.lang.String escapeHtml4(java.lang.String) -> escapeHtml4
    java.lang.String escapeHtml3(java.lang.String) -> escapeHtml3
    java.lang.String unescapeHtml4(java.lang.String) -> unescapeHtml4
    java.lang.String unescapeHtml3(java.lang.String) -> unescapeHtml3
    java.lang.String escapeXml(java.lang.String) -> escapeXml
    java.lang.String escapeXml10(java.lang.String) -> escapeXml10
    java.lang.String escapeXml11(java.lang.String) -> escapeXml11
    java.lang.String unescapeXml(java.lang.String) -> unescapeXml
    java.lang.String escapeCsv(java.lang.String) -> escapeCsv
    java.lang.String unescapeCsv(java.lang.String) -> unescapeCsv
org.apache.commons.lang3.StringEscapeUtils$CsvEscaper -> org.apache.commons.lang3.StringEscapeUtils$CsvEscaper:
    char CSV_DELIMITER -> CSV_DELIMITER
    char CSV_QUOTE -> CSV_QUOTE
    java.lang.String CSV_QUOTE_STR -> CSV_QUOTE_STR
    char[] CSV_SEARCH_CHARS -> CSV_SEARCH_CHARS
    int translate(java.lang.CharSequence,int,java.io.Writer) -> translate
org.apache.commons.lang3.StringEscapeUtils$CsvUnescaper -> org.apache.commons.lang3.StringEscapeUtils$CsvUnescaper:
    char CSV_DELIMITER -> CSV_DELIMITER
    char CSV_QUOTE -> CSV_QUOTE
    java.lang.String CSV_QUOTE_STR -> CSV_QUOTE_STR
    char[] CSV_SEARCH_CHARS -> CSV_SEARCH_CHARS
    int translate(java.lang.CharSequence,int,java.io.Writer) -> translate
org.apache.commons.lang3.StringUtils -> org.apache.commons.lang3.StringUtils:
    java.lang.String SPACE -> SPACE
    java.lang.String EMPTY -> EMPTY
    java.lang.String LF -> LF
    java.lang.String CR -> CR
    int INDEX_NOT_FOUND -> INDEX_NOT_FOUND
    int PAD_LIMIT -> PAD_LIMIT
    java.util.regex.Pattern WHITESPACE_PATTERN -> WHITESPACE_PATTERN
    boolean isEmpty(java.lang.CharSequence) -> isEmpty
    boolean isNotEmpty(java.lang.CharSequence) -> isNotEmpty
    boolean isAnyEmpty(java.lang.CharSequence[]) -> isAnyEmpty
    boolean isNoneEmpty(java.lang.CharSequence[]) -> isNoneEmpty
    boolean isBlank(java.lang.CharSequence) -> isBlank
    boolean isNotBlank(java.lang.CharSequence) -> isNotBlank
    boolean isAnyBlank(java.lang.CharSequence[]) -> isAnyBlank
    boolean isNoneBlank(java.lang.CharSequence[]) -> isNoneBlank
    java.lang.String trim(java.lang.String) -> trim
    java.lang.String trimToNull(java.lang.String) -> trimToNull
    java.lang.String trimToEmpty(java.lang.String) -> trimToEmpty
    java.lang.String strip(java.lang.String) -> strip
    java.lang.String stripToNull(java.lang.String) -> stripToNull
    java.lang.String stripToEmpty(java.lang.String) -> stripToEmpty
    java.lang.String strip(java.lang.String,java.lang.String) -> strip
    java.lang.String stripStart(java.lang.String,java.lang.String) -> stripStart
    java.lang.String stripEnd(java.lang.String,java.lang.String) -> stripEnd
    java.lang.String[] stripAll(java.lang.String[]) -> stripAll
    java.lang.String[] stripAll(java.lang.String[],java.lang.String) -> stripAll
    java.lang.String stripAccents(java.lang.String) -> stripAccents
    boolean equals(java.lang.CharSequence,java.lang.CharSequence) -> equals
    boolean equalsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence) -> equalsIgnoreCase
    int indexOf(java.lang.CharSequence,int) -> indexOf
    int indexOf(java.lang.CharSequence,int,int) -> indexOf
    int indexOf(java.lang.CharSequence,java.lang.CharSequence) -> indexOf
    int indexOf(java.lang.CharSequence,java.lang.CharSequence,int) -> indexOf
    int ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int) -> ordinalIndexOf
    int ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int,boolean) -> ordinalIndexOf
    int indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence) -> indexOfIgnoreCase
    int indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int) -> indexOfIgnoreCase
    int lastIndexOf(java.lang.CharSequence,int) -> lastIndexOf
    int lastIndexOf(java.lang.CharSequence,int,int) -> lastIndexOf
    int lastIndexOf(java.lang.CharSequence,java.lang.CharSequence) -> lastIndexOf
    int lastOrdinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int) -> lastOrdinalIndexOf
    int lastIndexOf(java.lang.CharSequence,java.lang.CharSequence,int) -> lastIndexOf
    int lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence) -> lastIndexOfIgnoreCase
    int lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int) -> lastIndexOfIgnoreCase
    boolean contains(java.lang.CharSequence,int) -> contains
    boolean contains(java.lang.CharSequence,java.lang.CharSequence) -> contains
    boolean containsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence) -> containsIgnoreCase
    boolean containsWhitespace(java.lang.CharSequence) -> containsWhitespace
    int indexOfAny(java.lang.CharSequence,char[]) -> indexOfAny
    int indexOfAny(java.lang.CharSequence,java.lang.String) -> indexOfAny
    boolean containsAny(java.lang.CharSequence,char[]) -> containsAny
    boolean containsAny(java.lang.CharSequence,java.lang.CharSequence) -> containsAny
    int indexOfAnyBut(java.lang.CharSequence,char[]) -> indexOfAnyBut
    int indexOfAnyBut(java.lang.CharSequence,java.lang.CharSequence) -> indexOfAnyBut
    boolean containsOnly(java.lang.CharSequence,char[]) -> containsOnly
    boolean containsOnly(java.lang.CharSequence,java.lang.String) -> containsOnly
    boolean containsNone(java.lang.CharSequence,char[]) -> containsNone
    boolean containsNone(java.lang.CharSequence,java.lang.String) -> containsNone
    int indexOfAny(java.lang.CharSequence,java.lang.CharSequence[]) -> indexOfAny
    int lastIndexOfAny(java.lang.CharSequence,java.lang.CharSequence[]) -> lastIndexOfAny
    java.lang.String substring(java.lang.String,int) -> substring
    java.lang.String substring(java.lang.String,int,int) -> substring
    java.lang.String left(java.lang.String,int) -> left
    java.lang.String right(java.lang.String,int) -> right
    java.lang.String mid(java.lang.String,int,int) -> mid
    java.lang.String substringBefore(java.lang.String,java.lang.String) -> substringBefore
    java.lang.String substringAfter(java.lang.String,java.lang.String) -> substringAfter
    java.lang.String substringBeforeLast(java.lang.String,java.lang.String) -> substringBeforeLast
    java.lang.String substringAfterLast(java.lang.String,java.lang.String) -> substringAfterLast
    java.lang.String substringBetween(java.lang.String,java.lang.String) -> substringBetween
    java.lang.String substringBetween(java.lang.String,java.lang.String,java.lang.String) -> substringBetween
    java.lang.String[] substringsBetween(java.lang.String,java.lang.String,java.lang.String) -> substringsBetween
    java.lang.String[] split(java.lang.String) -> split
    java.lang.String[] split(java.lang.String,char) -> split
    java.lang.String[] split(java.lang.String,java.lang.String) -> split
    java.lang.String[] split(java.lang.String,java.lang.String,int) -> split
    java.lang.String[] splitByWholeSeparator(java.lang.String,java.lang.String) -> splitByWholeSeparator
    java.lang.String[] splitByWholeSeparator(java.lang.String,java.lang.String,int) -> splitByWholeSeparator
    java.lang.String[] splitByWholeSeparatorPreserveAllTokens(java.lang.String,java.lang.String) -> splitByWholeSeparatorPreserveAllTokens
    java.lang.String[] splitByWholeSeparatorPreserveAllTokens(java.lang.String,java.lang.String,int) -> splitByWholeSeparatorPreserveAllTokens
    java.lang.String[] splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean) -> splitByWholeSeparatorWorker
    java.lang.String[] splitPreserveAllTokens(java.lang.String) -> splitPreserveAllTokens
    java.lang.String[] splitPreserveAllTokens(java.lang.String,char) -> splitPreserveAllTokens
    java.lang.String[] splitWorker(java.lang.String,char,boolean) -> splitWorker
    java.lang.String[] splitPreserveAllTokens(java.lang.String,java.lang.String) -> splitPreserveAllTokens
    java.lang.String[] splitPreserveAllTokens(java.lang.String,java.lang.String,int) -> splitPreserveAllTokens
    java.lang.String[] splitWorker(java.lang.String,java.lang.String,int,boolean) -> splitWorker
    java.lang.String[] splitByCharacterType(java.lang.String) -> splitByCharacterType
    java.lang.String[] splitByCharacterTypeCamelCase(java.lang.String) -> splitByCharacterTypeCamelCase
    java.lang.String[] splitByCharacterType(java.lang.String,boolean) -> splitByCharacterType
    java.lang.String join(java.lang.Object[]) -> join
    java.lang.String join(java.lang.Object[],char) -> join
    java.lang.String join(long[],char) -> join
    java.lang.String join(int[],char) -> join
    java.lang.String join(short[],char) -> join
    java.lang.String join(byte[],char) -> join
    java.lang.String join(char[],char) -> join
    java.lang.String join(float[],char) -> join
    java.lang.String join(double[],char) -> join
    java.lang.String join(java.lang.Object[],char,int,int) -> join
    java.lang.String join(long[],char,int,int) -> join
    java.lang.String join(int[],char,int,int) -> join
    java.lang.String join(byte[],char,int,int) -> join
    java.lang.String join(short[],char,int,int) -> join
    java.lang.String join(char[],char,int,int) -> join
    java.lang.String join(double[],char,int,int) -> join
    java.lang.String join(float[],char,int,int) -> join
    java.lang.String join(java.lang.Object[],java.lang.String) -> join
    java.lang.String join(java.lang.Object[],java.lang.String,int,int) -> join
    java.lang.String join(java.util.Iterator,char) -> join
    java.lang.String join(java.util.Iterator,java.lang.String) -> join
    java.lang.String join(java.lang.Iterable,char) -> join
    java.lang.String join(java.lang.Iterable,java.lang.String) -> join
    java.lang.String deleteWhitespace(java.lang.String) -> deleteWhitespace
    java.lang.String removeStart(java.lang.String,java.lang.String) -> removeStart
    java.lang.String removeStartIgnoreCase(java.lang.String,java.lang.String) -> removeStartIgnoreCase
    java.lang.String removeEnd(java.lang.String,java.lang.String) -> removeEnd
    java.lang.String removeEndIgnoreCase(java.lang.String,java.lang.String) -> removeEndIgnoreCase
    java.lang.String remove(java.lang.String,java.lang.String) -> remove
    java.lang.String remove(java.lang.String,char) -> remove
    java.lang.String replaceOnce(java.lang.String,java.lang.String,java.lang.String) -> replaceOnce
    java.lang.String replacePattern(java.lang.String,java.lang.String,java.lang.String) -> replacePattern
    java.lang.String removePattern(java.lang.String,java.lang.String) -> removePattern
    java.lang.String replace(java.lang.String,java.lang.String,java.lang.String) -> replace
    java.lang.String replace(java.lang.String,java.lang.String,java.lang.String,int) -> replace
    java.lang.String replaceEach(java.lang.String,java.lang.String[],java.lang.String[]) -> replaceEach
    java.lang.String replaceEachRepeatedly(java.lang.String,java.lang.String[],java.lang.String[]) -> replaceEachRepeatedly
    java.lang.String replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int) -> replaceEach
    java.lang.String replaceChars(java.lang.String,char,char) -> replaceChars
    java.lang.String replaceChars(java.lang.String,java.lang.String,java.lang.String) -> replaceChars
    java.lang.String overlay(java.lang.String,java.lang.String,int,int) -> overlay
    java.lang.String chomp(java.lang.String) -> chomp
    java.lang.String chomp(java.lang.String,java.lang.String) -> chomp
    java.lang.String chop(java.lang.String) -> chop
    java.lang.String repeat(java.lang.String,int) -> repeat
    java.lang.String repeat(java.lang.String,java.lang.String,int) -> repeat
    java.lang.String repeat(char,int) -> repeat
    java.lang.String rightPad(java.lang.String,int) -> rightPad
    java.lang.String rightPad(java.lang.String,int,char) -> rightPad
    java.lang.String rightPad(java.lang.String,int,java.lang.String) -> rightPad
    java.lang.String leftPad(java.lang.String,int) -> leftPad
    java.lang.String leftPad(java.lang.String,int,char) -> leftPad
    java.lang.String leftPad(java.lang.String,int,java.lang.String) -> leftPad
    int length(java.lang.CharSequence) -> length
    java.lang.String center(java.lang.String,int) -> center
    java.lang.String center(java.lang.String,int,char) -> center
    java.lang.String center(java.lang.String,int,java.lang.String) -> center
    java.lang.String upperCase(java.lang.String) -> upperCase
    java.lang.String upperCase(java.lang.String,java.util.Locale) -> upperCase
    java.lang.String lowerCase(java.lang.String) -> lowerCase
    java.lang.String lowerCase(java.lang.String,java.util.Locale) -> lowerCase
    java.lang.String capitalize(java.lang.String) -> capitalize
    java.lang.String uncapitalize(java.lang.String) -> uncapitalize
    java.lang.String swapCase(java.lang.String) -> swapCase
    int countMatches(java.lang.CharSequence,java.lang.CharSequence) -> countMatches
    boolean isAlpha(java.lang.CharSequence) -> isAlpha
    boolean isAlphaSpace(java.lang.CharSequence) -> isAlphaSpace
    boolean isAlphanumeric(java.lang.CharSequence) -> isAlphanumeric
    boolean isAlphanumericSpace(java.lang.CharSequence) -> isAlphanumericSpace
    boolean isAsciiPrintable(java.lang.CharSequence) -> isAsciiPrintable
    boolean isNumeric(java.lang.CharSequence) -> isNumeric
    boolean isNumericSpace(java.lang.CharSequence) -> isNumericSpace
    boolean isWhitespace(java.lang.CharSequence) -> isWhitespace
    boolean isAllLowerCase(java.lang.CharSequence) -> isAllLowerCase
    boolean isAllUpperCase(java.lang.CharSequence) -> isAllUpperCase
    java.lang.String defaultString(java.lang.String) -> defaultString
    java.lang.String defaultString(java.lang.String,java.lang.String) -> defaultString
    java.lang.CharSequence defaultIfBlank(java.lang.CharSequence,java.lang.CharSequence) -> defaultIfBlank
    java.lang.CharSequence defaultIfEmpty(java.lang.CharSequence,java.lang.CharSequence) -> defaultIfEmpty
    java.lang.String reverse(java.lang.String) -> reverse
    java.lang.String reverseDelimited(java.lang.String,char) -> reverseDelimited
    java.lang.String abbreviate(java.lang.String,int) -> abbreviate
    java.lang.String abbreviate(java.lang.String,int,int) -> abbreviate
    java.lang.String abbreviateMiddle(java.lang.String,java.lang.String,int) -> abbreviateMiddle
    java.lang.String difference(java.lang.String,java.lang.String) -> difference
    int indexOfDifference(java.lang.CharSequence,java.lang.CharSequence) -> indexOfDifference
    int indexOfDifference(java.lang.CharSequence[]) -> indexOfDifference
    java.lang.String getCommonPrefix(java.lang.String[]) -> getCommonPrefix
    int getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence) -> getLevenshteinDistance
    int getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int) -> getLevenshteinDistance
    double getJaroWinklerDistance(java.lang.CharSequence,java.lang.CharSequence) -> getJaroWinklerDistance
    double score(java.lang.CharSequence,java.lang.CharSequence) -> score
    java.lang.String getSetOfMatchingCharacterWithin(java.lang.CharSequence,java.lang.CharSequence,int) -> getSetOfMatchingCharacterWithin
    int transpositions(java.lang.CharSequence,java.lang.CharSequence) -> transpositions
    int commonPrefixLength(java.lang.CharSequence,java.lang.CharSequence) -> commonPrefixLength
    boolean startsWith(java.lang.CharSequence,java.lang.CharSequence) -> startsWith
    boolean startsWithIgnoreCase(java.lang.CharSequence,java.lang.CharSequence) -> startsWithIgnoreCase
    boolean startsWith(java.lang.CharSequence,java.lang.CharSequence,boolean) -> startsWith
    boolean startsWithAny(java.lang.CharSequence,java.lang.CharSequence[]) -> startsWithAny
    boolean endsWith(java.lang.CharSequence,java.lang.CharSequence) -> endsWith
    boolean endsWithIgnoreCase(java.lang.CharSequence,java.lang.CharSequence) -> endsWithIgnoreCase
    boolean endsWith(java.lang.CharSequence,java.lang.CharSequence,boolean) -> endsWith
    java.lang.String normalizeSpace(java.lang.String) -> normalizeSpace
    boolean endsWithAny(java.lang.CharSequence,java.lang.CharSequence[]) -> endsWithAny
    java.lang.String appendIfMissing(java.lang.String,java.lang.CharSequence,boolean,java.lang.CharSequence[]) -> appendIfMissing
    java.lang.String appendIfMissing(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[]) -> appendIfMissing
    java.lang.String appendIfMissingIgnoreCase(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[]) -> appendIfMissingIgnoreCase
    java.lang.String prependIfMissing(java.lang.String,java.lang.CharSequence,boolean,java.lang.CharSequence[]) -> prependIfMissing
    java.lang.String prependIfMissing(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[]) -> prependIfMissing
    java.lang.String prependIfMissingIgnoreCase(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[]) -> prependIfMissingIgnoreCase
    java.lang.String toString(byte[],java.lang.String) -> toString
    java.lang.String toEncodedString(byte[],java.nio.charset.Charset) -> toEncodedString
org.apache.commons.lang3.SystemUtils -> org.apache.commons.lang3.SystemUtils:
    java.lang.String OS_NAME_WINDOWS_PREFIX -> OS_NAME_WINDOWS_PREFIX
    java.lang.String USER_HOME_KEY -> USER_HOME_KEY
    java.lang.String USER_DIR_KEY -> USER_DIR_KEY
    java.lang.String JAVA_IO_TMPDIR_KEY -> JAVA_IO_TMPDIR_KEY
    java.lang.String JAVA_HOME_KEY -> JAVA_HOME_KEY
    java.lang.String AWT_TOOLKIT -> AWT_TOOLKIT
    java.lang.String FILE_ENCODING -> FILE_ENCODING
    java.lang.String FILE_SEPARATOR -> FILE_SEPARATOR
    java.lang.String JAVA_AWT_FONTS -> JAVA_AWT_FONTS
    java.lang.String JAVA_AWT_GRAPHICSENV -> JAVA_AWT_GRAPHICSENV
    java.lang.String JAVA_AWT_HEADLESS -> JAVA_AWT_HEADLESS
    java.lang.String JAVA_AWT_PRINTERJOB -> JAVA_AWT_PRINTERJOB
    java.lang.String JAVA_CLASS_PATH -> JAVA_CLASS_PATH
    java.lang.String JAVA_CLASS_VERSION -> JAVA_CLASS_VERSION
    java.lang.String JAVA_COMPILER -> JAVA_COMPILER
    java.lang.String JAVA_ENDORSED_DIRS -> JAVA_ENDORSED_DIRS
    java.lang.String JAVA_EXT_DIRS -> JAVA_EXT_DIRS
    java.lang.String JAVA_HOME -> JAVA_HOME
    java.lang.String JAVA_IO_TMPDIR -> JAVA_IO_TMPDIR
    java.lang.String JAVA_LIBRARY_PATH -> JAVA_LIBRARY_PATH
    java.lang.String JAVA_RUNTIME_NAME -> JAVA_RUNTIME_NAME
    java.lang.String JAVA_RUNTIME_VERSION -> JAVA_RUNTIME_VERSION
    java.lang.String JAVA_SPECIFICATION_NAME -> JAVA_SPECIFICATION_NAME
    java.lang.String JAVA_SPECIFICATION_VENDOR -> JAVA_SPECIFICATION_VENDOR
    java.lang.String JAVA_SPECIFICATION_VERSION -> JAVA_SPECIFICATION_VERSION
    org.apache.commons.lang3.JavaVersion JAVA_SPECIFICATION_VERSION_AS_ENUM -> JAVA_SPECIFICATION_VERSION_AS_ENUM
    java.lang.String JAVA_UTIL_PREFS_PREFERENCES_FACTORY -> JAVA_UTIL_PREFS_PREFERENCES_FACTORY
    java.lang.String JAVA_VENDOR -> JAVA_VENDOR
    java.lang.String JAVA_VENDOR_URL -> JAVA_VENDOR_URL
    java.lang.String JAVA_VERSION -> JAVA_VERSION
    java.lang.String JAVA_VM_INFO -> JAVA_VM_INFO
    java.lang.String JAVA_VM_NAME -> JAVA_VM_NAME
    java.lang.String JAVA_VM_SPECIFICATION_NAME -> JAVA_VM_SPECIFICATION_NAME
    java.lang.String JAVA_VM_SPECIFICATION_VENDOR -> JAVA_VM_SPECIFICATION_VENDOR
    java.lang.String JAVA_VM_SPECIFICATION_VERSION -> JAVA_VM_SPECIFICATION_VERSION
    java.lang.String JAVA_VM_VENDOR -> JAVA_VM_VENDOR
    java.lang.String JAVA_VM_VERSION -> JAVA_VM_VERSION
    java.lang.String LINE_SEPARATOR -> LINE_SEPARATOR
    java.lang.String OS_ARCH -> OS_ARCH
    java.lang.String OS_NAME -> OS_NAME
    java.lang.String OS_VERSION -> OS_VERSION
    java.lang.String PATH_SEPARATOR -> PATH_SEPARATOR
    java.lang.String USER_COUNTRY -> USER_COUNTRY
    java.lang.String USER_DIR -> USER_DIR
    java.lang.String USER_HOME -> USER_HOME
    java.lang.String USER_LANGUAGE -> USER_LANGUAGE
    java.lang.String USER_NAME -> USER_NAME
    java.lang.String USER_TIMEZONE -> USER_TIMEZONE
    boolean IS_JAVA_1_1 -> IS_JAVA_1_1
    boolean IS_JAVA_1_2 -> IS_JAVA_1_2
    boolean IS_JAVA_1_3 -> IS_JAVA_1_3
    boolean IS_JAVA_1_4 -> IS_JAVA_1_4
    boolean IS_JAVA_1_5 -> IS_JAVA_1_5
    boolean IS_JAVA_1_6 -> IS_JAVA_1_6
    boolean IS_JAVA_1_7 -> IS_JAVA_1_7
    boolean IS_JAVA_1_8 -> IS_JAVA_1_8
    boolean IS_OS_AIX -> IS_OS_AIX
    boolean IS_OS_HP_UX -> IS_OS_HP_UX
    boolean IS_OS_400 -> IS_OS_400
    boolean IS_OS_IRIX -> IS_OS_IRIX
    boolean IS_OS_LINUX -> IS_OS_LINUX
    boolean IS_OS_MAC -> IS_OS_MAC
    boolean IS_OS_MAC_OSX -> IS_OS_MAC_OSX
    boolean IS_OS_FREE_BSD -> IS_OS_FREE_BSD
    boolean IS_OS_OPEN_BSD -> IS_OS_OPEN_BSD
    boolean IS_OS_NET_BSD -> IS_OS_NET_BSD
    boolean IS_OS_OS2 -> IS_OS_OS2
    boolean IS_OS_SOLARIS -> IS_OS_SOLARIS
    boolean IS_OS_SUN_OS -> IS_OS_SUN_OS
    boolean IS_OS_UNIX -> IS_OS_UNIX
    boolean IS_OS_WINDOWS -> IS_OS_WINDOWS
    boolean IS_OS_WINDOWS_2000 -> IS_OS_WINDOWS_2000
    boolean IS_OS_WINDOWS_2003 -> IS_OS_WINDOWS_2003
    boolean IS_OS_WINDOWS_2008 -> IS_OS_WINDOWS_2008
    boolean IS_OS_WINDOWS_95 -> IS_OS_WINDOWS_95
    boolean IS_OS_WINDOWS_98 -> IS_OS_WINDOWS_98
    boolean IS_OS_WINDOWS_ME -> IS_OS_WINDOWS_ME
    boolean IS_OS_WINDOWS_NT -> IS_OS_WINDOWS_NT
    boolean IS_OS_WINDOWS_XP -> IS_OS_WINDOWS_XP
    boolean IS_OS_WINDOWS_VISTA -> IS_OS_WINDOWS_VISTA
    boolean IS_OS_WINDOWS_7 -> IS_OS_WINDOWS_7
    boolean IS_OS_WINDOWS_8 -> IS_OS_WINDOWS_8
    java.io.File getJavaHome() -> getJavaHome
    java.io.File getJavaIoTmpDir() -> getJavaIoTmpDir
    boolean getJavaVersionMatches(java.lang.String) -> getJavaVersionMatches
    boolean getOSMatches(java.lang.String,java.lang.String) -> getOSMatches
    boolean getOSMatchesName(java.lang.String) -> getOSMatchesName
    java.lang.String getSystemProperty(java.lang.String) -> getSystemProperty
    java.io.File getUserDir() -> getUserDir
    java.io.File getUserHome() -> getUserHome
    boolean isJavaAwtHeadless() -> isJavaAwtHeadless
    boolean isJavaVersionAtLeast(org.apache.commons.lang3.JavaVersion) -> isJavaVersionAtLeast
    boolean isJavaVersionMatch(java.lang.String,java.lang.String) -> isJavaVersionMatch
    boolean isOSMatch(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> isOSMatch
    boolean isOSNameMatch(java.lang.String,java.lang.String) -> isOSNameMatch
org.apache.commons.lang3.Validate -> org.apache.commons.lang3.Validate:
    java.lang.String DEFAULT_EXCLUSIVE_BETWEEN_EX_MESSAGE -> DEFAULT_EXCLUSIVE_BETWEEN_EX_MESSAGE
    java.lang.String DEFAULT_INCLUSIVE_BETWEEN_EX_MESSAGE -> DEFAULT_INCLUSIVE_BETWEEN_EX_MESSAGE
    java.lang.String DEFAULT_MATCHES_PATTERN_EX -> DEFAULT_MATCHES_PATTERN_EX
    java.lang.String DEFAULT_IS_NULL_EX_MESSAGE -> DEFAULT_IS_NULL_EX_MESSAGE
    java.lang.String DEFAULT_IS_TRUE_EX_MESSAGE -> DEFAULT_IS_TRUE_EX_MESSAGE
    java.lang.String DEFAULT_NO_NULL_ELEMENTS_ARRAY_EX_MESSAGE -> DEFAULT_NO_NULL_ELEMENTS_ARRAY_EX_MESSAGE
    java.lang.String DEFAULT_NO_NULL_ELEMENTS_COLLECTION_EX_MESSAGE -> DEFAULT_NO_NULL_ELEMENTS_COLLECTION_EX_MESSAGE
    java.lang.String DEFAULT_NOT_BLANK_EX_MESSAGE -> DEFAULT_NOT_BLANK_EX_MESSAGE
    java.lang.String DEFAULT_NOT_EMPTY_ARRAY_EX_MESSAGE -> DEFAULT_NOT_EMPTY_ARRAY_EX_MESSAGE
    java.lang.String DEFAULT_NOT_EMPTY_CHAR_SEQUENCE_EX_MESSAGE -> DEFAULT_NOT_EMPTY_CHAR_SEQUENCE_EX_MESSAGE
    java.lang.String DEFAULT_NOT_EMPTY_COLLECTION_EX_MESSAGE -> DEFAULT_NOT_EMPTY_COLLECTION_EX_MESSAGE
    java.lang.String DEFAULT_NOT_EMPTY_MAP_EX_MESSAGE -> DEFAULT_NOT_EMPTY_MAP_EX_MESSAGE
    java.lang.String DEFAULT_VALID_INDEX_ARRAY_EX_MESSAGE -> DEFAULT_VALID_INDEX_ARRAY_EX_MESSAGE
    java.lang.String DEFAULT_VALID_INDEX_CHAR_SEQUENCE_EX_MESSAGE -> DEFAULT_VALID_INDEX_CHAR_SEQUENCE_EX_MESSAGE
    java.lang.String DEFAULT_VALID_INDEX_COLLECTION_EX_MESSAGE -> DEFAULT_VALID_INDEX_COLLECTION_EX_MESSAGE
    java.lang.String DEFAULT_VALID_STATE_EX_MESSAGE -> DEFAULT_VALID_STATE_EX_MESSAGE
    java.lang.String DEFAULT_IS_ASSIGNABLE_EX_MESSAGE -> DEFAULT_IS_ASSIGNABLE_EX_MESSAGE
    java.lang.String DEFAULT_IS_INSTANCE_OF_EX_MESSAGE -> DEFAULT_IS_INSTANCE_OF_EX_MESSAGE
    void isTrue(boolean,java.lang.String,long) -> isTrue
    void isTrue(boolean,java.lang.String,double) -> isTrue
    void isTrue(boolean,java.lang.String,java.lang.Object[]) -> isTrue
    void isTrue(boolean) -> isTrue
    java.lang.Object notNull(java.lang.Object) -> notNull
    java.lang.Object notNull(java.lang.Object,java.lang.String,java.lang.Object[]) -> notNull
    java.lang.Object[] notEmpty(java.lang.Object[],java.lang.String,java.lang.Object[]) -> notEmpty
    java.lang.Object[] notEmpty(java.lang.Object[]) -> notEmpty
    java.util.Collection notEmpty(java.util.Collection,java.lang.String,java.lang.Object[]) -> notEmpty
    java.util.Collection notEmpty(java.util.Collection) -> notEmpty
    java.util.Map notEmpty(java.util.Map,java.lang.String,java.lang.Object[]) -> notEmpty
    java.util.Map notEmpty(java.util.Map) -> notEmpty
    java.lang.CharSequence notEmpty(java.lang.CharSequence,java.lang.String,java.lang.Object[]) -> notEmpty
    java.lang.CharSequence notEmpty(java.lang.CharSequence) -> notEmpty
    java.lang.CharSequence notBlank(java.lang.CharSequence,java.lang.String,java.lang.Object[]) -> notBlank
    java.lang.CharSequence notBlank(java.lang.CharSequence) -> notBlank
    java.lang.Object[] noNullElements(java.lang.Object[],java.lang.String,java.lang.Object[]) -> noNullElements
    java.lang.Object[] noNullElements(java.lang.Object[]) -> noNullElements
    java.lang.Iterable noNullElements(java.lang.Iterable,java.lang.String,java.lang.Object[]) -> noNullElements
    java.lang.Iterable noNullElements(java.lang.Iterable) -> noNullElements
    java.lang.Object[] validIndex(java.lang.Object[],int,java.lang.String,java.lang.Object[]) -> validIndex
    java.lang.Object[] validIndex(java.lang.Object[],int) -> validIndex
    java.util.Collection validIndex(java.util.Collection,int,java.lang.String,java.lang.Object[]) -> validIndex
    java.util.Collection validIndex(java.util.Collection,int) -> validIndex
    java.lang.CharSequence validIndex(java.lang.CharSequence,int,java.lang.String,java.lang.Object[]) -> validIndex
    java.lang.CharSequence validIndex(java.lang.CharSequence,int) -> validIndex
    void validState(boolean) -> validState
    void validState(boolean,java.lang.String,java.lang.Object[]) -> validState
    void matchesPattern(java.lang.CharSequence,java.lang.String) -> matchesPattern
    void matchesPattern(java.lang.CharSequence,java.lang.String,java.lang.String,java.lang.Object[]) -> matchesPattern
    void inclusiveBetween(java.lang.Object,java.lang.Object,java.lang.Comparable) -> inclusiveBetween
    void inclusiveBetween(java.lang.Object,java.lang.Object,java.lang.Comparable,java.lang.String,java.lang.Object[]) -> inclusiveBetween
    void inclusiveBetween(long,long,long) -> inclusiveBetween
    void inclusiveBetween(long,long,long,java.lang.String) -> inclusiveBetween
    void inclusiveBetween(double,double,double) -> inclusiveBetween
    void inclusiveBetween(double,double,double,java.lang.String) -> inclusiveBetween
    void exclusiveBetween(java.lang.Object,java.lang.Object,java.lang.Comparable) -> exclusiveBetween
    void exclusiveBetween(java.lang.Object,java.lang.Object,java.lang.Comparable,java.lang.String,java.lang.Object[]) -> exclusiveBetween
    void exclusiveBetween(long,long,long) -> exclusiveBetween
    void exclusiveBetween(long,long,long,java.lang.String) -> exclusiveBetween
    void exclusiveBetween(double,double,double) -> exclusiveBetween
    void exclusiveBetween(double,double,double,java.lang.String) -> exclusiveBetween
    void isInstanceOf(java.lang.Class,java.lang.Object) -> isInstanceOf
    void isInstanceOf(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[]) -> isInstanceOf
    void isAssignableFrom(java.lang.Class,java.lang.Class) -> isAssignableFrom
    void isAssignableFrom(java.lang.Class,java.lang.Class,java.lang.String,java.lang.Object[]) -> isAssignableFrom
org.apache.commons.lang3.builder.Builder -> org.apache.commons.lang3.builder.Builder:
    java.lang.Object build() -> build
org.apache.commons.lang3.builder.CompareToBuilder -> org.apache.commons.lang3.builder.CompareToBuilder:
    int comparison -> comparison
    int reflectionCompare(java.lang.Object,java.lang.Object) -> reflectionCompare
    int reflectionCompare(java.lang.Object,java.lang.Object,boolean) -> reflectionCompare
    int reflectionCompare(java.lang.Object,java.lang.Object,java.util.Collection) -> reflectionCompare
    int reflectionCompare(java.lang.Object,java.lang.Object,java.lang.String[]) -> reflectionCompare
    int reflectionCompare(java.lang.Object,java.lang.Object,boolean,java.lang.Class,java.lang.String[]) -> reflectionCompare
    void reflectionAppend(java.lang.Object,java.lang.Object,java.lang.Class,org.apache.commons.lang3.builder.CompareToBuilder,boolean,java.lang.String[]) -> reflectionAppend
    org.apache.commons.lang3.builder.CompareToBuilder appendSuper(int) -> appendSuper
    org.apache.commons.lang3.builder.CompareToBuilder append(java.lang.Object,java.lang.Object) -> append
    org.apache.commons.lang3.builder.CompareToBuilder append(java.lang.Object,java.lang.Object,java.util.Comparator) -> append
    org.apache.commons.lang3.builder.CompareToBuilder append(long,long) -> append
    org.apache.commons.lang3.builder.CompareToBuilder append(int,int) -> append
    org.apache.commons.lang3.builder.CompareToBuilder append(short,short) -> append
    org.apache.commons.lang3.builder.CompareToBuilder append(char,char) -> append
    org.apache.commons.lang3.builder.CompareToBuilder append(byte,byte) -> append
    org.apache.commons.lang3.builder.CompareToBuilder append(double,double) -> append
    org.apache.commons.lang3.builder.CompareToBuilder append(float,float) -> append
    org.apache.commons.lang3.builder.CompareToBuilder append(boolean,boolean) -> append
    org.apache.commons.lang3.builder.CompareToBuilder append(java.lang.Object[],java.lang.Object[]) -> append
    org.apache.commons.lang3.builder.CompareToBuilder append(java.lang.Object[],java.lang.Object[],java.util.Comparator) -> append
    org.apache.commons.lang3.builder.CompareToBuilder append(long[],long[]) -> append
    org.apache.commons.lang3.builder.CompareToBuilder append(int[],int[]) -> append
    org.apache.commons.lang3.builder.CompareToBuilder append(short[],short[]) -> append
    org.apache.commons.lang3.builder.CompareToBuilder append(char[],char[]) -> append
    org.apache.commons.lang3.builder.CompareToBuilder append(byte[],byte[]) -> append
    org.apache.commons.lang3.builder.CompareToBuilder append(double[],double[]) -> append
    org.apache.commons.lang3.builder.CompareToBuilder append(float[],float[]) -> append
    org.apache.commons.lang3.builder.CompareToBuilder append(boolean[],boolean[]) -> append
    int toComparison() -> toComparison
    java.lang.Integer build() -> build
    java.lang.Object build() -> build
org.apache.commons.lang3.builder.Diff -> org.apache.commons.lang3.builder.Diff:
    long serialVersionUID -> serialVersionUID
    java.lang.reflect.Type type -> type
    java.lang.String fieldName -> fieldName
    java.lang.reflect.Type getType() -> getType
    java.lang.String getFieldName() -> getFieldName
    java.lang.String toString() -> toString
    java.lang.Object setValue(java.lang.Object) -> setValue
org.apache.commons.lang3.builder.DiffBuilder -> org.apache.commons.lang3.builder.DiffBuilder:
    java.util.List diffs -> diffs
    boolean objectsTriviallyEqual -> objectsTriviallyEqual
    java.lang.Object left -> left
    java.lang.Object right -> right
    org.apache.commons.lang3.builder.ToStringStyle style -> style
    org.apache.commons.lang3.builder.DiffBuilder append(java.lang.String,boolean,boolean) -> append
    org.apache.commons.lang3.builder.DiffBuilder append(java.lang.String,boolean[],boolean[]) -> append
    org.apache.commons.lang3.builder.DiffBuilder append(java.lang.String,byte,byte) -> append
    org.apache.commons.lang3.builder.DiffBuilder append(java.lang.String,byte[],byte[]) -> append
    org.apache.commons.lang3.builder.DiffBuilder append(java.lang.String,char,char) -> append
    org.apache.commons.lang3.builder.DiffBuilder append(java.lang.String,char[],char[]) -> append
    org.apache.commons.lang3.builder.DiffBuilder append(java.lang.String,double,double) -> append
    org.apache.commons.lang3.builder.DiffBuilder append(java.lang.String,double[],double[]) -> append
    org.apache.commons.lang3.builder.DiffBuilder append(java.lang.String,float,float) -> append
    org.apache.commons.lang3.builder.DiffBuilder append(java.lang.String,float[],float[]) -> append
    org.apache.commons.lang3.builder.DiffBuilder append(java.lang.String,int,int) -> append
    org.apache.commons.lang3.builder.DiffBuilder append(java.lang.String,int[],int[]) -> append
    org.apache.commons.lang3.builder.DiffBuilder append(java.lang.String,long,long) -> append
    org.apache.commons.lang3.builder.DiffBuilder append(java.lang.String,long[],long[]) -> append
    org.apache.commons.lang3.builder.DiffBuilder append(java.lang.String,short,short) -> append
    org.apache.commons.lang3.builder.DiffBuilder append(java.lang.String,short[],short[]) -> append
    org.apache.commons.lang3.builder.DiffBuilder append(java.lang.String,java.lang.Object,java.lang.Object) -> append
    org.apache.commons.lang3.builder.DiffBuilder append(java.lang.String,java.lang.Object[],java.lang.Object[]) -> append
    org.apache.commons.lang3.builder.DiffResult build() -> build
    java.lang.Object build() -> build
org.apache.commons.lang3.builder.DiffBuilder$1 -> org.apache.commons.lang3.builder.DiffBuilder$1:
    long serialVersionUID -> serialVersionUID
    boolean val$lhs -> val$lhs
    boolean val$rhs -> val$rhs
    org.apache.commons.lang3.builder.DiffBuilder this$0 -> this$0
    java.lang.Boolean getLeft() -> getLeft
    java.lang.Boolean getRight() -> getRight
    java.lang.Object getRight() -> getRight
    java.lang.Object getLeft() -> getLeft
org.apache.commons.lang3.builder.DiffBuilder$10 -> org.apache.commons.lang3.builder.DiffBuilder$10:
    long serialVersionUID -> serialVersionUID
    float[] val$lhs -> val$lhs
    float[] val$rhs -> val$rhs
    org.apache.commons.lang3.builder.DiffBuilder this$0 -> this$0
    java.lang.Float[] getLeft() -> getLeft
    java.lang.Float[] getRight() -> getRight
    java.lang.Object getRight() -> getRight
    java.lang.Object getLeft() -> getLeft
org.apache.commons.lang3.builder.DiffBuilder$11 -> org.apache.commons.lang3.builder.DiffBuilder$11:
    long serialVersionUID -> serialVersionUID
    int val$lhs -> val$lhs
    int val$rhs -> val$rhs
    org.apache.commons.lang3.builder.DiffBuilder this$0 -> this$0
    java.lang.Integer getLeft() -> getLeft
    java.lang.Integer getRight() -> getRight
    java.lang.Object getRight() -> getRight
    java.lang.Object getLeft() -> getLeft
org.apache.commons.lang3.builder.DiffBuilder$12 -> org.apache.commons.lang3.builder.DiffBuilder$12:
    long serialVersionUID -> serialVersionUID
    int[] val$lhs -> val$lhs
    int[] val$rhs -> val$rhs
    org.apache.commons.lang3.builder.DiffBuilder this$0 -> this$0
    java.lang.Integer[] getLeft() -> getLeft
    java.lang.Integer[] getRight() -> getRight
    java.lang.Object getRight() -> getRight
    java.lang.Object getLeft() -> getLeft
org.apache.commons.lang3.builder.DiffBuilder$13 -> org.apache.commons.lang3.builder.DiffBuilder$13:
    long serialVersionUID -> serialVersionUID
    long val$lhs -> val$lhs
    long val$rhs -> val$rhs
    org.apache.commons.lang3.builder.DiffBuilder this$0 -> this$0
    java.lang.Long getLeft() -> getLeft
    java.lang.Long getRight() -> getRight
    java.lang.Object getRight() -> getRight
    java.lang.Object getLeft() -> getLeft
org.apache.commons.lang3.builder.DiffBuilder$14 -> org.apache.commons.lang3.builder.DiffBuilder$14:
    long serialVersionUID -> serialVersionUID
    long[] val$lhs -> val$lhs
    long[] val$rhs -> val$rhs
    org.apache.commons.lang3.builder.DiffBuilder this$0 -> this$0
    java.lang.Long[] getLeft() -> getLeft
    java.lang.Long[] getRight() -> getRight
    java.lang.Object getRight() -> getRight
    java.lang.Object getLeft() -> getLeft
org.apache.commons.lang3.builder.DiffBuilder$15 -> org.apache.commons.lang3.builder.DiffBuilder$15:
    long serialVersionUID -> serialVersionUID
    short val$lhs -> val$lhs
    short val$rhs -> val$rhs
    org.apache.commons.lang3.builder.DiffBuilder this$0 -> this$0
    java.lang.Short getLeft() -> getLeft
    java.lang.Short getRight() -> getRight
    java.lang.Object getRight() -> getRight
    java.lang.Object getLeft() -> getLeft
org.apache.commons.lang3.builder.DiffBuilder$16 -> org.apache.commons.lang3.builder.DiffBuilder$16:
    long serialVersionUID -> serialVersionUID
    short[] val$lhs -> val$lhs
    short[] val$rhs -> val$rhs
    org.apache.commons.lang3.builder.DiffBuilder this$0 -> this$0
    java.lang.Short[] getLeft() -> getLeft
    java.lang.Short[] getRight() -> getRight
    java.lang.Object getRight() -> getRight
    java.lang.Object getLeft() -> getLeft
org.apache.commons.lang3.builder.DiffBuilder$17 -> org.apache.commons.lang3.builder.DiffBuilder$17:
    long serialVersionUID -> serialVersionUID
    java.lang.Object val$lhs -> val$lhs
    java.lang.Object val$rhs -> val$rhs
    org.apache.commons.lang3.builder.DiffBuilder this$0 -> this$0
    java.lang.Object getLeft() -> getLeft
    java.lang.Object getRight() -> getRight
org.apache.commons.lang3.builder.DiffBuilder$18 -> org.apache.commons.lang3.builder.DiffBuilder$18:
    long serialVersionUID -> serialVersionUID
    java.lang.Object[] val$lhs -> val$lhs
    java.lang.Object[] val$rhs -> val$rhs
    org.apache.commons.lang3.builder.DiffBuilder this$0 -> this$0
    java.lang.Object[] getLeft() -> getLeft
    java.lang.Object[] getRight() -> getRight
    java.lang.Object getRight() -> getRight
    java.lang.Object getLeft() -> getLeft
org.apache.commons.lang3.builder.DiffBuilder$2 -> org.apache.commons.lang3.builder.DiffBuilder$2:
    long serialVersionUID -> serialVersionUID
    boolean[] val$lhs -> val$lhs
    boolean[] val$rhs -> val$rhs
    org.apache.commons.lang3.builder.DiffBuilder this$0 -> this$0
    java.lang.Boolean[] getLeft() -> getLeft
    java.lang.Boolean[] getRight() -> getRight
    java.lang.Object getRight() -> getRight
    java.lang.Object getLeft() -> getLeft
org.apache.commons.lang3.builder.DiffBuilder$3 -> org.apache.commons.lang3.builder.DiffBuilder$3:
    long serialVersionUID -> serialVersionUID
    byte val$lhs -> val$lhs
    byte val$rhs -> val$rhs
    org.apache.commons.lang3.builder.DiffBuilder this$0 -> this$0
    java.lang.Byte getLeft() -> getLeft
    java.lang.Byte getRight() -> getRight
    java.lang.Object getRight() -> getRight
    java.lang.Object getLeft() -> getLeft
org.apache.commons.lang3.builder.DiffBuilder$4 -> org.apache.commons.lang3.builder.DiffBuilder$4:
    long serialVersionUID -> serialVersionUID
    byte[] val$lhs -> val$lhs
    byte[] val$rhs -> val$rhs
    org.apache.commons.lang3.builder.DiffBuilder this$0 -> this$0
    java.lang.Byte[] getLeft() -> getLeft
    java.lang.Byte[] getRight() -> getRight
    java.lang.Object getRight() -> getRight
    java.lang.Object getLeft() -> getLeft
org.apache.commons.lang3.builder.DiffBuilder$5 -> org.apache.commons.lang3.builder.DiffBuilder$5:
    long serialVersionUID -> serialVersionUID
    char val$lhs -> val$lhs
    char val$rhs -> val$rhs
    org.apache.commons.lang3.builder.DiffBuilder this$0 -> this$0
    java.lang.Character getLeft() -> getLeft
    java.lang.Character getRight() -> getRight
    java.lang.Object getRight() -> getRight
    java.lang.Object getLeft() -> getLeft
org.apache.commons.lang3.builder.DiffBuilder$6 -> org.apache.commons.lang3.builder.DiffBuilder$6:
    long serialVersionUID -> serialVersionUID
    char[] val$lhs -> val$lhs
    char[] val$rhs -> val$rhs
    org.apache.commons.lang3.builder.DiffBuilder this$0 -> this$0
    java.lang.Character[] getLeft() -> getLeft
    java.lang.Character[] getRight() -> getRight
    java.lang.Object getRight() -> getRight
    java.lang.Object getLeft() -> getLeft
org.apache.commons.lang3.builder.DiffBuilder$7 -> org.apache.commons.lang3.builder.DiffBuilder$7:
    long serialVersionUID -> serialVersionUID
    double val$lhs -> val$lhs
    double val$rhs -> val$rhs
    org.apache.commons.lang3.builder.DiffBuilder this$0 -> this$0
    java.lang.Double getLeft() -> getLeft
    java.lang.Double getRight() -> getRight
    java.lang.Object getRight() -> getRight
    java.lang.Object getLeft() -> getLeft
org.apache.commons.lang3.builder.DiffBuilder$8 -> org.apache.commons.lang3.builder.DiffBuilder$8:
    long serialVersionUID -> serialVersionUID
    double[] val$lhs -> val$lhs
    double[] val$rhs -> val$rhs
    org.apache.commons.lang3.builder.DiffBuilder this$0 -> this$0
    java.lang.Double[] getLeft() -> getLeft
    java.lang.Double[] getRight() -> getRight
    java.lang.Object getRight() -> getRight
    java.lang.Object getLeft() -> getLeft
org.apache.commons.lang3.builder.DiffBuilder$9 -> org.apache.commons.lang3.builder.DiffBuilder$9:
    long serialVersionUID -> serialVersionUID
    float val$lhs -> val$lhs
    float val$rhs -> val$rhs
    org.apache.commons.lang3.builder.DiffBuilder this$0 -> this$0
    java.lang.Float getLeft() -> getLeft
    java.lang.Float getRight() -> getRight
    java.lang.Object getRight() -> getRight
    java.lang.Object getLeft() -> getLeft
org.apache.commons.lang3.builder.DiffResult -> org.apache.commons.lang3.builder.DiffResult:
    java.lang.String OBJECTS_SAME_STRING -> OBJECTS_SAME_STRING
    java.lang.String DIFFERS_STRING -> DIFFERS_STRING
    java.util.List diffs -> diffs
    java.lang.Object lhs -> lhs
    java.lang.Object rhs -> rhs
    org.apache.commons.lang3.builder.ToStringStyle style -> style
    java.util.List getDiffs() -> getDiffs
    int getNumberOfDiffs() -> getNumberOfDiffs
    org.apache.commons.lang3.builder.ToStringStyle getToStringStyle() -> getToStringStyle
    java.lang.String toString() -> toString
    java.lang.String toString(org.apache.commons.lang3.builder.ToStringStyle) -> toString
    java.util.Iterator iterator() -> iterator
org.apache.commons.lang3.builder.Diffable -> org.apache.commons.lang3.builder.Diffable:
    org.apache.commons.lang3.builder.DiffResult diff(java.lang.Object) -> diff
org.apache.commons.lang3.builder.EqualsBuilder -> org.apache.commons.lang3.builder.EqualsBuilder:
    java.lang.ThreadLocal REGISTRY -> REGISTRY
    boolean isEquals -> isEquals
    java.util.Set getRegistry() -> getRegistry
    org.apache.commons.lang3.tuple.Pair getRegisterPair(java.lang.Object,java.lang.Object) -> getRegisterPair
    boolean isRegistered(java.lang.Object,java.lang.Object) -> isRegistered
    void register(java.lang.Object,java.lang.Object) -> register
    void unregister(java.lang.Object,java.lang.Object) -> unregister
    boolean reflectionEquals(java.lang.Object,java.lang.Object,java.util.Collection) -> reflectionEquals
    boolean reflectionEquals(java.lang.Object,java.lang.Object,java.lang.String[]) -> reflectionEquals
    boolean reflectionEquals(java.lang.Object,java.lang.Object,boolean) -> reflectionEquals
    boolean reflectionEquals(java.lang.Object,java.lang.Object,boolean,java.lang.Class,java.lang.String[]) -> reflectionEquals
    void reflectionAppend(java.lang.Object,java.lang.Object,java.lang.Class,org.apache.commons.lang3.builder.EqualsBuilder,boolean,java.lang.String[]) -> reflectionAppend
    org.apache.commons.lang3.builder.EqualsBuilder appendSuper(boolean) -> appendSuper
    org.apache.commons.lang3.builder.EqualsBuilder append(java.lang.Object,java.lang.Object) -> append
    org.apache.commons.lang3.builder.EqualsBuilder append(long,long) -> append
    org.apache.commons.lang3.builder.EqualsBuilder append(int,int) -> append
    org.apache.commons.lang3.builder.EqualsBuilder append(short,short) -> append
    org.apache.commons.lang3.builder.EqualsBuilder append(char,char) -> append
    org.apache.commons.lang3.builder.EqualsBuilder append(byte,byte) -> append
    org.apache.commons.lang3.builder.EqualsBuilder append(double,double) -> append
    org.apache.commons.lang3.builder.EqualsBuilder append(float,float) -> append
    org.apache.commons.lang3.builder.EqualsBuilder append(boolean,boolean) -> append
    org.apache.commons.lang3.builder.EqualsBuilder append(java.lang.Object[],java.lang.Object[]) -> append
    org.apache.commons.lang3.builder.EqualsBuilder append(long[],long[]) -> append
    org.apache.commons.lang3.builder.EqualsBuilder append(int[],int[]) -> append
    org.apache.commons.lang3.builder.EqualsBuilder append(short[],short[]) -> append
    org.apache.commons.lang3.builder.EqualsBuilder append(char[],char[]) -> append
    org.apache.commons.lang3.builder.EqualsBuilder append(byte[],byte[]) -> append
    org.apache.commons.lang3.builder.EqualsBuilder append(double[],double[]) -> append
    org.apache.commons.lang3.builder.EqualsBuilder append(float[],float[]) -> append
    org.apache.commons.lang3.builder.EqualsBuilder append(boolean[],boolean[]) -> append
    boolean isEquals() -> isEquals
    java.lang.Boolean build() -> build
    void setEquals(boolean) -> setEquals
    void reset() -> reset
    java.lang.Object build() -> build
org.apache.commons.lang3.builder.HashCodeBuilder -> org.apache.commons.lang3.builder.HashCodeBuilder:
    java.lang.ThreadLocal REGISTRY -> REGISTRY
    int iConstant -> iConstant
    int iTotal -> iTotal
    java.util.Set getRegistry() -> getRegistry
    boolean isRegistered(java.lang.Object) -> isRegistered
    void reflectionAppend(java.lang.Object,java.lang.Class,org.apache.commons.lang3.builder.HashCodeBuilder,boolean,java.lang.String[]) -> reflectionAppend
    int reflectionHashCode(int,int,java.lang.Object) -> reflectionHashCode
    int reflectionHashCode(int,int,java.lang.Object,boolean) -> reflectionHashCode
    int reflectionHashCode(int,int,java.lang.Object,boolean,java.lang.Class,java.lang.String[]) -> reflectionHashCode
    int reflectionHashCode(java.lang.Object,boolean) -> reflectionHashCode
    int reflectionHashCode(java.lang.Object,java.util.Collection) -> reflectionHashCode
    int reflectionHashCode(java.lang.Object,java.lang.String[]) -> reflectionHashCode
    void register(java.lang.Object) -> register
    void unregister(java.lang.Object) -> unregister
    org.apache.commons.lang3.builder.HashCodeBuilder append(boolean) -> append
    org.apache.commons.lang3.builder.HashCodeBuilder append(boolean[]) -> append
    org.apache.commons.lang3.builder.HashCodeBuilder append(byte) -> append
    org.apache.commons.lang3.builder.HashCodeBuilder append(byte[]) -> append
    org.apache.commons.lang3.builder.HashCodeBuilder append(char) -> append
    org.apache.commons.lang3.builder.HashCodeBuilder append(char[]) -> append
    org.apache.commons.lang3.builder.HashCodeBuilder append(double) -> append
    org.apache.commons.lang3.builder.HashCodeBuilder append(double[]) -> append
    org.apache.commons.lang3.builder.HashCodeBuilder append(float) -> append
    org.apache.commons.lang3.builder.HashCodeBuilder append(float[]) -> append
    org.apache.commons.lang3.builder.HashCodeBuilder append(int) -> append
    org.apache.commons.lang3.builder.HashCodeBuilder append(int[]) -> append
    org.apache.commons.lang3.builder.HashCodeBuilder append(long) -> append
    org.apache.commons.lang3.builder.HashCodeBuilder append(long[]) -> append
    org.apache.commons.lang3.builder.HashCodeBuilder append(java.lang.Object) -> append
    org.apache.commons.lang3.builder.HashCodeBuilder append(java.lang.Object[]) -> append
    org.apache.commons.lang3.builder.HashCodeBuilder append(short) -> append
    org.apache.commons.lang3.builder.HashCodeBuilder append(short[]) -> append
    org.apache.commons.lang3.builder.HashCodeBuilder appendSuper(int) -> appendSuper
    int toHashCode() -> toHashCode
    java.lang.Integer build() -> build
    int hashCode() -> hashCode
    java.lang.Object build() -> build
org.apache.commons.lang3.builder.IDKey -> org.apache.commons.lang3.builder.IDKey:
    java.lang.Object value -> value
    int id -> id
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
org.apache.commons.lang3.builder.RecursiveToStringStyle -> org.apache.commons.lang3.builder.RecursiveToStringStyle:
    long serialVersionUID -> serialVersionUID
    void appendDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object) -> appendDetail
    void appendDetail(java.lang.StringBuffer,java.lang.String,java.util.Collection) -> appendDetail
    boolean accept(java.lang.Class) -> accept
org.apache.commons.lang3.builder.ReflectionToStringBuilder -> org.apache.commons.lang3.builder.ReflectionToStringBuilder:
    boolean appendStatics -> appendStatics
    boolean appendTransients -> appendTransients
    java.lang.String[] excludeFieldNames -> excludeFieldNames
    java.lang.Class upToClass -> upToClass
    java.lang.String toString(java.lang.Object) -> toString
    java.lang.String toString(java.lang.Object,org.apache.commons.lang3.builder.ToStringStyle) -> toString
    java.lang.String toString(java.lang.Object,org.apache.commons.lang3.builder.ToStringStyle,boolean) -> toString
    java.lang.String toString(java.lang.Object,org.apache.commons.lang3.builder.ToStringStyle,boolean,boolean) -> toString
    java.lang.String toString(java.lang.Object,org.apache.commons.lang3.builder.ToStringStyle,boolean,boolean,java.lang.Class) -> toString
    java.lang.String toStringExclude(java.lang.Object,java.util.Collection) -> toStringExclude
    java.lang.String[] toNoNullStringArray(java.util.Collection) -> toNoNullStringArray
    java.lang.String[] toNoNullStringArray(java.lang.Object[]) -> toNoNullStringArray
    java.lang.String toStringExclude(java.lang.Object,java.lang.String[]) -> toStringExclude
    boolean accept(java.lang.reflect.Field) -> accept
    void appendFieldsIn(java.lang.Class) -> appendFieldsIn
    java.lang.String[] getExcludeFieldNames() -> getExcludeFieldNames
    java.lang.Class getUpToClass() -> getUpToClass
    java.lang.Object getValue(java.lang.reflect.Field) -> getValue
    boolean isAppendStatics() -> isAppendStatics
    boolean isAppendTransients() -> isAppendTransients
    org.apache.commons.lang3.builder.ReflectionToStringBuilder reflectionAppendArray(java.lang.Object) -> reflectionAppendArray
    void setAppendStatics(boolean) -> setAppendStatics
    void setAppendTransients(boolean) -> setAppendTransients
    org.apache.commons.lang3.builder.ReflectionToStringBuilder setExcludeFieldNames(java.lang.String[]) -> setExcludeFieldNames
    void setUpToClass(java.lang.Class) -> setUpToClass
    java.lang.String toString() -> toString
org.apache.commons.lang3.builder.StandardToStringStyle -> org.apache.commons.lang3.builder.StandardToStringStyle:
    long serialVersionUID -> serialVersionUID
    boolean isUseClassName() -> isUseClassName
    void setUseClassName(boolean) -> setUseClassName
    boolean isUseShortClassName() -> isUseShortClassName
    void setUseShortClassName(boolean) -> setUseShortClassName
    boolean isUseIdentityHashCode() -> isUseIdentityHashCode
    void setUseIdentityHashCode(boolean) -> setUseIdentityHashCode
    boolean isUseFieldNames() -> isUseFieldNames
    void setUseFieldNames(boolean) -> setUseFieldNames
    boolean isDefaultFullDetail() -> isDefaultFullDetail
    void setDefaultFullDetail(boolean) -> setDefaultFullDetail
    boolean isArrayContentDetail() -> isArrayContentDetail
    void setArrayContentDetail(boolean) -> setArrayContentDetail
    java.lang.String getArrayStart() -> getArrayStart
    void setArrayStart(java.lang.String) -> setArrayStart
    java.lang.String getArrayEnd() -> getArrayEnd
    void setArrayEnd(java.lang.String) -> setArrayEnd
    java.lang.String getArraySeparator() -> getArraySeparator
    void setArraySeparator(java.lang.String) -> setArraySeparator
    java.lang.String getContentStart() -> getContentStart
    void setContentStart(java.lang.String) -> setContentStart
    java.lang.String getContentEnd() -> getContentEnd
    void setContentEnd(java.lang.String) -> setContentEnd
    java.lang.String getFieldNameValueSeparator() -> getFieldNameValueSeparator
    void setFieldNameValueSeparator(java.lang.String) -> setFieldNameValueSeparator
    java.lang.String getFieldSeparator() -> getFieldSeparator
    void setFieldSeparator(java.lang.String) -> setFieldSeparator
    boolean isFieldSeparatorAtStart() -> isFieldSeparatorAtStart
    void setFieldSeparatorAtStart(boolean) -> setFieldSeparatorAtStart
    boolean isFieldSeparatorAtEnd() -> isFieldSeparatorAtEnd
    void setFieldSeparatorAtEnd(boolean) -> setFieldSeparatorAtEnd
    java.lang.String getNullText() -> getNullText
    void setNullText(java.lang.String) -> setNullText
    java.lang.String getSizeStartText() -> getSizeStartText
    void setSizeStartText(java.lang.String) -> setSizeStartText
    java.lang.String getSizeEndText() -> getSizeEndText
    void setSizeEndText(java.lang.String) -> setSizeEndText
    java.lang.String getSummaryObjectStartText() -> getSummaryObjectStartText
    void setSummaryObjectStartText(java.lang.String) -> setSummaryObjectStartText
    java.lang.String getSummaryObjectEndText() -> getSummaryObjectEndText
    void setSummaryObjectEndText(java.lang.String) -> setSummaryObjectEndText
org.apache.commons.lang3.builder.ToStringBuilder -> org.apache.commons.lang3.builder.ToStringBuilder:
    org.apache.commons.lang3.builder.ToStringStyle defaultStyle -> defaultStyle
    java.lang.StringBuffer buffer -> buffer
    java.lang.Object object -> object
    org.apache.commons.lang3.builder.ToStringStyle style -> style
    org.apache.commons.lang3.builder.ToStringStyle getDefaultStyle() -> getDefaultStyle
    void setDefaultStyle(org.apache.commons.lang3.builder.ToStringStyle) -> setDefaultStyle
    java.lang.String reflectionToString(java.lang.Object) -> reflectionToString
    java.lang.String reflectionToString(java.lang.Object,org.apache.commons.lang3.builder.ToStringStyle) -> reflectionToString
    java.lang.String reflectionToString(java.lang.Object,org.apache.commons.lang3.builder.ToStringStyle,boolean) -> reflectionToString
    java.lang.String reflectionToString(java.lang.Object,org.apache.commons.lang3.builder.ToStringStyle,boolean,java.lang.Class) -> reflectionToString
    org.apache.commons.lang3.builder.ToStringBuilder append(boolean) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(boolean[]) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(byte) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(byte[]) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(char) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(char[]) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(double) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(double[]) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(float) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(float[]) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(int) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(int[]) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(long) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(long[]) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.Object) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.Object[]) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(short) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(short[]) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,boolean) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,boolean[]) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,boolean[],boolean) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,byte) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,byte[]) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,byte[],boolean) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,char) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,char[]) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,char[],boolean) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,double) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,double[]) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,double[],boolean) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,float) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,float[]) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,float[],boolean) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,int) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,int[]) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,int[],boolean) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,long) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,long[]) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,long[],boolean) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,java.lang.Object) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,java.lang.Object,boolean) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,java.lang.Object[]) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,java.lang.Object[],boolean) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,short) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,short[]) -> append
    org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,short[],boolean) -> append
    org.apache.commons.lang3.builder.ToStringBuilder appendAsObjectToString(java.lang.Object) -> appendAsObjectToString
    org.apache.commons.lang3.builder.ToStringBuilder appendSuper(java.lang.String) -> appendSuper
    org.apache.commons.lang3.builder.ToStringBuilder appendToString(java.lang.String) -> appendToString
    java.lang.Object getObject() -> getObject
    java.lang.StringBuffer getStringBuffer() -> getStringBuffer
    org.apache.commons.lang3.builder.ToStringStyle getStyle() -> getStyle
    java.lang.String toString() -> toString
    java.lang.String build() -> build
    java.lang.Object build() -> build
org.apache.commons.lang3.builder.ToStringStyle -> org.apache.commons.lang3.builder.ToStringStyle:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.lang3.builder.ToStringStyle DEFAULT_STYLE -> DEFAULT_STYLE
    org.apache.commons.lang3.builder.ToStringStyle MULTI_LINE_STYLE -> MULTI_LINE_STYLE
    org.apache.commons.lang3.builder.ToStringStyle NO_FIELD_NAMES_STYLE -> NO_FIELD_NAMES_STYLE
    org.apache.commons.lang3.builder.ToStringStyle SHORT_PREFIX_STYLE -> SHORT_PREFIX_STYLE
    org.apache.commons.lang3.builder.ToStringStyle SIMPLE_STYLE -> SIMPLE_STYLE
    java.lang.ThreadLocal REGISTRY -> REGISTRY
    boolean useFieldNames -> useFieldNames
    boolean useClassName -> useClassName
    boolean useShortClassName -> useShortClassName
    boolean useIdentityHashCode -> useIdentityHashCode
    java.lang.String contentStart -> contentStart
    java.lang.String contentEnd -> contentEnd
    java.lang.String fieldNameValueSeparator -> fieldNameValueSeparator
    boolean fieldSeparatorAtStart -> fieldSeparatorAtStart
    boolean fieldSeparatorAtEnd -> fieldSeparatorAtEnd
    java.lang.String fieldSeparator -> fieldSeparator
    java.lang.String arrayStart -> arrayStart
    java.lang.String arraySeparator -> arraySeparator
    boolean arrayContentDetail -> arrayContentDetail
    java.lang.String arrayEnd -> arrayEnd
    boolean defaultFullDetail -> defaultFullDetail
    java.lang.String nullText -> nullText
    java.lang.String sizeStartText -> sizeStartText
    java.lang.String sizeEndText -> sizeEndText
    java.lang.String summaryObjectStartText -> summaryObjectStartText
    java.lang.String summaryObjectEndText -> summaryObjectEndText
    java.util.Map getRegistry() -> getRegistry
    boolean isRegistered(java.lang.Object) -> isRegistered
    void register(java.lang.Object) -> register
    void unregister(java.lang.Object) -> unregister
    void appendSuper(java.lang.StringBuffer,java.lang.String) -> appendSuper
    void appendToString(java.lang.StringBuffer,java.lang.String) -> appendToString
    void appendStart(java.lang.StringBuffer,java.lang.Object) -> appendStart
    void appendEnd(java.lang.StringBuffer,java.lang.Object) -> appendEnd
    void removeLastFieldSeparator(java.lang.StringBuffer) -> removeLastFieldSeparator
    void append(java.lang.StringBuffer,java.lang.String,java.lang.Object,java.lang.Boolean) -> append
    void appendInternal(java.lang.StringBuffer,java.lang.String,java.lang.Object,boolean) -> appendInternal
    void appendCyclicObject(java.lang.StringBuffer,java.lang.String,java.lang.Object) -> appendCyclicObject
    void appendDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object) -> appendDetail
    void appendDetail(java.lang.StringBuffer,java.lang.String,java.util.Collection) -> appendDetail
    void appendDetail(java.lang.StringBuffer,java.lang.String,java.util.Map) -> appendDetail
    void appendSummary(java.lang.StringBuffer,java.lang.String,java.lang.Object) -> appendSummary
    void append(java.lang.StringBuffer,java.lang.String,long) -> append
    void appendDetail(java.lang.StringBuffer,java.lang.String,long) -> appendDetail
    void append(java.lang.StringBuffer,java.lang.String,int) -> append
    void appendDetail(java.lang.StringBuffer,java.lang.String,int) -> appendDetail
    void append(java.lang.StringBuffer,java.lang.String,short) -> append
    void appendDetail(java.lang.StringBuffer,java.lang.String,short) -> appendDetail
    void append(java.lang.StringBuffer,java.lang.String,byte) -> append
    void appendDetail(java.lang.StringBuffer,java.lang.String,byte) -> appendDetail
    void append(java.lang.StringBuffer,java.lang.String,char) -> append
    void appendDetail(java.lang.StringBuffer,java.lang.String,char) -> appendDetail
    void append(java.lang.StringBuffer,java.lang.String,double) -> append
    void appendDetail(java.lang.StringBuffer,java.lang.String,double) -> appendDetail
    void append(java.lang.StringBuffer,java.lang.String,float) -> append
    void appendDetail(java.lang.StringBuffer,java.lang.String,float) -> appendDetail
    void append(java.lang.StringBuffer,java.lang.String,boolean) -> append
    void appendDetail(java.lang.StringBuffer,java.lang.String,boolean) -> appendDetail
    void append(java.lang.StringBuffer,java.lang.String,java.lang.Object[],java.lang.Boolean) -> append
    void appendDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object[]) -> appendDetail
    void reflectionAppendArrayDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object) -> reflectionAppendArrayDetail
    void appendSummary(java.lang.StringBuffer,java.lang.String,java.lang.Object[]) -> appendSummary
    void append(java.lang.StringBuffer,java.lang.String,long[],java.lang.Boolean) -> append
    void appendDetail(java.lang.StringBuffer,java.lang.String,long[]) -> appendDetail
    void appendSummary(java.lang.StringBuffer,java.lang.String,long[]) -> appendSummary
    void append(java.lang.StringBuffer,java.lang.String,int[],java.lang.Boolean) -> append
    void appendDetail(java.lang.StringBuffer,java.lang.String,int[]) -> appendDetail
    void appendSummary(java.lang.StringBuffer,java.lang.String,int[]) -> appendSummary
    void append(java.lang.StringBuffer,java.lang.String,short[],java.lang.Boolean) -> append
    void appendDetail(java.lang.StringBuffer,java.lang.String,short[]) -> appendDetail
    void appendSummary(java.lang.StringBuffer,java.lang.String,short[]) -> appendSummary
    void append(java.lang.StringBuffer,java.lang.String,byte[],java.lang.Boolean) -> append
    void appendDetail(java.lang.StringBuffer,java.lang.String,byte[]) -> appendDetail
    void appendSummary(java.lang.StringBuffer,java.lang.String,byte[]) -> appendSummary
    void append(java.lang.StringBuffer,java.lang.String,char[],java.lang.Boolean) -> append
    void appendDetail(java.lang.StringBuffer,java.lang.String,char[]) -> appendDetail
    void appendSummary(java.lang.StringBuffer,java.lang.String,char[]) -> appendSummary
    void append(java.lang.StringBuffer,java.lang.String,double[],java.lang.Boolean) -> append
    void appendDetail(java.lang.StringBuffer,java.lang.String,double[]) -> appendDetail
    void appendSummary(java.lang.StringBuffer,java.lang.String,double[]) -> appendSummary
    void append(java.lang.StringBuffer,java.lang.String,float[],java.lang.Boolean) -> append
    void appendDetail(java.lang.StringBuffer,java.lang.String,float[]) -> appendDetail
    void appendSummary(java.lang.StringBuffer,java.lang.String,float[]) -> appendSummary
    void append(java.lang.StringBuffer,java.lang.String,boolean[],java.lang.Boolean) -> append
    void appendDetail(java.lang.StringBuffer,java.lang.String,boolean[]) -> appendDetail
    void appendSummary(java.lang.StringBuffer,java.lang.String,boolean[]) -> appendSummary
    void appendClassName(java.lang.StringBuffer,java.lang.Object) -> appendClassName
    void appendIdentityHashCode(java.lang.StringBuffer,java.lang.Object) -> appendIdentityHashCode
    void appendContentStart(java.lang.StringBuffer) -> appendContentStart
    void appendContentEnd(java.lang.StringBuffer) -> appendContentEnd
    void appendNullText(java.lang.StringBuffer,java.lang.String) -> appendNullText
    void appendFieldSeparator(java.lang.StringBuffer) -> appendFieldSeparator
    void appendFieldStart(java.lang.StringBuffer,java.lang.String) -> appendFieldStart
    void appendFieldEnd(java.lang.StringBuffer,java.lang.String) -> appendFieldEnd
    void appendSummarySize(java.lang.StringBuffer,java.lang.String,int) -> appendSummarySize
    boolean isFullDetail(java.lang.Boolean) -> isFullDetail
    java.lang.String getShortClassName(java.lang.Class) -> getShortClassName
    boolean isUseClassName() -> isUseClassName
    void setUseClassName(boolean) -> setUseClassName
    boolean isUseShortClassName() -> isUseShortClassName
    void setUseShortClassName(boolean) -> setUseShortClassName
    boolean isUseIdentityHashCode() -> isUseIdentityHashCode
    void setUseIdentityHashCode(boolean) -> setUseIdentityHashCode
    boolean isUseFieldNames() -> isUseFieldNames
    void setUseFieldNames(boolean) -> setUseFieldNames
    boolean isDefaultFullDetail() -> isDefaultFullDetail
    void setDefaultFullDetail(boolean) -> setDefaultFullDetail
    boolean isArrayContentDetail() -> isArrayContentDetail
    void setArrayContentDetail(boolean) -> setArrayContentDetail
    java.lang.String getArrayStart() -> getArrayStart
    void setArrayStart(java.lang.String) -> setArrayStart
    java.lang.String getArrayEnd() -> getArrayEnd
    void setArrayEnd(java.lang.String) -> setArrayEnd
    java.lang.String getArraySeparator() -> getArraySeparator
    void setArraySeparator(java.lang.String) -> setArraySeparator
    java.lang.String getContentStart() -> getContentStart
    void setContentStart(java.lang.String) -> setContentStart
    java.lang.String getContentEnd() -> getContentEnd
    void setContentEnd(java.lang.String) -> setContentEnd
    java.lang.String getFieldNameValueSeparator() -> getFieldNameValueSeparator
    void setFieldNameValueSeparator(java.lang.String) -> setFieldNameValueSeparator
    java.lang.String getFieldSeparator() -> getFieldSeparator
    void setFieldSeparator(java.lang.String) -> setFieldSeparator
    boolean isFieldSeparatorAtStart() -> isFieldSeparatorAtStart
    void setFieldSeparatorAtStart(boolean) -> setFieldSeparatorAtStart
    boolean isFieldSeparatorAtEnd() -> isFieldSeparatorAtEnd
    void setFieldSeparatorAtEnd(boolean) -> setFieldSeparatorAtEnd
    java.lang.String getNullText() -> getNullText
    void setNullText(java.lang.String) -> setNullText
    java.lang.String getSizeStartText() -> getSizeStartText
    void setSizeStartText(java.lang.String) -> setSizeStartText
    java.lang.String getSizeEndText() -> getSizeEndText
    void setSizeEndText(java.lang.String) -> setSizeEndText
    java.lang.String getSummaryObjectStartText() -> getSummaryObjectStartText
    void setSummaryObjectStartText(java.lang.String) -> setSummaryObjectStartText
    java.lang.String getSummaryObjectEndText() -> getSummaryObjectEndText
    void setSummaryObjectEndText(java.lang.String) -> setSummaryObjectEndText
org.apache.commons.lang3.builder.ToStringStyle$DefaultToStringStyle -> org.apache.commons.lang3.builder.ToStringStyle$DefaultToStringStyle:
    long serialVersionUID -> serialVersionUID
    java.lang.Object readResolve() -> readResolve
org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle -> org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle:
    long serialVersionUID -> serialVersionUID
    java.lang.Object readResolve() -> readResolve
org.apache.commons.lang3.builder.ToStringStyle$NoFieldNameToStringStyle -> org.apache.commons.lang3.builder.ToStringStyle$NoFieldNameToStringStyle:
    long serialVersionUID -> serialVersionUID
    java.lang.Object readResolve() -> readResolve
org.apache.commons.lang3.builder.ToStringStyle$ShortPrefixToStringStyle -> org.apache.commons.lang3.builder.ToStringStyle$ShortPrefixToStringStyle:
    long serialVersionUID -> serialVersionUID
    java.lang.Object readResolve() -> readResolve
org.apache.commons.lang3.builder.ToStringStyle$SimpleToStringStyle -> org.apache.commons.lang3.builder.ToStringStyle$SimpleToStringStyle:
    long serialVersionUID -> serialVersionUID
    java.lang.Object readResolve() -> readResolve
org.apache.commons.lang3.concurrent.AtomicInitializer -> org.apache.commons.lang3.concurrent.AtomicInitializer:
    java.util.concurrent.atomic.AtomicReference reference -> reference
    java.lang.Object get() -> get
    java.lang.Object initialize() -> initialize
org.apache.commons.lang3.concurrent.AtomicSafeInitializer -> org.apache.commons.lang3.concurrent.AtomicSafeInitializer:
    java.util.concurrent.atomic.AtomicReference factory -> factory
    java.util.concurrent.atomic.AtomicReference reference -> reference
    java.lang.Object get() -> get
    java.lang.Object initialize() -> initialize
org.apache.commons.lang3.concurrent.BackgroundInitializer -> org.apache.commons.lang3.concurrent.BackgroundInitializer:
    java.util.concurrent.ExecutorService externalExecutor -> externalExecutor
    java.util.concurrent.ExecutorService executor -> executor
    java.util.concurrent.Future future -> future
    java.util.concurrent.ExecutorService getExternalExecutor() -> getExternalExecutor
    boolean isStarted() -> isStarted
    void setExternalExecutor(java.util.concurrent.ExecutorService) -> setExternalExecutor
    boolean start() -> start
    java.lang.Object get() -> get
    java.util.concurrent.Future getFuture() -> getFuture
    java.util.concurrent.ExecutorService getActiveExecutor() -> getActiveExecutor
    int getTaskCount() -> getTaskCount
    java.lang.Object initialize() -> initialize
    java.util.concurrent.Callable createTask(java.util.concurrent.ExecutorService) -> createTask
    java.util.concurrent.ExecutorService createExecutor() -> createExecutor
org.apache.commons.lang3.concurrent.BackgroundInitializer$InitializationTask -> org.apache.commons.lang3.concurrent.BackgroundInitializer$InitializationTask:
    java.util.concurrent.ExecutorService execFinally -> execFinally
    org.apache.commons.lang3.concurrent.BackgroundInitializer this$0 -> this$0
    java.lang.Object call() -> call
org.apache.commons.lang3.concurrent.BasicThreadFactory -> org.apache.commons.lang3.concurrent.BasicThreadFactory:
    java.util.concurrent.atomic.AtomicLong threadCounter -> threadCounter
    java.util.concurrent.ThreadFactory wrappedFactory -> wrappedFactory
    java.lang.Thread$UncaughtExceptionHandler uncaughtExceptionHandler -> uncaughtExceptionHandler
    java.lang.String namingPattern -> namingPattern
    java.lang.Integer priority -> priority
    java.lang.Boolean daemonFlag -> daemonFlag
    java.util.concurrent.ThreadFactory getWrappedFactory() -> getWrappedFactory
    java.lang.String getNamingPattern() -> getNamingPattern
    java.lang.Boolean getDaemonFlag() -> getDaemonFlag
    java.lang.Integer getPriority() -> getPriority
    java.lang.Thread$UncaughtExceptionHandler getUncaughtExceptionHandler() -> getUncaughtExceptionHandler
    long getThreadCount() -> getThreadCount
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
    void initializeThread(java.lang.Thread) -> initializeThread
org.apache.commons.lang3.concurrent.BasicThreadFactory$1 -> org.apache.commons.lang3.concurrent.BasicThreadFactory$1:
org.apache.commons.lang3.concurrent.BasicThreadFactory$Builder -> org.apache.commons.lang3.concurrent.BasicThreadFactory$Builder:
    java.util.concurrent.ThreadFactory wrappedFactory -> wrappedFactory
    java.lang.Thread$UncaughtExceptionHandler exceptionHandler -> exceptionHandler
    java.lang.String namingPattern -> namingPattern
    java.lang.Integer priority -> priority
    java.lang.Boolean daemonFlag -> daemonFlag
    org.apache.commons.lang3.concurrent.BasicThreadFactory$Builder wrappedFactory(java.util.concurrent.ThreadFactory) -> wrappedFactory
    org.apache.commons.lang3.concurrent.BasicThreadFactory$Builder namingPattern(java.lang.String) -> namingPattern
    org.apache.commons.lang3.concurrent.BasicThreadFactory$Builder daemon(boolean) -> daemon
    org.apache.commons.lang3.concurrent.BasicThreadFactory$Builder priority(int) -> priority
    org.apache.commons.lang3.concurrent.BasicThreadFactory$Builder uncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler) -> uncaughtExceptionHandler
    void reset() -> reset
    org.apache.commons.lang3.concurrent.BasicThreadFactory build() -> build
    java.lang.Object build() -> build
    java.util.concurrent.ThreadFactory access$000(org.apache.commons.lang3.concurrent.BasicThreadFactory$Builder) -> access$000
    java.lang.String access$100(org.apache.commons.lang3.concurrent.BasicThreadFactory$Builder) -> access$100
    java.lang.Integer access$200(org.apache.commons.lang3.concurrent.BasicThreadFactory$Builder) -> access$200
    java.lang.Boolean access$300(org.apache.commons.lang3.concurrent.BasicThreadFactory$Builder) -> access$300
    java.lang.Thread$UncaughtExceptionHandler access$400(org.apache.commons.lang3.concurrent.BasicThreadFactory$Builder) -> access$400
org.apache.commons.lang3.concurrent.CallableBackgroundInitializer -> org.apache.commons.lang3.concurrent.CallableBackgroundInitializer:
    java.util.concurrent.Callable callable -> callable
    java.lang.Object initialize() -> initialize
    void checkCallable(java.util.concurrent.Callable) -> checkCallable
org.apache.commons.lang3.concurrent.ConcurrentException -> org.apache.commons.lang3.concurrent.ConcurrentException:
    long serialVersionUID -> serialVersionUID
org.apache.commons.lang3.concurrent.ConcurrentInitializer -> org.apache.commons.lang3.concurrent.ConcurrentInitializer:
    java.lang.Object get() -> get
org.apache.commons.lang3.concurrent.ConcurrentRuntimeException -> org.apache.commons.lang3.concurrent.ConcurrentRuntimeException:
    long serialVersionUID -> serialVersionUID
org.apache.commons.lang3.concurrent.ConcurrentUtils -> org.apache.commons.lang3.concurrent.ConcurrentUtils:
    org.apache.commons.lang3.concurrent.ConcurrentException extractCause(java.util.concurrent.ExecutionException) -> extractCause
    org.apache.commons.lang3.concurrent.ConcurrentRuntimeException extractCauseUnchecked(java.util.concurrent.ExecutionException) -> extractCauseUnchecked
    void handleCause(java.util.concurrent.ExecutionException) -> handleCause
    void handleCauseUnchecked(java.util.concurrent.ExecutionException) -> handleCauseUnchecked
    java.lang.Throwable checkedException(java.lang.Throwable) -> checkedException
    void throwCause(java.util.concurrent.ExecutionException) -> throwCause
    java.lang.Object initialize(org.apache.commons.lang3.concurrent.ConcurrentInitializer) -> initialize
    java.lang.Object initializeUnchecked(org.apache.commons.lang3.concurrent.ConcurrentInitializer) -> initializeUnchecked
    java.lang.Object putIfAbsent(java.util.concurrent.ConcurrentMap,java.lang.Object,java.lang.Object) -> putIfAbsent
    java.lang.Object createIfAbsent(java.util.concurrent.ConcurrentMap,java.lang.Object,org.apache.commons.lang3.concurrent.ConcurrentInitializer) -> createIfAbsent
    java.lang.Object createIfAbsentUnchecked(java.util.concurrent.ConcurrentMap,java.lang.Object,org.apache.commons.lang3.concurrent.ConcurrentInitializer) -> createIfAbsentUnchecked
    java.util.concurrent.Future constantFuture(java.lang.Object) -> constantFuture
org.apache.commons.lang3.concurrent.ConcurrentUtils$ConstantFuture -> org.apache.commons.lang3.concurrent.ConcurrentUtils$ConstantFuture:
    java.lang.Object value -> value
    boolean isDone() -> isDone
    java.lang.Object get() -> get
    java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    boolean isCancelled() -> isCancelled
    boolean cancel(boolean) -> cancel
org.apache.commons.lang3.concurrent.ConstantInitializer -> org.apache.commons.lang3.concurrent.ConstantInitializer:
    java.lang.String FMT_TO_STRING -> FMT_TO_STRING
    java.lang.Object object -> object
    java.lang.Object getObject() -> getObject
    java.lang.Object get() -> get
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
org.apache.commons.lang3.concurrent.LazyInitializer -> org.apache.commons.lang3.concurrent.LazyInitializer:
    java.lang.Object object -> object
    java.lang.Object get() -> get
    java.lang.Object initialize() -> initialize
org.apache.commons.lang3.concurrent.MultiBackgroundInitializer -> org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:
    java.util.Map childInitializers -> childInitializers
    void addInitializer(java.lang.String,org.apache.commons.lang3.concurrent.BackgroundInitializer) -> addInitializer
    int getTaskCount() -> getTaskCount
    org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$MultiBackgroundInitializerResults initialize() -> initialize
    java.lang.Object initialize() -> initialize
org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$1 -> org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$1:
org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$MultiBackgroundInitializerResults -> org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$MultiBackgroundInitializerResults:
    java.util.Map initializers -> initializers
    java.util.Map resultObjects -> resultObjects
    java.util.Map exceptions -> exceptions
    org.apache.commons.lang3.concurrent.BackgroundInitializer getInitializer(java.lang.String) -> getInitializer
    java.lang.Object getResultObject(java.lang.String) -> getResultObject
    boolean isException(java.lang.String) -> isException
    org.apache.commons.lang3.concurrent.ConcurrentException getException(java.lang.String) -> getException
    java.util.Set initializerNames() -> initializerNames
    boolean isSuccessful() -> isSuccessful
    org.apache.commons.lang3.concurrent.BackgroundInitializer checkName(java.lang.String) -> checkName
org.apache.commons.lang3.concurrent.TimedSemaphore -> org.apache.commons.lang3.concurrent.TimedSemaphore:
    int NO_LIMIT -> NO_LIMIT
    int THREAD_POOL_SIZE -> THREAD_POOL_SIZE
    java.util.concurrent.ScheduledExecutorService executorService -> executorService
    long period -> period
    java.util.concurrent.TimeUnit unit -> unit
    boolean ownExecutor -> ownExecutor
    java.util.concurrent.ScheduledFuture task -> task
    long totalAcquireCount -> totalAcquireCount
    long periodCount -> periodCount
    int limit -> limit
    int acquireCount -> acquireCount
    int lastCallsPerPeriod -> lastCallsPerPeriod
    boolean shutdown -> shutdown
    int getLimit() -> getLimit
    void setLimit(int) -> setLimit
    void shutdown() -> shutdown
    boolean isShutdown() -> isShutdown
    void acquire() -> acquire
    int getLastAcquiresPerPeriod() -> getLastAcquiresPerPeriod
    int getAcquireCount() -> getAcquireCount
    int getAvailablePermits() -> getAvailablePermits
    double getAverageCallsPerPeriod() -> getAverageCallsPerPeriod
    long getPeriod() -> getPeriod
    java.util.concurrent.TimeUnit getUnit() -> getUnit
    java.util.concurrent.ScheduledExecutorService getExecutorService() -> getExecutorService
    java.util.concurrent.ScheduledFuture startTimer() -> startTimer
    void endOfPeriod() -> endOfPeriod
org.apache.commons.lang3.concurrent.TimedSemaphore$1 -> org.apache.commons.lang3.concurrent.TimedSemaphore$1:
    org.apache.commons.lang3.concurrent.TimedSemaphore this$0 -> this$0
    void run() -> run
org.apache.commons.lang3.event.EventListenerSupport -> org.apache.commons.lang3.event.EventListenerSupport:
    long serialVersionUID -> serialVersionUID
    java.util.List listeners -> listeners
    java.lang.Object proxy -> proxy
    java.lang.Object[] prototypeArray -> prototypeArray
    org.apache.commons.lang3.event.EventListenerSupport create(java.lang.Class) -> create
    java.lang.Object fire() -> fire
    void addListener(java.lang.Object) -> addListener
    int getListenerCount() -> getListenerCount
    void removeListener(java.lang.Object) -> removeListener
    java.lang.Object[] getListeners() -> getListeners
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    void initializeTransientFields(java.lang.Class,java.lang.ClassLoader) -> initializeTransientFields
    void createProxy(java.lang.Class,java.lang.ClassLoader) -> createProxy
    java.lang.reflect.InvocationHandler createInvocationHandler() -> createInvocationHandler
    java.util.List access$000(org.apache.commons.lang3.event.EventListenerSupport) -> access$000
org.apache.commons.lang3.event.EventListenerSupport$ProxyInvocationHandler -> org.apache.commons.lang3.event.EventListenerSupport$ProxyInvocationHandler:
    org.apache.commons.lang3.event.EventListenerSupport this$0 -> this$0
    java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
org.apache.commons.lang3.event.EventUtils -> org.apache.commons.lang3.event.EventUtils:
    void addEventListener(java.lang.Object,java.lang.Class,java.lang.Object) -> addEventListener
    void bindEventsToMethod(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Class,java.lang.String[]) -> bindEventsToMethod
org.apache.commons.lang3.event.EventUtils$EventBindingInvocationHandler -> org.apache.commons.lang3.event.EventUtils$EventBindingInvocationHandler:
    java.lang.Object target -> target
    java.lang.String methodName -> methodName
    java.util.Set eventTypes -> eventTypes
    java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
    boolean hasMatchingParametersMethod(java.lang.reflect.Method) -> hasMatchingParametersMethod
org.apache.commons.lang3.exception.CloneFailedException -> org.apache.commons.lang3.exception.CloneFailedException:
    long serialVersionUID -> serialVersionUID
org.apache.commons.lang3.exception.ContextedException -> org.apache.commons.lang3.exception.ContextedException:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.lang3.exception.ExceptionContext exceptionContext -> exceptionContext
    org.apache.commons.lang3.exception.ContextedException addContextValue(java.lang.String,java.lang.Object) -> addContextValue
    org.apache.commons.lang3.exception.ContextedException setContextValue(java.lang.String,java.lang.Object) -> setContextValue
    java.util.List getContextValues(java.lang.String) -> getContextValues
    java.lang.Object getFirstContextValue(java.lang.String) -> getFirstContextValue
    java.util.List getContextEntries() -> getContextEntries
    java.util.Set getContextLabels() -> getContextLabels
    java.lang.String getMessage() -> getMessage
    java.lang.String getRawMessage() -> getRawMessage
    java.lang.String getFormattedExceptionMessage(java.lang.String) -> getFormattedExceptionMessage
    org.apache.commons.lang3.exception.ExceptionContext setContextValue(java.lang.String,java.lang.Object) -> setContextValue
    org.apache.commons.lang3.exception.ExceptionContext addContextValue(java.lang.String,java.lang.Object) -> addContextValue
org.apache.commons.lang3.exception.ContextedRuntimeException -> org.apache.commons.lang3.exception.ContextedRuntimeException:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.lang3.exception.ExceptionContext exceptionContext -> exceptionContext
    org.apache.commons.lang3.exception.ContextedRuntimeException addContextValue(java.lang.String,java.lang.Object) -> addContextValue
    org.apache.commons.lang3.exception.ContextedRuntimeException setContextValue(java.lang.String,java.lang.Object) -> setContextValue
    java.util.List getContextValues(java.lang.String) -> getContextValues
    java.lang.Object getFirstContextValue(java.lang.String) -> getFirstContextValue
    java.util.List getContextEntries() -> getContextEntries
    java.util.Set getContextLabels() -> getContextLabels
    java.lang.String getMessage() -> getMessage
    java.lang.String getRawMessage() -> getRawMessage
    java.lang.String getFormattedExceptionMessage(java.lang.String) -> getFormattedExceptionMessage
    org.apache.commons.lang3.exception.ExceptionContext setContextValue(java.lang.String,java.lang.Object) -> setContextValue
    org.apache.commons.lang3.exception.ExceptionContext addContextValue(java.lang.String,java.lang.Object) -> addContextValue
org.apache.commons.lang3.exception.DefaultExceptionContext -> org.apache.commons.lang3.exception.DefaultExceptionContext:
    long serialVersionUID -> serialVersionUID
    java.util.List contextValues -> contextValues
    org.apache.commons.lang3.exception.DefaultExceptionContext addContextValue(java.lang.String,java.lang.Object) -> addContextValue
    org.apache.commons.lang3.exception.DefaultExceptionContext setContextValue(java.lang.String,java.lang.Object) -> setContextValue
    java.util.List getContextValues(java.lang.String) -> getContextValues
    java.lang.Object getFirstContextValue(java.lang.String) -> getFirstContextValue
    java.util.Set getContextLabels() -> getContextLabels
    java.util.List getContextEntries() -> getContextEntries
    java.lang.String getFormattedExceptionMessage(java.lang.String) -> getFormattedExceptionMessage
    org.apache.commons.lang3.exception.ExceptionContext setContextValue(java.lang.String,java.lang.Object) -> setContextValue
    org.apache.commons.lang3.exception.ExceptionContext addContextValue(java.lang.String,java.lang.Object) -> addContextValue
org.apache.commons.lang3.exception.ExceptionContext -> org.apache.commons.lang3.exception.ExceptionContext:
    org.apache.commons.lang3.exception.ExceptionContext addContextValue(java.lang.String,java.lang.Object) -> addContextValue
    org.apache.commons.lang3.exception.ExceptionContext setContextValue(java.lang.String,java.lang.Object) -> setContextValue
    java.util.List getContextValues(java.lang.String) -> getContextValues
    java.lang.Object getFirstContextValue(java.lang.String) -> getFirstContextValue
    java.util.Set getContextLabels() -> getContextLabels
    java.util.List getContextEntries() -> getContextEntries
    java.lang.String getFormattedExceptionMessage(java.lang.String) -> getFormattedExceptionMessage
org.apache.commons.lang3.exception.ExceptionUtils -> org.apache.commons.lang3.exception.ExceptionUtils:
    java.lang.String WRAPPED_MARKER -> WRAPPED_MARKER
    java.lang.String[] CAUSE_METHOD_NAMES -> CAUSE_METHOD_NAMES
    java.lang.String[] getDefaultCauseMethodNames() -> getDefaultCauseMethodNames
    java.lang.Throwable getCause(java.lang.Throwable) -> getCause
    java.lang.Throwable getCause(java.lang.Throwable,java.lang.String[]) -> getCause
    java.lang.Throwable getRootCause(java.lang.Throwable) -> getRootCause
    java.lang.Throwable getCauseUsingMethodName(java.lang.Throwable,java.lang.String) -> getCauseUsingMethodName
    int getThrowableCount(java.lang.Throwable) -> getThrowableCount
    java.lang.Throwable[] getThrowables(java.lang.Throwable) -> getThrowables
    java.util.List getThrowableList(java.lang.Throwable) -> getThrowableList
    int indexOfThrowable(java.lang.Throwable,java.lang.Class) -> indexOfThrowable
    int indexOfThrowable(java.lang.Throwable,java.lang.Class,int) -> indexOfThrowable
    int indexOfType(java.lang.Throwable,java.lang.Class) -> indexOfType
    int indexOfType(java.lang.Throwable,java.lang.Class,int) -> indexOfType
    int indexOf(java.lang.Throwable,java.lang.Class,int,boolean) -> indexOf
    void printRootCauseStackTrace(java.lang.Throwable) -> printRootCauseStackTrace
    void printRootCauseStackTrace(java.lang.Throwable,java.io.PrintStream) -> printRootCauseStackTrace
    void printRootCauseStackTrace(java.lang.Throwable,java.io.PrintWriter) -> printRootCauseStackTrace
    java.lang.String[] getRootCauseStackTrace(java.lang.Throwable) -> getRootCauseStackTrace
    void removeCommonFrames(java.util.List,java.util.List) -> removeCommonFrames
    java.lang.String getStackTrace(java.lang.Throwable) -> getStackTrace
    java.lang.String[] getStackFrames(java.lang.Throwable) -> getStackFrames
    java.lang.String[] getStackFrames(java.lang.String) -> getStackFrames
    java.util.List getStackFrameList(java.lang.Throwable) -> getStackFrameList
    java.lang.String getMessage(java.lang.Throwable) -> getMessage
    java.lang.String getRootCauseMessage(java.lang.Throwable) -> getRootCauseMessage
org.apache.commons.lang3.math.Fraction -> org.apache.commons.lang3.math.Fraction:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.lang3.math.Fraction ZERO -> ZERO
    org.apache.commons.lang3.math.Fraction ONE -> ONE
    org.apache.commons.lang3.math.Fraction ONE_HALF -> ONE_HALF
    org.apache.commons.lang3.math.Fraction ONE_THIRD -> ONE_THIRD
    org.apache.commons.lang3.math.Fraction TWO_THIRDS -> TWO_THIRDS
    org.apache.commons.lang3.math.Fraction ONE_QUARTER -> ONE_QUARTER
    org.apache.commons.lang3.math.Fraction TWO_QUARTERS -> TWO_QUARTERS
    org.apache.commons.lang3.math.Fraction THREE_QUARTERS -> THREE_QUARTERS
    org.apache.commons.lang3.math.Fraction ONE_FIFTH -> ONE_FIFTH
    org.apache.commons.lang3.math.Fraction TWO_FIFTHS -> TWO_FIFTHS
    org.apache.commons.lang3.math.Fraction THREE_FIFTHS -> THREE_FIFTHS
    org.apache.commons.lang3.math.Fraction FOUR_FIFTHS -> FOUR_FIFTHS
    int numerator -> numerator
    int denominator -> denominator
    int hashCode -> hashCode
    java.lang.String toString -> toString
    java.lang.String toProperString -> toProperString
    org.apache.commons.lang3.math.Fraction getFraction(int,int) -> getFraction
    org.apache.commons.lang3.math.Fraction getFraction(int,int,int) -> getFraction
    org.apache.commons.lang3.math.Fraction getReducedFraction(int,int) -> getReducedFraction
    org.apache.commons.lang3.math.Fraction getFraction(double) -> getFraction
    org.apache.commons.lang3.math.Fraction getFraction(java.lang.String) -> getFraction
    int getNumerator() -> getNumerator
    int getDenominator() -> getDenominator
    int getProperNumerator() -> getProperNumerator
    int getProperWhole() -> getProperWhole
    int intValue() -> intValue
    long longValue() -> longValue
    float floatValue() -> floatValue
    double doubleValue() -> doubleValue
    org.apache.commons.lang3.math.Fraction reduce() -> reduce
    org.apache.commons.lang3.math.Fraction invert() -> invert
    org.apache.commons.lang3.math.Fraction negate() -> negate
    org.apache.commons.lang3.math.Fraction abs() -> abs
    org.apache.commons.lang3.math.Fraction pow(int) -> pow
    int greatestCommonDivisor(int,int) -> greatestCommonDivisor
    int mulAndCheck(int,int) -> mulAndCheck
    int mulPosAndCheck(int,int) -> mulPosAndCheck
    int addAndCheck(int,int) -> addAndCheck
    int subAndCheck(int,int) -> subAndCheck
    org.apache.commons.lang3.math.Fraction add(org.apache.commons.lang3.math.Fraction) -> add
    org.apache.commons.lang3.math.Fraction subtract(org.apache.commons.lang3.math.Fraction) -> subtract
    org.apache.commons.lang3.math.Fraction addSub(org.apache.commons.lang3.math.Fraction,boolean) -> addSub
    org.apache.commons.lang3.math.Fraction multiplyBy(org.apache.commons.lang3.math.Fraction) -> multiplyBy
    org.apache.commons.lang3.math.Fraction divideBy(org.apache.commons.lang3.math.Fraction) -> divideBy
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    int compareTo(org.apache.commons.lang3.math.Fraction) -> compareTo
    java.lang.String toString() -> toString
    java.lang.String toProperString() -> toProperString
    int compareTo(java.lang.Object) -> compareTo
org.apache.commons.lang3.math.IEEE754rUtils -> org.apache.commons.lang3.math.IEEE754rUtils:
    double min(double[]) -> min
    float min(float[]) -> min
    double min(double,double,double) -> min
    double min(double,double) -> min
    float min(float,float,float) -> min
    float min(float,float) -> min
    double max(double[]) -> max
    float max(float[]) -> max
    double max(double,double,double) -> max
    double max(double,double) -> max
    float max(float,float,float) -> max
    float max(float,float) -> max
org.apache.commons.lang3.math.NumberUtils -> org.apache.commons.lang3.math.NumberUtils:
    java.lang.Long LONG_ZERO -> LONG_ZERO
    java.lang.Long LONG_ONE -> LONG_ONE
    java.lang.Long LONG_MINUS_ONE -> LONG_MINUS_ONE
    java.lang.Integer INTEGER_ZERO -> INTEGER_ZERO
    java.lang.Integer INTEGER_ONE -> INTEGER_ONE
    java.lang.Integer INTEGER_MINUS_ONE -> INTEGER_MINUS_ONE
    java.lang.Short SHORT_ZERO -> SHORT_ZERO
    java.lang.Short SHORT_ONE -> SHORT_ONE
    java.lang.Short SHORT_MINUS_ONE -> SHORT_MINUS_ONE
    java.lang.Byte BYTE_ZERO -> BYTE_ZERO
    java.lang.Byte BYTE_ONE -> BYTE_ONE
    java.lang.Byte BYTE_MINUS_ONE -> BYTE_MINUS_ONE
    java.lang.Double DOUBLE_ZERO -> DOUBLE_ZERO
    java.lang.Double DOUBLE_ONE -> DOUBLE_ONE
    java.lang.Double DOUBLE_MINUS_ONE -> DOUBLE_MINUS_ONE
    java.lang.Float FLOAT_ZERO -> FLOAT_ZERO
    java.lang.Float FLOAT_ONE -> FLOAT_ONE
    java.lang.Float FLOAT_MINUS_ONE -> FLOAT_MINUS_ONE
    int toInt(java.lang.String) -> toInt
    int toInt(java.lang.String,int) -> toInt
    long toLong(java.lang.String) -> toLong
    long toLong(java.lang.String,long) -> toLong
    float toFloat(java.lang.String) -> toFloat
    float toFloat(java.lang.String,float) -> toFloat
    double toDouble(java.lang.String) -> toDouble
    double toDouble(java.lang.String,double) -> toDouble
    byte toByte(java.lang.String) -> toByte
    byte toByte(java.lang.String,byte) -> toByte
    short toShort(java.lang.String) -> toShort
    short toShort(java.lang.String,short) -> toShort
    java.lang.Number createNumber(java.lang.String) -> createNumber
    boolean isAllZeros(java.lang.String) -> isAllZeros
    java.lang.Float createFloat(java.lang.String) -> createFloat
    java.lang.Double createDouble(java.lang.String) -> createDouble
    java.lang.Integer createInteger(java.lang.String) -> createInteger
    java.lang.Long createLong(java.lang.String) -> createLong
    java.math.BigInteger createBigInteger(java.lang.String) -> createBigInteger
    java.math.BigDecimal createBigDecimal(java.lang.String) -> createBigDecimal
    long min(long[]) -> min
    int min(int[]) -> min
    short min(short[]) -> min
    byte min(byte[]) -> min
    double min(double[]) -> min
    float min(float[]) -> min
    long max(long[]) -> max
    int max(int[]) -> max
    short max(short[]) -> max
    byte max(byte[]) -> max
    double max(double[]) -> max
    float max(float[]) -> max
    void validateArray(java.lang.Object) -> validateArray
    long min(long,long,long) -> min
    int min(int,int,int) -> min
    short min(short,short,short) -> min
    byte min(byte,byte,byte) -> min
    double min(double,double,double) -> min
    float min(float,float,float) -> min
    long max(long,long,long) -> max
    int max(int,int,int) -> max
    short max(short,short,short) -> max
    byte max(byte,byte,byte) -> max
    double max(double,double,double) -> max
    float max(float,float,float) -> max
    boolean isDigits(java.lang.String) -> isDigits
    boolean isNumber(java.lang.String) -> isNumber
org.apache.commons.lang3.mutable.Mutable -> org.apache.commons.lang3.mutable.Mutable:
    java.lang.Object getValue() -> getValue
    void setValue(java.lang.Object) -> setValue
org.apache.commons.lang3.mutable.MutableBoolean -> org.apache.commons.lang3.mutable.MutableBoolean:
    long serialVersionUID -> serialVersionUID
    boolean value -> value
    java.lang.Boolean getValue() -> getValue
    void setValue(boolean) -> setValue
    void setFalse() -> setFalse
    void setTrue() -> setTrue
    void setValue(java.lang.Boolean) -> setValue
    boolean isTrue() -> isTrue
    boolean isFalse() -> isFalse
    boolean booleanValue() -> booleanValue
    java.lang.Boolean toBoolean() -> toBoolean
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    int compareTo(org.apache.commons.lang3.mutable.MutableBoolean) -> compareTo
    java.lang.String toString() -> toString
    void setValue(java.lang.Object) -> setValue
    java.lang.Object getValue() -> getValue
    int compareTo(java.lang.Object) -> compareTo
org.apache.commons.lang3.mutable.MutableByte -> org.apache.commons.lang3.mutable.MutableByte:
    long serialVersionUID -> serialVersionUID
    byte value -> value
    java.lang.Byte getValue() -> getValue
    void setValue(byte) -> setValue
    void setValue(java.lang.Number) -> setValue
    void increment() -> increment
    void decrement() -> decrement
    void add(byte) -> add
    void add(java.lang.Number) -> add
    void subtract(byte) -> subtract
    void subtract(java.lang.Number) -> subtract
    byte byteValue() -> byteValue
    int intValue() -> intValue
    long longValue() -> longValue
    float floatValue() -> floatValue
    double doubleValue() -> doubleValue
    java.lang.Byte toByte() -> toByte
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    int compareTo(org.apache.commons.lang3.mutable.MutableByte) -> compareTo
    java.lang.String toString() -> toString
    int compareTo(java.lang.Object) -> compareTo
    void setValue(java.lang.Object) -> setValue
    java.lang.Object getValue() -> getValue
org.apache.commons.lang3.mutable.MutableDouble -> org.apache.commons.lang3.mutable.MutableDouble:
    long serialVersionUID -> serialVersionUID
    double value -> value
    java.lang.Double getValue() -> getValue
    void setValue(double) -> setValue
    void setValue(java.lang.Number) -> setValue
    boolean isNaN() -> isNaN
    boolean isInfinite() -> isInfinite
    void increment() -> increment
    void decrement() -> decrement
    void add(double) -> add
    void add(java.lang.Number) -> add
    void subtract(double) -> subtract
    void subtract(java.lang.Number) -> subtract
    int intValue() -> intValue
    long longValue() -> longValue
    float floatValue() -> floatValue
    double doubleValue() -> doubleValue
    java.lang.Double toDouble() -> toDouble
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    int compareTo(org.apache.commons.lang3.mutable.MutableDouble) -> compareTo
    java.lang.String toString() -> toString
    int compareTo(java.lang.Object) -> compareTo
    void setValue(java.lang.Object) -> setValue
    java.lang.Object getValue() -> getValue
org.apache.commons.lang3.mutable.MutableFloat -> org.apache.commons.lang3.mutable.MutableFloat:
    long serialVersionUID -> serialVersionUID
    float value -> value
    java.lang.Float getValue() -> getValue
    void setValue(float) -> setValue
    void setValue(java.lang.Number) -> setValue
    boolean isNaN() -> isNaN
    boolean isInfinite() -> isInfinite
    void increment() -> increment
    void decrement() -> decrement
    void add(float) -> add
    void add(java.lang.Number) -> add
    void subtract(float) -> subtract
    void subtract(java.lang.Number) -> subtract
    int intValue() -> intValue
    long longValue() -> longValue
    float floatValue() -> floatValue
    double doubleValue() -> doubleValue
    java.lang.Float toFloat() -> toFloat
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    int compareTo(org.apache.commons.lang3.mutable.MutableFloat) -> compareTo
    java.lang.String toString() -> toString
    int compareTo(java.lang.Object) -> compareTo
    void setValue(java.lang.Object) -> setValue
    java.lang.Object getValue() -> getValue
org.apache.commons.lang3.mutable.MutableInt -> org.apache.commons.lang3.mutable.MutableInt:
    long serialVersionUID -> serialVersionUID
    int value -> value
    java.lang.Integer getValue() -> getValue
    void setValue(int) -> setValue
    void setValue(java.lang.Number) -> setValue
    void increment() -> increment
    void decrement() -> decrement
    void add(int) -> add
    void add(java.lang.Number) -> add
    void subtract(int) -> subtract
    void subtract(java.lang.Number) -> subtract
    int intValue() -> intValue
    long longValue() -> longValue
    float floatValue() -> floatValue
    double doubleValue() -> doubleValue
    java.lang.Integer toInteger() -> toInteger
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    int compareTo(org.apache.commons.lang3.mutable.MutableInt) -> compareTo
    java.lang.String toString() -> toString
    int compareTo(java.lang.Object) -> compareTo
    void setValue(java.lang.Object) -> setValue
    java.lang.Object getValue() -> getValue
org.apache.commons.lang3.mutable.MutableLong -> org.apache.commons.lang3.mutable.MutableLong:
    long serialVersionUID -> serialVersionUID
    long value -> value
    java.lang.Long getValue() -> getValue
    void setValue(long) -> setValue
    void setValue(java.lang.Number) -> setValue
    void increment() -> increment
    void decrement() -> decrement
    void add(long) -> add
    void add(java.lang.Number) -> add
    void subtract(long) -> subtract
    void subtract(java.lang.Number) -> subtract
    int intValue() -> intValue
    long longValue() -> longValue
    float floatValue() -> floatValue
    double doubleValue() -> doubleValue
    java.lang.Long toLong() -> toLong
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    int compareTo(org.apache.commons.lang3.mutable.MutableLong) -> compareTo
    java.lang.String toString() -> toString
    int compareTo(java.lang.Object) -> compareTo
    void setValue(java.lang.Object) -> setValue
    java.lang.Object getValue() -> getValue
org.apache.commons.lang3.mutable.MutableObject -> org.apache.commons.lang3.mutable.MutableObject:
    long serialVersionUID -> serialVersionUID
    java.lang.Object value -> value
    java.lang.Object getValue() -> getValue
    void setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
org.apache.commons.lang3.mutable.MutableShort -> org.apache.commons.lang3.mutable.MutableShort:
    long serialVersionUID -> serialVersionUID
    short value -> value
    java.lang.Short getValue() -> getValue
    void setValue(short) -> setValue
    void setValue(java.lang.Number) -> setValue
    void increment() -> increment
    void decrement() -> decrement
    void add(short) -> add
    void add(java.lang.Number) -> add
    void subtract(short) -> subtract
    void subtract(java.lang.Number) -> subtract
    short shortValue() -> shortValue
    int intValue() -> intValue
    long longValue() -> longValue
    float floatValue() -> floatValue
    double doubleValue() -> doubleValue
    java.lang.Short toShort() -> toShort
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    int compareTo(org.apache.commons.lang3.mutable.MutableShort) -> compareTo
    java.lang.String toString() -> toString
    int compareTo(java.lang.Object) -> compareTo
    void setValue(java.lang.Object) -> setValue
    java.lang.Object getValue() -> getValue
org.apache.commons.lang3.reflect.ConstructorUtils -> org.apache.commons.lang3.reflect.ConstructorUtils:
    java.lang.Object invokeConstructor(java.lang.Class,java.lang.Object[]) -> invokeConstructor
    java.lang.Object invokeConstructor(java.lang.Class,java.lang.Object[],java.lang.Class[]) -> invokeConstructor
    java.lang.Object invokeExactConstructor(java.lang.Class,java.lang.Object[]) -> invokeExactConstructor
    java.lang.Object invokeExactConstructor(java.lang.Class,java.lang.Object[],java.lang.Class[]) -> invokeExactConstructor
    java.lang.reflect.Constructor getAccessibleConstructor(java.lang.Class,java.lang.Class[]) -> getAccessibleConstructor
    java.lang.reflect.Constructor getAccessibleConstructor(java.lang.reflect.Constructor) -> getAccessibleConstructor
    java.lang.reflect.Constructor getMatchingAccessibleConstructor(java.lang.Class,java.lang.Class[]) -> getMatchingAccessibleConstructor
    boolean isAccessible(java.lang.Class) -> isAccessible
org.apache.commons.lang3.reflect.FieldUtils -> org.apache.commons.lang3.reflect.FieldUtils:
    java.lang.reflect.Field getField(java.lang.Class,java.lang.String) -> getField
    java.lang.reflect.Field getField(java.lang.Class,java.lang.String,boolean) -> getField
    java.lang.reflect.Field getDeclaredField(java.lang.Class,java.lang.String) -> getDeclaredField
    java.lang.reflect.Field getDeclaredField(java.lang.Class,java.lang.String,boolean) -> getDeclaredField
    java.lang.reflect.Field[] getAllFields(java.lang.Class) -> getAllFields
    java.util.List getAllFieldsList(java.lang.Class) -> getAllFieldsList
    java.lang.Object readStaticField(java.lang.reflect.Field) -> readStaticField
    java.lang.Object readStaticField(java.lang.reflect.Field,boolean) -> readStaticField
    java.lang.Object readStaticField(java.lang.Class,java.lang.String) -> readStaticField
    java.lang.Object readStaticField(java.lang.Class,java.lang.String,boolean) -> readStaticField
    java.lang.Object readDeclaredStaticField(java.lang.Class,java.lang.String) -> readDeclaredStaticField
    java.lang.Object readDeclaredStaticField(java.lang.Class,java.lang.String,boolean) -> readDeclaredStaticField
    java.lang.Object readField(java.lang.reflect.Field,java.lang.Object) -> readField
    java.lang.Object readField(java.lang.reflect.Field,java.lang.Object,boolean) -> readField
    java.lang.Object readField(java.lang.Object,java.lang.String) -> readField
    java.lang.Object readField(java.lang.Object,java.lang.String,boolean) -> readField
    java.lang.Object readDeclaredField(java.lang.Object,java.lang.String) -> readDeclaredField
    java.lang.Object readDeclaredField(java.lang.Object,java.lang.String,boolean) -> readDeclaredField
    void writeStaticField(java.lang.reflect.Field,java.lang.Object) -> writeStaticField
    void writeStaticField(java.lang.reflect.Field,java.lang.Object,boolean) -> writeStaticField
    void writeStaticField(java.lang.Class,java.lang.String,java.lang.Object) -> writeStaticField
    void writeStaticField(java.lang.Class,java.lang.String,java.lang.Object,boolean) -> writeStaticField
    void writeDeclaredStaticField(java.lang.Class,java.lang.String,java.lang.Object) -> writeDeclaredStaticField
    void writeDeclaredStaticField(java.lang.Class,java.lang.String,java.lang.Object,boolean) -> writeDeclaredStaticField
    void writeField(java.lang.reflect.Field,java.lang.Object,java.lang.Object) -> writeField
    void writeField(java.lang.reflect.Field,java.lang.Object,java.lang.Object,boolean) -> writeField
    void removeFinalModifier(java.lang.reflect.Field) -> removeFinalModifier
    void removeFinalModifier(java.lang.reflect.Field,boolean) -> removeFinalModifier
    void writeField(java.lang.Object,java.lang.String,java.lang.Object) -> writeField
    void writeField(java.lang.Object,java.lang.String,java.lang.Object,boolean) -> writeField
    void writeDeclaredField(java.lang.Object,java.lang.String,java.lang.Object) -> writeDeclaredField
    void writeDeclaredField(java.lang.Object,java.lang.String,java.lang.Object,boolean) -> writeDeclaredField
org.apache.commons.lang3.reflect.InheritanceUtils -> org.apache.commons.lang3.reflect.InheritanceUtils:
    int distance(java.lang.Class,java.lang.Class) -> distance
org.apache.commons.lang3.reflect.MemberUtils -> org.apache.commons.lang3.reflect.MemberUtils:
    int ACCESS_TEST -> ACCESS_TEST
    java.lang.Class[] ORDERED_PRIMITIVE_TYPES -> ORDERED_PRIMITIVE_TYPES
    boolean setAccessibleWorkaround(java.lang.reflect.AccessibleObject) -> setAccessibleWorkaround
    boolean isPackageAccess(int) -> isPackageAccess
    boolean isAccessible(java.lang.reflect.Member) -> isAccessible
    int compareParameterTypes(java.lang.Class[],java.lang.Class[],java.lang.Class[]) -> compareParameterTypes
    float getTotalTransformationCost(java.lang.Class[],java.lang.Class[]) -> getTotalTransformationCost
    float getObjectTransformationCost(java.lang.Class,java.lang.Class) -> getObjectTransformationCost
    float getPrimitivePromotionCost(java.lang.Class,java.lang.Class) -> getPrimitivePromotionCost
org.apache.commons.lang3.reflect.MethodUtils -> org.apache.commons.lang3.reflect.MethodUtils:
    java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object[]) -> invokeMethod
    java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object[],java.lang.Class[]) -> invokeMethod
    java.lang.Object invokeExactMethod(java.lang.Object,java.lang.String,java.lang.Object[]) -> invokeExactMethod
    java.lang.Object invokeExactMethod(java.lang.Object,java.lang.String,java.lang.Object[],java.lang.Class[]) -> invokeExactMethod
    java.lang.Object invokeExactStaticMethod(java.lang.Class,java.lang.String,java.lang.Object[],java.lang.Class[]) -> invokeExactStaticMethod
    java.lang.Object invokeStaticMethod(java.lang.Class,java.lang.String,java.lang.Object[]) -> invokeStaticMethod
    java.lang.Object invokeStaticMethod(java.lang.Class,java.lang.String,java.lang.Object[],java.lang.Class[]) -> invokeStaticMethod
    java.lang.Object invokeExactStaticMethod(java.lang.Class,java.lang.String,java.lang.Object[]) -> invokeExactStaticMethod
    java.lang.reflect.Method getAccessibleMethod(java.lang.Class,java.lang.String,java.lang.Class[]) -> getAccessibleMethod
    java.lang.reflect.Method getAccessibleMethod(java.lang.reflect.Method) -> getAccessibleMethod
    java.lang.reflect.Method getAccessibleMethodFromSuperclass(java.lang.Class,java.lang.String,java.lang.Class[]) -> getAccessibleMethodFromSuperclass
    java.lang.reflect.Method getAccessibleMethodFromInterfaceNest(java.lang.Class,java.lang.String,java.lang.Class[]) -> getAccessibleMethodFromInterfaceNest
    java.lang.reflect.Method getMatchingAccessibleMethod(java.lang.Class,java.lang.String,java.lang.Class[]) -> getMatchingAccessibleMethod
    java.util.Set getOverrideHierarchy(java.lang.reflect.Method,org.apache.commons.lang3.ClassUtils$Interfaces) -> getOverrideHierarchy
org.apache.commons.lang3.reflect.TypeLiteral -> org.apache.commons.lang3.reflect.TypeLiteral:
    java.lang.reflect.TypeVariable T -> T
    java.lang.reflect.Type value -> value
    java.lang.String toString -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.reflect.Type getType() -> getType
org.apache.commons.lang3.reflect.TypeUtils -> org.apache.commons.lang3.reflect.TypeUtils:
    java.lang.reflect.WildcardType WILDCARD_ALL -> WILDCARD_ALL
    boolean isAssignable(java.lang.reflect.Type,java.lang.reflect.Type) -> isAssignable
    boolean isAssignable(java.lang.reflect.Type,java.lang.reflect.Type,java.util.Map) -> isAssignable
    boolean isAssignable(java.lang.reflect.Type,java.lang.Class) -> isAssignable
    boolean isAssignable(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map) -> isAssignable
    java.lang.reflect.Type unrollVariableAssignments(java.lang.reflect.TypeVariable,java.util.Map) -> unrollVariableAssignments
    boolean isAssignable(java.lang.reflect.Type,java.lang.reflect.GenericArrayType,java.util.Map) -> isAssignable
    boolean isAssignable(java.lang.reflect.Type,java.lang.reflect.WildcardType,java.util.Map) -> isAssignable
    boolean isAssignable(java.lang.reflect.Type,java.lang.reflect.TypeVariable,java.util.Map) -> isAssignable
    java.lang.reflect.Type substituteTypeVariables(java.lang.reflect.Type,java.util.Map) -> substituteTypeVariables
    java.util.Map getTypeArguments(java.lang.reflect.ParameterizedType) -> getTypeArguments
    java.util.Map getTypeArguments(java.lang.reflect.Type,java.lang.Class) -> getTypeArguments
    java.util.Map getTypeArguments(java.lang.reflect.Type,java.lang.Class,java.util.Map) -> getTypeArguments
    java.util.Map getTypeArguments(java.lang.reflect.ParameterizedType,java.lang.Class,java.util.Map) -> getTypeArguments
    java.util.Map getTypeArguments(java.lang.Class,java.lang.Class,java.util.Map) -> getTypeArguments
    java.util.Map determineTypeArguments(java.lang.Class,java.lang.reflect.ParameterizedType) -> determineTypeArguments
    void mapTypeVariablesToArguments(java.lang.Class,java.lang.reflect.ParameterizedType,java.util.Map) -> mapTypeVariablesToArguments
    java.lang.reflect.Type getClosestParentType(java.lang.Class,java.lang.Class) -> getClosestParentType
    boolean isInstance(java.lang.Object,java.lang.reflect.Type) -> isInstance
    java.lang.reflect.Type[] normalizeUpperBounds(java.lang.reflect.Type[]) -> normalizeUpperBounds
    java.lang.reflect.Type[] getImplicitBounds(java.lang.reflect.TypeVariable) -> getImplicitBounds
    java.lang.reflect.Type[] getImplicitUpperBounds(java.lang.reflect.WildcardType) -> getImplicitUpperBounds
    java.lang.reflect.Type[] getImplicitLowerBounds(java.lang.reflect.WildcardType) -> getImplicitLowerBounds
    boolean typesSatisfyVariables(java.util.Map) -> typesSatisfyVariables
    java.lang.Class getRawType(java.lang.reflect.ParameterizedType) -> getRawType
    java.lang.Class getRawType(java.lang.reflect.Type,java.lang.reflect.Type) -> getRawType
    boolean isArrayType(java.lang.reflect.Type) -> isArrayType
    java.lang.reflect.Type getArrayComponentType(java.lang.reflect.Type) -> getArrayComponentType
    java.lang.reflect.Type unrollVariables(java.util.Map,java.lang.reflect.Type) -> unrollVariables
    java.lang.reflect.Type[] unrollBounds(java.util.Map,java.lang.reflect.Type[]) -> unrollBounds
    boolean containsTypeVariables(java.lang.reflect.Type) -> containsTypeVariables
    java.lang.reflect.ParameterizedType parameterize(java.lang.Class,java.lang.reflect.Type[]) -> parameterize
    java.lang.reflect.ParameterizedType parameterize(java.lang.Class,java.util.Map) -> parameterize
    java.lang.reflect.ParameterizedType parameterizeWithOwner(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type[]) -> parameterizeWithOwner
    java.lang.reflect.ParameterizedType parameterizeWithOwner(java.lang.reflect.Type,java.lang.Class,java.util.Map) -> parameterizeWithOwner
    java.lang.reflect.Type[] extractTypeArgumentsFrom(java.util.Map,java.lang.reflect.TypeVariable[]) -> extractTypeArgumentsFrom
    org.apache.commons.lang3.reflect.TypeUtils$WildcardTypeBuilder wildcardType() -> wildcardType
    java.lang.reflect.GenericArrayType genericArrayType(java.lang.reflect.Type) -> genericArrayType
    boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> equals
    boolean equals(java.lang.reflect.ParameterizedType,java.lang.reflect.Type) -> equals
    boolean equals(java.lang.reflect.GenericArrayType,java.lang.reflect.Type) -> equals
    boolean equals(java.lang.reflect.WildcardType,java.lang.reflect.Type) -> equals
    boolean equals(java.lang.reflect.Type[],java.lang.reflect.Type[]) -> equals
    java.lang.String toString(java.lang.reflect.Type) -> toString
    java.lang.String toLongString(java.lang.reflect.TypeVariable) -> toLongString
    org.apache.commons.lang3.reflect.Typed wrap(java.lang.reflect.Type) -> wrap
    org.apache.commons.lang3.reflect.Typed wrap(java.lang.Class) -> wrap
    java.lang.String classToString(java.lang.Class) -> classToString
    java.lang.String typeVariableToString(java.lang.reflect.TypeVariable) -> typeVariableToString
    java.lang.String parameterizedTypeToString(java.lang.reflect.ParameterizedType) -> parameterizedTypeToString
    java.lang.String wildcardTypeToString(java.lang.reflect.WildcardType) -> wildcardTypeToString
    java.lang.String genericArrayTypeToString(java.lang.reflect.GenericArrayType) -> genericArrayTypeToString
    java.lang.StringBuilder appendAllTo(java.lang.StringBuilder,java.lang.String,java.lang.reflect.Type[]) -> appendAllTo
    boolean access$100(java.lang.reflect.GenericArrayType,java.lang.reflect.Type) -> access$100
    boolean access$200(java.lang.reflect.ParameterizedType,java.lang.reflect.Type) -> access$200
    boolean access$300(java.lang.reflect.WildcardType,java.lang.reflect.Type) -> access$300
org.apache.commons.lang3.reflect.TypeUtils$1 -> org.apache.commons.lang3.reflect.TypeUtils$1:
    java.lang.reflect.Type val$type -> val$type
    java.lang.reflect.Type getType() -> getType
org.apache.commons.lang3.reflect.TypeUtils$GenericArrayTypeImpl -> org.apache.commons.lang3.reflect.TypeUtils$GenericArrayTypeImpl:
    java.lang.reflect.Type componentType -> componentType
    java.lang.reflect.Type getGenericComponentType() -> getGenericComponentType
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.apache.commons.lang3.reflect.TypeUtils$ParameterizedTypeImpl -> org.apache.commons.lang3.reflect.TypeUtils$ParameterizedTypeImpl:
    java.lang.Class raw -> raw
    java.lang.reflect.Type useOwner -> useOwner
    java.lang.reflect.Type[] typeArguments -> typeArguments
    java.lang.reflect.Type getRawType() -> getRawType
    java.lang.reflect.Type getOwnerType() -> getOwnerType
    java.lang.reflect.Type[] getActualTypeArguments() -> getActualTypeArguments
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.apache.commons.lang3.reflect.TypeUtils$WildcardTypeBuilder -> org.apache.commons.lang3.reflect.TypeUtils$WildcardTypeBuilder:
    java.lang.reflect.Type[] upperBounds -> upperBounds
    java.lang.reflect.Type[] lowerBounds -> lowerBounds
    org.apache.commons.lang3.reflect.TypeUtils$WildcardTypeBuilder withUpperBounds(java.lang.reflect.Type[]) -> withUpperBounds
    org.apache.commons.lang3.reflect.TypeUtils$WildcardTypeBuilder withLowerBounds(java.lang.reflect.Type[]) -> withLowerBounds
    java.lang.reflect.WildcardType build() -> build
    java.lang.Object build() -> build
org.apache.commons.lang3.reflect.TypeUtils$WildcardTypeImpl -> org.apache.commons.lang3.reflect.TypeUtils$WildcardTypeImpl:
    java.lang.reflect.Type[] EMPTY_BOUNDS -> EMPTY_BOUNDS
    java.lang.reflect.Type[] upperBounds -> upperBounds
    java.lang.reflect.Type[] lowerBounds -> lowerBounds
    java.lang.reflect.Type[] getUpperBounds() -> getUpperBounds
    java.lang.reflect.Type[] getLowerBounds() -> getLowerBounds
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.apache.commons.lang3.reflect.Typed -> org.apache.commons.lang3.reflect.Typed:
    java.lang.reflect.Type getType() -> getType
org.apache.commons.lang3.text.CompositeFormat -> org.apache.commons.lang3.text.CompositeFormat:
    long serialVersionUID -> serialVersionUID
    java.text.Format parser -> parser
    java.text.Format formatter -> formatter
    java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition) -> format
    java.lang.Object parseObject(java.lang.String,java.text.ParsePosition) -> parseObject
    java.text.Format getParser() -> getParser
    java.text.Format getFormatter() -> getFormatter
    java.lang.String reformat(java.lang.String) -> reformat
org.apache.commons.lang3.text.ExtendedMessageFormat -> org.apache.commons.lang3.text.ExtendedMessageFormat:
    long serialVersionUID -> serialVersionUID
    int HASH_SEED -> HASH_SEED
    java.lang.String DUMMY_PATTERN -> DUMMY_PATTERN
    java.lang.String ESCAPED_QUOTE -> ESCAPED_QUOTE
    char START_FMT -> START_FMT
    char END_FE -> END_FE
    char START_FE -> START_FE
    char QUOTE -> QUOTE
    java.lang.String toPattern -> toPattern
    java.util.Map registry -> registry
    java.lang.String toPattern() -> toPattern
    void applyPattern(java.lang.String) -> applyPattern
    void setFormat(int,java.text.Format) -> setFormat
    void setFormatByArgumentIndex(int,java.text.Format) -> setFormatByArgumentIndex
    void setFormats(java.text.Format[]) -> setFormats
    void setFormatsByArgumentIndex(java.text.Format[]) -> setFormatsByArgumentIndex
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.text.Format getFormat(java.lang.String) -> getFormat
    int readArgumentIndex(java.lang.String,java.text.ParsePosition) -> readArgumentIndex
    java.lang.String parseFormatDescription(java.lang.String,java.text.ParsePosition) -> parseFormatDescription
    java.lang.String insertFormats(java.lang.String,java.util.ArrayList) -> insertFormats
    void seekNonWs(java.lang.String,java.text.ParsePosition) -> seekNonWs
    java.text.ParsePosition next(java.text.ParsePosition) -> next
    java.lang.StringBuilder appendQuotedString(java.lang.String,java.text.ParsePosition,java.lang.StringBuilder,boolean) -> appendQuotedString
    void getQuotedString(java.lang.String,java.text.ParsePosition,boolean) -> getQuotedString
    boolean containsElements(java.util.Collection) -> containsElements
org.apache.commons.lang3.text.FormatFactory -> org.apache.commons.lang3.text.FormatFactory:
    java.text.Format getFormat(java.lang.String,java.lang.String,java.util.Locale) -> getFormat
org.apache.commons.lang3.text.FormattableUtils -> org.apache.commons.lang3.text.FormattableUtils:
    java.lang.String SIMPLEST_FORMAT -> SIMPLEST_FORMAT
    java.lang.String toString(java.util.Formattable) -> toString
    java.util.Formatter append(java.lang.CharSequence,java.util.Formatter,int,int,int) -> append
    java.util.Formatter append(java.lang.CharSequence,java.util.Formatter,int,int,int,char) -> append
    java.util.Formatter append(java.lang.CharSequence,java.util.Formatter,int,int,int,java.lang.CharSequence) -> append
    java.util.Formatter append(java.lang.CharSequence,java.util.Formatter,int,int,int,char,java.lang.CharSequence) -> append
org.apache.commons.lang3.text.StrBuilder -> org.apache.commons.lang3.text.StrBuilder:
    int CAPACITY -> CAPACITY
    long serialVersionUID -> serialVersionUID
    char[] buffer -> buffer
    int size -> size
    java.lang.String newLine -> newLine
    java.lang.String nullText -> nullText
    java.lang.String getNewLineText() -> getNewLineText
    org.apache.commons.lang3.text.StrBuilder setNewLineText(java.lang.String) -> setNewLineText
    java.lang.String getNullText() -> getNullText
    org.apache.commons.lang3.text.StrBuilder setNullText(java.lang.String) -> setNullText
    int length() -> length
    org.apache.commons.lang3.text.StrBuilder setLength(int) -> setLength
    int capacity() -> capacity
    org.apache.commons.lang3.text.StrBuilder ensureCapacity(int) -> ensureCapacity
    org.apache.commons.lang3.text.StrBuilder minimizeCapacity() -> minimizeCapacity
    int size() -> size
    boolean isEmpty() -> isEmpty
    org.apache.commons.lang3.text.StrBuilder clear() -> clear
    char charAt(int) -> charAt
    org.apache.commons.lang3.text.StrBuilder setCharAt(int,char) -> setCharAt
    org.apache.commons.lang3.text.StrBuilder deleteCharAt(int) -> deleteCharAt
    char[] toCharArray() -> toCharArray
    char[] toCharArray(int,int) -> toCharArray
    char[] getChars(char[]) -> getChars
    void getChars(int,int,char[],int) -> getChars
    org.apache.commons.lang3.text.StrBuilder appendNewLine() -> appendNewLine
    org.apache.commons.lang3.text.StrBuilder appendNull() -> appendNull
    org.apache.commons.lang3.text.StrBuilder append(java.lang.Object) -> append
    org.apache.commons.lang3.text.StrBuilder append(java.lang.CharSequence) -> append
    org.apache.commons.lang3.text.StrBuilder append(java.lang.CharSequence,int,int) -> append
    org.apache.commons.lang3.text.StrBuilder append(java.lang.String) -> append
    org.apache.commons.lang3.text.StrBuilder append(java.lang.String,int,int) -> append
    org.apache.commons.lang3.text.StrBuilder append(java.lang.String,java.lang.Object[]) -> append
    org.apache.commons.lang3.text.StrBuilder append(java.lang.StringBuffer) -> append
    org.apache.commons.lang3.text.StrBuilder append(java.lang.StringBuffer,int,int) -> append
    org.apache.commons.lang3.text.StrBuilder append(java.lang.StringBuilder) -> append
    org.apache.commons.lang3.text.StrBuilder append(java.lang.StringBuilder,int,int) -> append
    org.apache.commons.lang3.text.StrBuilder append(org.apache.commons.lang3.text.StrBuilder) -> append
    org.apache.commons.lang3.text.StrBuilder append(org.apache.commons.lang3.text.StrBuilder,int,int) -> append
    org.apache.commons.lang3.text.StrBuilder append(char[]) -> append
    org.apache.commons.lang3.text.StrBuilder append(char[],int,int) -> append
    org.apache.commons.lang3.text.StrBuilder append(boolean) -> append
    org.apache.commons.lang3.text.StrBuilder append(char) -> append
    org.apache.commons.lang3.text.StrBuilder append(int) -> append
    org.apache.commons.lang3.text.StrBuilder append(long) -> append
    org.apache.commons.lang3.text.StrBuilder append(float) -> append
    org.apache.commons.lang3.text.StrBuilder append(double) -> append
    org.apache.commons.lang3.text.StrBuilder appendln(java.lang.Object) -> appendln
    org.apache.commons.lang3.text.StrBuilder appendln(java.lang.String) -> appendln
    org.apache.commons.lang3.text.StrBuilder appendln(java.lang.String,int,int) -> appendln
    org.apache.commons.lang3.text.StrBuilder appendln(java.lang.String,java.lang.Object[]) -> appendln
    org.apache.commons.lang3.text.StrBuilder appendln(java.lang.StringBuffer) -> appendln
    org.apache.commons.lang3.text.StrBuilder appendln(java.lang.StringBuilder) -> appendln
    org.apache.commons.lang3.text.StrBuilder appendln(java.lang.StringBuilder,int,int) -> appendln
    org.apache.commons.lang3.text.StrBuilder appendln(java.lang.StringBuffer,int,int) -> appendln
    org.apache.commons.lang3.text.StrBuilder appendln(org.apache.commons.lang3.text.StrBuilder) -> appendln
    org.apache.commons.lang3.text.StrBuilder appendln(org.apache.commons.lang3.text.StrBuilder,int,int) -> appendln
    org.apache.commons.lang3.text.StrBuilder appendln(char[]) -> appendln
    org.apache.commons.lang3.text.StrBuilder appendln(char[],int,int) -> appendln
    org.apache.commons.lang3.text.StrBuilder appendln(boolean) -> appendln
    org.apache.commons.lang3.text.StrBuilder appendln(char) -> appendln
    org.apache.commons.lang3.text.StrBuilder appendln(int) -> appendln
    org.apache.commons.lang3.text.StrBuilder appendln(long) -> appendln
    org.apache.commons.lang3.text.StrBuilder appendln(float) -> appendln
    org.apache.commons.lang3.text.StrBuilder appendln(double) -> appendln
    org.apache.commons.lang3.text.StrBuilder appendAll(java.lang.Object[]) -> appendAll
    org.apache.commons.lang3.text.StrBuilder appendAll(java.lang.Iterable) -> appendAll
    org.apache.commons.lang3.text.StrBuilder appendAll(java.util.Iterator) -> appendAll
    org.apache.commons.lang3.text.StrBuilder appendWithSeparators(java.lang.Object[],java.lang.String) -> appendWithSeparators
    org.apache.commons.lang3.text.StrBuilder appendWithSeparators(java.lang.Iterable,java.lang.String) -> appendWithSeparators
    org.apache.commons.lang3.text.StrBuilder appendWithSeparators(java.util.Iterator,java.lang.String) -> appendWithSeparators
    org.apache.commons.lang3.text.StrBuilder appendSeparator(java.lang.String) -> appendSeparator
    org.apache.commons.lang3.text.StrBuilder appendSeparator(java.lang.String,java.lang.String) -> appendSeparator
    org.apache.commons.lang3.text.StrBuilder appendSeparator(char) -> appendSeparator
    org.apache.commons.lang3.text.StrBuilder appendSeparator(char,char) -> appendSeparator
    org.apache.commons.lang3.text.StrBuilder appendSeparator(java.lang.String,int) -> appendSeparator
    org.apache.commons.lang3.text.StrBuilder appendSeparator(char,int) -> appendSeparator
    org.apache.commons.lang3.text.StrBuilder appendPadding(int,char) -> appendPadding
    org.apache.commons.lang3.text.StrBuilder appendFixedWidthPadLeft(java.lang.Object,int,char) -> appendFixedWidthPadLeft
    org.apache.commons.lang3.text.StrBuilder appendFixedWidthPadLeft(int,int,char) -> appendFixedWidthPadLeft
    org.apache.commons.lang3.text.StrBuilder appendFixedWidthPadRight(java.lang.Object,int,char) -> appendFixedWidthPadRight
    org.apache.commons.lang3.text.StrBuilder appendFixedWidthPadRight(int,int,char) -> appendFixedWidthPadRight
    org.apache.commons.lang3.text.StrBuilder insert(int,java.lang.Object) -> insert
    org.apache.commons.lang3.text.StrBuilder insert(int,java.lang.String) -> insert
    org.apache.commons.lang3.text.StrBuilder insert(int,char[]) -> insert
    org.apache.commons.lang3.text.StrBuilder insert(int,char[],int,int) -> insert
    org.apache.commons.lang3.text.StrBuilder insert(int,boolean) -> insert
    org.apache.commons.lang3.text.StrBuilder insert(int,char) -> insert
    org.apache.commons.lang3.text.StrBuilder insert(int,int) -> insert
    org.apache.commons.lang3.text.StrBuilder insert(int,long) -> insert
    org.apache.commons.lang3.text.StrBuilder insert(int,float) -> insert
    org.apache.commons.lang3.text.StrBuilder insert(int,double) -> insert
    void deleteImpl(int,int,int) -> deleteImpl
    org.apache.commons.lang3.text.StrBuilder delete(int,int) -> delete
    org.apache.commons.lang3.text.StrBuilder deleteAll(char) -> deleteAll
    org.apache.commons.lang3.text.StrBuilder deleteFirst(char) -> deleteFirst
    org.apache.commons.lang3.text.StrBuilder deleteAll(java.lang.String) -> deleteAll
    org.apache.commons.lang3.text.StrBuilder deleteFirst(java.lang.String) -> deleteFirst
    org.apache.commons.lang3.text.StrBuilder deleteAll(org.apache.commons.lang3.text.StrMatcher) -> deleteAll
    org.apache.commons.lang3.text.StrBuilder deleteFirst(org.apache.commons.lang3.text.StrMatcher) -> deleteFirst
    void replaceImpl(int,int,int,java.lang.String,int) -> replaceImpl
    org.apache.commons.lang3.text.StrBuilder replace(int,int,java.lang.String) -> replace
    org.apache.commons.lang3.text.StrBuilder replaceAll(char,char) -> replaceAll
    org.apache.commons.lang3.text.StrBuilder replaceFirst(char,char) -> replaceFirst
    org.apache.commons.lang3.text.StrBuilder replaceAll(java.lang.String,java.lang.String) -> replaceAll
    org.apache.commons.lang3.text.StrBuilder replaceFirst(java.lang.String,java.lang.String) -> replaceFirst
    org.apache.commons.lang3.text.StrBuilder replaceAll(org.apache.commons.lang3.text.StrMatcher,java.lang.String) -> replaceAll
    org.apache.commons.lang3.text.StrBuilder replaceFirst(org.apache.commons.lang3.text.StrMatcher,java.lang.String) -> replaceFirst
    org.apache.commons.lang3.text.StrBuilder replace(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int) -> replace
    org.apache.commons.lang3.text.StrBuilder replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int) -> replaceImpl
    org.apache.commons.lang3.text.StrBuilder reverse() -> reverse
    org.apache.commons.lang3.text.StrBuilder trim() -> trim
    boolean startsWith(java.lang.String) -> startsWith
    boolean endsWith(java.lang.String) -> endsWith
    java.lang.CharSequence subSequence(int,int) -> subSequence
    java.lang.String substring(int) -> substring
    java.lang.String substring(int,int) -> substring
    java.lang.String leftString(int) -> leftString
    java.lang.String rightString(int) -> rightString
    java.lang.String midString(int,int) -> midString
    boolean contains(char) -> contains
    boolean contains(java.lang.String) -> contains
    boolean contains(org.apache.commons.lang3.text.StrMatcher) -> contains
    int indexOf(char) -> indexOf
    int indexOf(char,int) -> indexOf
    int indexOf(java.lang.String) -> indexOf
    int indexOf(java.lang.String,int) -> indexOf
    int indexOf(org.apache.commons.lang3.text.StrMatcher) -> indexOf
    int indexOf(org.apache.commons.lang3.text.StrMatcher,int) -> indexOf
    int lastIndexOf(char) -> lastIndexOf
    int lastIndexOf(char,int) -> lastIndexOf
    int lastIndexOf(java.lang.String) -> lastIndexOf
    int lastIndexOf(java.lang.String,int) -> lastIndexOf
    int lastIndexOf(org.apache.commons.lang3.text.StrMatcher) -> lastIndexOf
    int lastIndexOf(org.apache.commons.lang3.text.StrMatcher,int) -> lastIndexOf
    org.apache.commons.lang3.text.StrTokenizer asTokenizer() -> asTokenizer
    java.io.Reader asReader() -> asReader
    java.io.Writer asWriter() -> asWriter
    boolean equalsIgnoreCase(org.apache.commons.lang3.text.StrBuilder) -> equalsIgnoreCase
    boolean equals(org.apache.commons.lang3.text.StrBuilder) -> equals
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.StringBuffer toStringBuffer() -> toStringBuffer
    java.lang.StringBuilder toStringBuilder() -> toStringBuilder
    java.lang.String build() -> build
    int validateRange(int,int) -> validateRange
    void validateIndex(int) -> validateIndex
    java.lang.Appendable append(char) -> append
    java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    java.lang.Appendable append(java.lang.CharSequence) -> append
    java.lang.Object build() -> build
org.apache.commons.lang3.text.StrBuilder$StrBuilderReader -> org.apache.commons.lang3.text.StrBuilder$StrBuilderReader:
    int pos -> pos
    int mark -> mark
    org.apache.commons.lang3.text.StrBuilder this$0 -> this$0
    void close() -> close
    int read() -> read
    int read(char[],int,int) -> read
    long skip(long) -> skip
    boolean ready() -> ready
    boolean markSupported() -> markSupported
    void mark(int) -> mark
    void reset() -> reset
org.apache.commons.lang3.text.StrBuilder$StrBuilderTokenizer -> org.apache.commons.lang3.text.StrBuilder$StrBuilderTokenizer:
    org.apache.commons.lang3.text.StrBuilder this$0 -> this$0
    java.util.List tokenize(char[],int,int) -> tokenize
    java.lang.String getContent() -> getContent
org.apache.commons.lang3.text.StrBuilder$StrBuilderWriter -> org.apache.commons.lang3.text.StrBuilder$StrBuilderWriter:
    org.apache.commons.lang3.text.StrBuilder this$0 -> this$0
    void close() -> close
    void flush() -> flush
    void write(int) -> write
    void write(char[]) -> write
    void write(char[],int,int) -> write
    void write(java.lang.String) -> write
    void write(java.lang.String,int,int) -> write
org.apache.commons.lang3.text.StrLookup -> org.apache.commons.lang3.text.StrLookup:
    org.apache.commons.lang3.text.StrLookup NONE_LOOKUP -> NONE_LOOKUP
    org.apache.commons.lang3.text.StrLookup SYSTEM_PROPERTIES_LOOKUP -> SYSTEM_PROPERTIES_LOOKUP
    org.apache.commons.lang3.text.StrLookup noneLookup() -> noneLookup
    org.apache.commons.lang3.text.StrLookup systemPropertiesLookup() -> systemPropertiesLookup
    org.apache.commons.lang3.text.StrLookup mapLookup(java.util.Map) -> mapLookup
    java.lang.String lookup(java.lang.String) -> lookup
org.apache.commons.lang3.text.StrLookup$MapStrLookup -> org.apache.commons.lang3.text.StrLookup$MapStrLookup:
    java.util.Map map -> map
    java.lang.String lookup(java.lang.String) -> lookup
org.apache.commons.lang3.text.StrMatcher -> org.apache.commons.lang3.text.StrMatcher:
    org.apache.commons.lang3.text.StrMatcher COMMA_MATCHER -> COMMA_MATCHER
    org.apache.commons.lang3.text.StrMatcher TAB_MATCHER -> TAB_MATCHER
    org.apache.commons.lang3.text.StrMatcher SPACE_MATCHER -> SPACE_MATCHER
    org.apache.commons.lang3.text.StrMatcher SPLIT_MATCHER -> SPLIT_MATCHER
    org.apache.commons.lang3.text.StrMatcher TRIM_MATCHER -> TRIM_MATCHER
    org.apache.commons.lang3.text.StrMatcher SINGLE_QUOTE_MATCHER -> SINGLE_QUOTE_MATCHER
    org.apache.commons.lang3.text.StrMatcher DOUBLE_QUOTE_MATCHER -> DOUBLE_QUOTE_MATCHER
    org.apache.commons.lang3.text.StrMatcher QUOTE_MATCHER -> QUOTE_MATCHER
    org.apache.commons.lang3.text.StrMatcher NONE_MATCHER -> NONE_MATCHER
    org.apache.commons.lang3.text.StrMatcher commaMatcher() -> commaMatcher
    org.apache.commons.lang3.text.StrMatcher tabMatcher() -> tabMatcher
    org.apache.commons.lang3.text.StrMatcher spaceMatcher() -> spaceMatcher
    org.apache.commons.lang3.text.StrMatcher splitMatcher() -> splitMatcher
    org.apache.commons.lang3.text.StrMatcher trimMatcher() -> trimMatcher
    org.apache.commons.lang3.text.StrMatcher singleQuoteMatcher() -> singleQuoteMatcher
    org.apache.commons.lang3.text.StrMatcher doubleQuoteMatcher() -> doubleQuoteMatcher
    org.apache.commons.lang3.text.StrMatcher quoteMatcher() -> quoteMatcher
    org.apache.commons.lang3.text.StrMatcher noneMatcher() -> noneMatcher
    org.apache.commons.lang3.text.StrMatcher charMatcher(char) -> charMatcher
    org.apache.commons.lang3.text.StrMatcher charSetMatcher(char[]) -> charSetMatcher
    org.apache.commons.lang3.text.StrMatcher charSetMatcher(java.lang.String) -> charSetMatcher
    org.apache.commons.lang3.text.StrMatcher stringMatcher(java.lang.String) -> stringMatcher
    int isMatch(char[],int,int,int) -> isMatch
    int isMatch(char[],int) -> isMatch
org.apache.commons.lang3.text.StrMatcher$CharMatcher -> org.apache.commons.lang3.text.StrMatcher$CharMatcher:
    char ch -> ch
    int isMatch(char[],int,int,int) -> isMatch
org.apache.commons.lang3.text.StrMatcher$CharSetMatcher -> org.apache.commons.lang3.text.StrMatcher$CharSetMatcher:
    char[] chars -> chars
    int isMatch(char[],int,int,int) -> isMatch
org.apache.commons.lang3.text.StrMatcher$NoMatcher -> org.apache.commons.lang3.text.StrMatcher$NoMatcher:
    int isMatch(char[],int,int,int) -> isMatch
org.apache.commons.lang3.text.StrMatcher$StringMatcher -> org.apache.commons.lang3.text.StrMatcher$StringMatcher:
    char[] chars -> chars
    int isMatch(char[],int,int,int) -> isMatch
org.apache.commons.lang3.text.StrMatcher$TrimMatcher -> org.apache.commons.lang3.text.StrMatcher$TrimMatcher:
    int isMatch(char[],int,int,int) -> isMatch
org.apache.commons.lang3.text.StrSubstitutor -> org.apache.commons.lang3.text.StrSubstitutor:
    char DEFAULT_ESCAPE -> DEFAULT_ESCAPE
    org.apache.commons.lang3.text.StrMatcher DEFAULT_PREFIX -> DEFAULT_PREFIX
    org.apache.commons.lang3.text.StrMatcher DEFAULT_SUFFIX -> DEFAULT_SUFFIX
    org.apache.commons.lang3.text.StrMatcher DEFAULT_VALUE_DELIMITER -> DEFAULT_VALUE_DELIMITER
    char escapeChar -> escapeChar
    org.apache.commons.lang3.text.StrMatcher prefixMatcher -> prefixMatcher
    org.apache.commons.lang3.text.StrMatcher suffixMatcher -> suffixMatcher
    org.apache.commons.lang3.text.StrMatcher valueDelimiterMatcher -> valueDelimiterMatcher
    org.apache.commons.lang3.text.StrLookup variableResolver -> variableResolver
    boolean enableSubstitutionInVariables -> enableSubstitutionInVariables
    java.lang.String replace(java.lang.Object,java.util.Map) -> replace
    java.lang.String replace(java.lang.Object,java.util.Map,java.lang.String,java.lang.String) -> replace
    java.lang.String replace(java.lang.Object,java.util.Properties) -> replace
    java.lang.String replaceSystemProperties(java.lang.Object) -> replaceSystemProperties
    java.lang.String replace(java.lang.String) -> replace
    java.lang.String replace(java.lang.String,int,int) -> replace
    java.lang.String replace(char[]) -> replace
    java.lang.String replace(char[],int,int) -> replace
    java.lang.String replace(java.lang.StringBuffer) -> replace
    java.lang.String replace(java.lang.StringBuffer,int,int) -> replace
    java.lang.String replace(java.lang.CharSequence) -> replace
    java.lang.String replace(java.lang.CharSequence,int,int) -> replace
    java.lang.String replace(org.apache.commons.lang3.text.StrBuilder) -> replace
    java.lang.String replace(org.apache.commons.lang3.text.StrBuilder,int,int) -> replace
    java.lang.String replace(java.lang.Object) -> replace
    boolean replaceIn(java.lang.StringBuffer) -> replaceIn
    boolean replaceIn(java.lang.StringBuffer,int,int) -> replaceIn
    boolean replaceIn(java.lang.StringBuilder) -> replaceIn
    boolean replaceIn(java.lang.StringBuilder,int,int) -> replaceIn
    boolean replaceIn(org.apache.commons.lang3.text.StrBuilder) -> replaceIn
    boolean replaceIn(org.apache.commons.lang3.text.StrBuilder,int,int) -> replaceIn
    boolean substitute(org.apache.commons.lang3.text.StrBuilder,int,int) -> substitute
    int substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List) -> substitute
    void checkCyclicSubstitution(java.lang.String,java.util.List) -> checkCyclicSubstitution
    java.lang.String resolveVariable(java.lang.String,org.apache.commons.lang3.text.StrBuilder,int,int) -> resolveVariable
    char getEscapeChar() -> getEscapeChar
    void setEscapeChar(char) -> setEscapeChar
    org.apache.commons.lang3.text.StrMatcher getVariablePrefixMatcher() -> getVariablePrefixMatcher
    org.apache.commons.lang3.text.StrSubstitutor setVariablePrefixMatcher(org.apache.commons.lang3.text.StrMatcher) -> setVariablePrefixMatcher
    org.apache.commons.lang3.text.StrSubstitutor setVariablePrefix(char) -> setVariablePrefix
    org.apache.commons.lang3.text.StrSubstitutor setVariablePrefix(java.lang.String) -> setVariablePrefix
    org.apache.commons.lang3.text.StrMatcher getVariableSuffixMatcher() -> getVariableSuffixMatcher
    org.apache.commons.lang3.text.StrSubstitutor setVariableSuffixMatcher(org.apache.commons.lang3.text.StrMatcher) -> setVariableSuffixMatcher
    org.apache.commons.lang3.text.StrSubstitutor setVariableSuffix(char) -> setVariableSuffix
    org.apache.commons.lang3.text.StrSubstitutor setVariableSuffix(java.lang.String) -> setVariableSuffix
    org.apache.commons.lang3.text.StrMatcher getValueDelimiterMatcher() -> getValueDelimiterMatcher
    org.apache.commons.lang3.text.StrSubstitutor setValueDelimiterMatcher(org.apache.commons.lang3.text.StrMatcher) -> setValueDelimiterMatcher
    org.apache.commons.lang3.text.StrSubstitutor setValueDelimiter(char) -> setValueDelimiter
    org.apache.commons.lang3.text.StrSubstitutor setValueDelimiter(java.lang.String) -> setValueDelimiter
    org.apache.commons.lang3.text.StrLookup getVariableResolver() -> getVariableResolver
    void setVariableResolver(org.apache.commons.lang3.text.StrLookup) -> setVariableResolver
    boolean isEnableSubstitutionInVariables() -> isEnableSubstitutionInVariables
    void setEnableSubstitutionInVariables(boolean) -> setEnableSubstitutionInVariables
org.apache.commons.lang3.text.StrTokenizer -> org.apache.commons.lang3.text.StrTokenizer:
    org.apache.commons.lang3.text.StrTokenizer CSV_TOKENIZER_PROTOTYPE -> CSV_TOKENIZER_PROTOTYPE
    org.apache.commons.lang3.text.StrTokenizer TSV_TOKENIZER_PROTOTYPE -> TSV_TOKENIZER_PROTOTYPE
    char[] chars -> chars
    java.lang.String[] tokens -> tokens
    int tokenPos -> tokenPos
    org.apache.commons.lang3.text.StrMatcher delimMatcher -> delimMatcher
    org.apache.commons.lang3.text.StrMatcher quoteMatcher -> quoteMatcher
    org.apache.commons.lang3.text.StrMatcher ignoredMatcher -> ignoredMatcher
    org.apache.commons.lang3.text.StrMatcher trimmerMatcher -> trimmerMatcher
    boolean emptyAsNull -> emptyAsNull
    boolean ignoreEmptyTokens -> ignoreEmptyTokens
    org.apache.commons.lang3.text.StrTokenizer getCSVClone() -> getCSVClone
    org.apache.commons.lang3.text.StrTokenizer getCSVInstance() -> getCSVInstance
    org.apache.commons.lang3.text.StrTokenizer getCSVInstance(java.lang.String) -> getCSVInstance
    org.apache.commons.lang3.text.StrTokenizer getCSVInstance(char[]) -> getCSVInstance
    org.apache.commons.lang3.text.StrTokenizer getTSVClone() -> getTSVClone
    org.apache.commons.lang3.text.StrTokenizer getTSVInstance() -> getTSVInstance
    org.apache.commons.lang3.text.StrTokenizer getTSVInstance(java.lang.String) -> getTSVInstance
    org.apache.commons.lang3.text.StrTokenizer getTSVInstance(char[]) -> getTSVInstance
    int size() -> size
    java.lang.String nextToken() -> nextToken
    java.lang.String previousToken() -> previousToken
    java.lang.String[] getTokenArray() -> getTokenArray
    java.util.List getTokenList() -> getTokenList
    org.apache.commons.lang3.text.StrTokenizer reset() -> reset
    org.apache.commons.lang3.text.StrTokenizer reset(java.lang.String) -> reset
    org.apache.commons.lang3.text.StrTokenizer reset(char[]) -> reset
    boolean hasNext() -> hasNext
    java.lang.String next() -> next
    int nextIndex() -> nextIndex
    boolean hasPrevious() -> hasPrevious
    java.lang.String previous() -> previous
    int previousIndex() -> previousIndex
    void remove() -> remove
    void set(java.lang.String) -> set
    void add(java.lang.String) -> add
    void checkTokenized() -> checkTokenized
    java.util.List tokenize(char[],int,int) -> tokenize
    void addToken(java.util.List,java.lang.String) -> addToken
    int readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List) -> readNextToken
    int readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int) -> readWithQuotes
    boolean isQuote(char[],int,int,int,int) -> isQuote
    org.apache.commons.lang3.text.StrMatcher getDelimiterMatcher() -> getDelimiterMatcher
    org.apache.commons.lang3.text.StrTokenizer setDelimiterMatcher(org.apache.commons.lang3.text.StrMatcher) -> setDelimiterMatcher
    org.apache.commons.lang3.text.StrTokenizer setDelimiterChar(char) -> setDelimiterChar
    org.apache.commons.lang3.text.StrTokenizer setDelimiterString(java.lang.String) -> setDelimiterString
    org.apache.commons.lang3.text.StrMatcher getQuoteMatcher() -> getQuoteMatcher
    org.apache.commons.lang3.text.StrTokenizer setQuoteMatcher(org.apache.commons.lang3.text.StrMatcher) -> setQuoteMatcher
    org.apache.commons.lang3.text.StrTokenizer setQuoteChar(char) -> setQuoteChar
    org.apache.commons.lang3.text.StrMatcher getIgnoredMatcher() -> getIgnoredMatcher
    org.apache.commons.lang3.text.StrTokenizer setIgnoredMatcher(org.apache.commons.lang3.text.StrMatcher) -> setIgnoredMatcher
    org.apache.commons.lang3.text.StrTokenizer setIgnoredChar(char) -> setIgnoredChar
    org.apache.commons.lang3.text.StrMatcher getTrimmerMatcher() -> getTrimmerMatcher
    org.apache.commons.lang3.text.StrTokenizer setTrimmerMatcher(org.apache.commons.lang3.text.StrMatcher) -> setTrimmerMatcher
    boolean isEmptyTokenAsNull() -> isEmptyTokenAsNull
    org.apache.commons.lang3.text.StrTokenizer setEmptyTokenAsNull(boolean) -> setEmptyTokenAsNull
    boolean isIgnoreEmptyTokens() -> isIgnoreEmptyTokens
    org.apache.commons.lang3.text.StrTokenizer setIgnoreEmptyTokens(boolean) -> setIgnoreEmptyTokens
    java.lang.String getContent() -> getContent
    java.lang.Object clone() -> clone
    java.lang.Object cloneReset() -> cloneReset
    java.lang.String toString() -> toString
    void add(java.lang.Object) -> add
    void set(java.lang.Object) -> set
    java.lang.Object previous() -> previous
    java.lang.Object next() -> next
org.apache.commons.lang3.text.WordUtils -> org.apache.commons.lang3.text.WordUtils:
    java.lang.String wrap(java.lang.String,int) -> wrap
    java.lang.String wrap(java.lang.String,int,java.lang.String,boolean) -> wrap
    java.lang.String capitalize(java.lang.String) -> capitalize
    java.lang.String capitalize(java.lang.String,char[]) -> capitalize
    java.lang.String capitalizeFully(java.lang.String) -> capitalizeFully
    java.lang.String capitalizeFully(java.lang.String,char[]) -> capitalizeFully
    java.lang.String uncapitalize(java.lang.String) -> uncapitalize
    java.lang.String uncapitalize(java.lang.String,char[]) -> uncapitalize
    java.lang.String swapCase(java.lang.String) -> swapCase
    java.lang.String initials(java.lang.String) -> initials
    java.lang.String initials(java.lang.String,char[]) -> initials
    boolean isDelimiter(char,char[]) -> isDelimiter
org.apache.commons.lang3.text.translate.AggregateTranslator -> org.apache.commons.lang3.text.translate.AggregateTranslator:
    org.apache.commons.lang3.text.translate.CharSequenceTranslator[] translators -> translators
    int translate(java.lang.CharSequence,int,java.io.Writer) -> translate
org.apache.commons.lang3.text.translate.CharSequenceTranslator -> org.apache.commons.lang3.text.translate.CharSequenceTranslator:
    int translate(java.lang.CharSequence,int,java.io.Writer) -> translate
    java.lang.String translate(java.lang.CharSequence) -> translate
    void translate(java.lang.CharSequence,java.io.Writer) -> translate
    org.apache.commons.lang3.text.translate.CharSequenceTranslator with(org.apache.commons.lang3.text.translate.CharSequenceTranslator[]) -> with
    java.lang.String hex(int) -> hex
org.apache.commons.lang3.text.translate.CodePointTranslator -> org.apache.commons.lang3.text.translate.CodePointTranslator:
    int translate(java.lang.CharSequence,int,java.io.Writer) -> translate
    boolean translate(int,java.io.Writer) -> translate
org.apache.commons.lang3.text.translate.EntityArrays -> org.apache.commons.lang3.text.translate.EntityArrays:
    java.lang.String[][] ISO8859_1_ESCAPE -> ISO8859_1_ESCAPE
    java.lang.String[][] ISO8859_1_UNESCAPE -> ISO8859_1_UNESCAPE
    java.lang.String[][] HTML40_EXTENDED_ESCAPE -> HTML40_EXTENDED_ESCAPE
    java.lang.String[][] HTML40_EXTENDED_UNESCAPE -> HTML40_EXTENDED_UNESCAPE
    java.lang.String[][] BASIC_ESCAPE -> BASIC_ESCAPE
    java.lang.String[][] BASIC_UNESCAPE -> BASIC_UNESCAPE
    java.lang.String[][] APOS_ESCAPE -> APOS_ESCAPE
    java.lang.String[][] APOS_UNESCAPE -> APOS_UNESCAPE
    java.lang.String[][] JAVA_CTRL_CHARS_ESCAPE -> JAVA_CTRL_CHARS_ESCAPE
    java.lang.String[][] JAVA_CTRL_CHARS_UNESCAPE -> JAVA_CTRL_CHARS_UNESCAPE
    java.lang.String[][] ISO8859_1_ESCAPE() -> ISO8859_1_ESCAPE
    java.lang.String[][] ISO8859_1_UNESCAPE() -> ISO8859_1_UNESCAPE
    java.lang.String[][] HTML40_EXTENDED_ESCAPE() -> HTML40_EXTENDED_ESCAPE
    java.lang.String[][] HTML40_EXTENDED_UNESCAPE() -> HTML40_EXTENDED_UNESCAPE
    java.lang.String[][] BASIC_ESCAPE() -> BASIC_ESCAPE
    java.lang.String[][] BASIC_UNESCAPE() -> BASIC_UNESCAPE
    java.lang.String[][] APOS_ESCAPE() -> APOS_ESCAPE
    java.lang.String[][] APOS_UNESCAPE() -> APOS_UNESCAPE
    java.lang.String[][] JAVA_CTRL_CHARS_ESCAPE() -> JAVA_CTRL_CHARS_ESCAPE
    java.lang.String[][] JAVA_CTRL_CHARS_UNESCAPE() -> JAVA_CTRL_CHARS_UNESCAPE
    java.lang.String[][] invert(java.lang.String[][]) -> invert
org.apache.commons.lang3.text.translate.JavaUnicodeEscaper -> org.apache.commons.lang3.text.translate.JavaUnicodeEscaper:
    org.apache.commons.lang3.text.translate.JavaUnicodeEscaper above(int) -> above
    org.apache.commons.lang3.text.translate.JavaUnicodeEscaper below(int) -> below
    org.apache.commons.lang3.text.translate.JavaUnicodeEscaper between(int,int) -> between
    org.apache.commons.lang3.text.translate.JavaUnicodeEscaper outsideOf(int,int) -> outsideOf
    java.lang.String toUtf16Escape(int) -> toUtf16Escape
org.apache.commons.lang3.text.translate.LookupTranslator -> org.apache.commons.lang3.text.translate.LookupTranslator:
    java.util.HashMap lookupMap -> lookupMap
    int shortest -> shortest
    int longest -> longest
    int translate(java.lang.CharSequence,int,java.io.Writer) -> translate
org.apache.commons.lang3.text.translate.NumericEntityEscaper -> org.apache.commons.lang3.text.translate.NumericEntityEscaper:
    int below -> below
    int above -> above
    boolean between -> between
    org.apache.commons.lang3.text.translate.NumericEntityEscaper below(int) -> below
    org.apache.commons.lang3.text.translate.NumericEntityEscaper above(int) -> above
    org.apache.commons.lang3.text.translate.NumericEntityEscaper between(int,int) -> between
    org.apache.commons.lang3.text.translate.NumericEntityEscaper outsideOf(int,int) -> outsideOf
    boolean translate(int,java.io.Writer) -> translate
org.apache.commons.lang3.text.translate.NumericEntityUnescaper -> org.apache.commons.lang3.text.translate.NumericEntityUnescaper:
    java.util.EnumSet options -> options
    boolean isSet(org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION) -> isSet
    int translate(java.lang.CharSequence,int,java.io.Writer) -> translate
org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION -> org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION:
    org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION semiColonRequired -> semiColonRequired
    org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION semiColonOptional -> semiColonOptional
    org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION errorIfNoSemiColon -> errorIfNoSemiColon
    org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION[] $VALUES -> $VALUES
    org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION[] values() -> values
    org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION valueOf(java.lang.String) -> valueOf
org.apache.commons.lang3.text.translate.OctalUnescaper -> org.apache.commons.lang3.text.translate.OctalUnescaper:
    int translate(java.lang.CharSequence,int,java.io.Writer) -> translate
    boolean isOctalDigit(char) -> isOctalDigit
    boolean isZeroToThree(char) -> isZeroToThree
org.apache.commons.lang3.text.translate.UnicodeEscaper -> org.apache.commons.lang3.text.translate.UnicodeEscaper:
    int below -> below
    int above -> above
    boolean between -> between
    org.apache.commons.lang3.text.translate.UnicodeEscaper below(int) -> below
    org.apache.commons.lang3.text.translate.UnicodeEscaper above(int) -> above
    org.apache.commons.lang3.text.translate.UnicodeEscaper outsideOf(int,int) -> outsideOf
    org.apache.commons.lang3.text.translate.UnicodeEscaper between(int,int) -> between
    boolean translate(int,java.io.Writer) -> translate
    java.lang.String toUtf16Escape(int) -> toUtf16Escape
org.apache.commons.lang3.text.translate.UnicodeUnescaper -> org.apache.commons.lang3.text.translate.UnicodeUnescaper:
    int translate(java.lang.CharSequence,int,java.io.Writer) -> translate
org.apache.commons.lang3.text.translate.UnicodeUnpairedSurrogateRemover -> org.apache.commons.lang3.text.translate.UnicodeUnpairedSurrogateRemover:
    boolean translate(int,java.io.Writer) -> translate
org.apache.commons.lang3.time.DateFormatUtils -> org.apache.commons.lang3.time.DateFormatUtils:
    java.util.TimeZone UTC_TIME_ZONE -> UTC_TIME_ZONE
    org.apache.commons.lang3.time.FastDateFormat ISO_DATETIME_FORMAT -> ISO_DATETIME_FORMAT
    org.apache.commons.lang3.time.FastDateFormat ISO_DATETIME_TIME_ZONE_FORMAT -> ISO_DATETIME_TIME_ZONE_FORMAT
    org.apache.commons.lang3.time.FastDateFormat ISO_DATE_FORMAT -> ISO_DATE_FORMAT
    org.apache.commons.lang3.time.FastDateFormat ISO_DATE_TIME_ZONE_FORMAT -> ISO_DATE_TIME_ZONE_FORMAT
    org.apache.commons.lang3.time.FastDateFormat ISO_TIME_FORMAT -> ISO_TIME_FORMAT
    org.apache.commons.lang3.time.FastDateFormat ISO_TIME_TIME_ZONE_FORMAT -> ISO_TIME_TIME_ZONE_FORMAT
    org.apache.commons.lang3.time.FastDateFormat ISO_TIME_NO_T_FORMAT -> ISO_TIME_NO_T_FORMAT
    org.apache.commons.lang3.time.FastDateFormat ISO_TIME_NO_T_TIME_ZONE_FORMAT -> ISO_TIME_NO_T_TIME_ZONE_FORMAT
    org.apache.commons.lang3.time.FastDateFormat SMTP_DATETIME_FORMAT -> SMTP_DATETIME_FORMAT
    java.lang.String formatUTC(long,java.lang.String) -> formatUTC
    java.lang.String formatUTC(java.util.Date,java.lang.String) -> formatUTC
    java.lang.String formatUTC(long,java.lang.String,java.util.Locale) -> formatUTC
    java.lang.String formatUTC(java.util.Date,java.lang.String,java.util.Locale) -> formatUTC
    java.lang.String format(long,java.lang.String) -> format
    java.lang.String format(java.util.Date,java.lang.String) -> format
    java.lang.String format(java.util.Calendar,java.lang.String) -> format
    java.lang.String format(long,java.lang.String,java.util.TimeZone) -> format
    java.lang.String format(java.util.Date,java.lang.String,java.util.TimeZone) -> format
    java.lang.String format(java.util.Calendar,java.lang.String,java.util.TimeZone) -> format
    java.lang.String format(long,java.lang.String,java.util.Locale) -> format
    java.lang.String format(java.util.Date,java.lang.String,java.util.Locale) -> format
    java.lang.String format(java.util.Calendar,java.lang.String,java.util.Locale) -> format
    java.lang.String format(long,java.lang.String,java.util.TimeZone,java.util.Locale) -> format
    java.lang.String format(java.util.Date,java.lang.String,java.util.TimeZone,java.util.Locale) -> format
    java.lang.String format(java.util.Calendar,java.lang.String,java.util.TimeZone,java.util.Locale) -> format
org.apache.commons.lang3.time.DateParser -> org.apache.commons.lang3.time.DateParser:
    java.util.Date parse(java.lang.String) -> parse
    java.util.Date parse(java.lang.String,java.text.ParsePosition) -> parse
    java.lang.String getPattern() -> getPattern
    java.util.TimeZone getTimeZone() -> getTimeZone
    java.util.Locale getLocale() -> getLocale
    java.lang.Object parseObject(java.lang.String) -> parseObject
    java.lang.Object parseObject(java.lang.String,java.text.ParsePosition) -> parseObject
org.apache.commons.lang3.time.DatePrinter -> org.apache.commons.lang3.time.DatePrinter:
    java.lang.String format(long) -> format
    java.lang.String format(java.util.Date) -> format
    java.lang.String format(java.util.Calendar) -> format
    java.lang.StringBuffer format(long,java.lang.StringBuffer) -> format
    java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer) -> format
    java.lang.StringBuffer format(java.util.Calendar,java.lang.StringBuffer) -> format
    java.lang.String getPattern() -> getPattern
    java.util.TimeZone getTimeZone() -> getTimeZone
    java.util.Locale getLocale() -> getLocale
    java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition) -> format
org.apache.commons.lang3.time.DateUtils -> org.apache.commons.lang3.time.DateUtils:
    long MILLIS_PER_SECOND -> MILLIS_PER_SECOND
    long MILLIS_PER_MINUTE -> MILLIS_PER_MINUTE
    long MILLIS_PER_HOUR -> MILLIS_PER_HOUR
    long MILLIS_PER_DAY -> MILLIS_PER_DAY
    int SEMI_MONTH -> SEMI_MONTH
    int[][] fields -> fields
    int RANGE_WEEK_SUNDAY -> RANGE_WEEK_SUNDAY
    int RANGE_WEEK_MONDAY -> RANGE_WEEK_MONDAY
    int RANGE_WEEK_RELATIVE -> RANGE_WEEK_RELATIVE
    int RANGE_WEEK_CENTER -> RANGE_WEEK_CENTER
    int RANGE_MONTH_SUNDAY -> RANGE_MONTH_SUNDAY
    int RANGE_MONTH_MONDAY -> RANGE_MONTH_MONDAY
    int MODIFY_TRUNCATE -> MODIFY_TRUNCATE
    int MODIFY_ROUND -> MODIFY_ROUND
    int MODIFY_CEILING -> MODIFY_CEILING
    boolean isSameDay(java.util.Date,java.util.Date) -> isSameDay
    boolean isSameDay(java.util.Calendar,java.util.Calendar) -> isSameDay
    boolean isSameInstant(java.util.Date,java.util.Date) -> isSameInstant
    boolean isSameInstant(java.util.Calendar,java.util.Calendar) -> isSameInstant
    boolean isSameLocalTime(java.util.Calendar,java.util.Calendar) -> isSameLocalTime
    java.util.Date parseDate(java.lang.String,java.lang.String[]) -> parseDate
    java.util.Date parseDate(java.lang.String,java.util.Locale,java.lang.String[]) -> parseDate
    java.util.Date parseDateStrictly(java.lang.String,java.lang.String[]) -> parseDateStrictly
    java.util.Date parseDateStrictly(java.lang.String,java.util.Locale,java.lang.String[]) -> parseDateStrictly
    java.util.Date parseDateWithLeniency(java.lang.String,java.util.Locale,java.lang.String[],boolean) -> parseDateWithLeniency
    java.util.Date addYears(java.util.Date,int) -> addYears
    java.util.Date addMonths(java.util.Date,int) -> addMonths
    java.util.Date addWeeks(java.util.Date,int) -> addWeeks
    java.util.Date addDays(java.util.Date,int) -> addDays
    java.util.Date addHours(java.util.Date,int) -> addHours
    java.util.Date addMinutes(java.util.Date,int) -> addMinutes
    java.util.Date addSeconds(java.util.Date,int) -> addSeconds
    java.util.Date addMilliseconds(java.util.Date,int) -> addMilliseconds
    java.util.Date add(java.util.Date,int,int) -> add
    java.util.Date setYears(java.util.Date,int) -> setYears
    java.util.Date setMonths(java.util.Date,int) -> setMonths
    java.util.Date setDays(java.util.Date,int) -> setDays
    java.util.Date setHours(java.util.Date,int) -> setHours
    java.util.Date setMinutes(java.util.Date,int) -> setMinutes
    java.util.Date setSeconds(java.util.Date,int) -> setSeconds
    java.util.Date setMilliseconds(java.util.Date,int) -> setMilliseconds
    java.util.Date set(java.util.Date,int,int) -> set
    java.util.Calendar toCalendar(java.util.Date) -> toCalendar
    java.util.Date round(java.util.Date,int) -> round
    java.util.Calendar round(java.util.Calendar,int) -> round
    java.util.Date round(java.lang.Object,int) -> round
    java.util.Date truncate(java.util.Date,int) -> truncate
    java.util.Calendar truncate(java.util.Calendar,int) -> truncate
    java.util.Date truncate(java.lang.Object,int) -> truncate
    java.util.Date ceiling(java.util.Date,int) -> ceiling
    java.util.Calendar ceiling(java.util.Calendar,int) -> ceiling
    java.util.Date ceiling(java.lang.Object,int) -> ceiling
    void modify(java.util.Calendar,int,int) -> modify
    java.util.Iterator iterator(java.util.Date,int) -> iterator
    java.util.Iterator iterator(java.util.Calendar,int) -> iterator
    java.util.Iterator iterator(java.lang.Object,int) -> iterator
    long getFragmentInMilliseconds(java.util.Date,int) -> getFragmentInMilliseconds
    long getFragmentInSeconds(java.util.Date,int) -> getFragmentInSeconds
    long getFragmentInMinutes(java.util.Date,int) -> getFragmentInMinutes
    long getFragmentInHours(java.util.Date,int) -> getFragmentInHours
    long getFragmentInDays(java.util.Date,int) -> getFragmentInDays
    long getFragmentInMilliseconds(java.util.Calendar,int) -> getFragmentInMilliseconds
    long getFragmentInSeconds(java.util.Calendar,int) -> getFragmentInSeconds
    long getFragmentInMinutes(java.util.Calendar,int) -> getFragmentInMinutes
    long getFragmentInHours(java.util.Calendar,int) -> getFragmentInHours
    long getFragmentInDays(java.util.Calendar,int) -> getFragmentInDays
    long getFragment(java.util.Date,int,java.util.concurrent.TimeUnit) -> getFragment
    long getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit) -> getFragment
    boolean truncatedEquals(java.util.Calendar,java.util.Calendar,int) -> truncatedEquals
    boolean truncatedEquals(java.util.Date,java.util.Date,int) -> truncatedEquals
    int truncatedCompareTo(java.util.Calendar,java.util.Calendar,int) -> truncatedCompareTo
    int truncatedCompareTo(java.util.Date,java.util.Date,int) -> truncatedCompareTo
org.apache.commons.lang3.time.DateUtils$DateIterator -> org.apache.commons.lang3.time.DateUtils$DateIterator:
    java.util.Calendar endFinal -> endFinal
    java.util.Calendar spot -> spot
    boolean hasNext() -> hasNext
    java.util.Calendar next() -> next
    void remove() -> remove
    java.lang.Object next() -> next
org.apache.commons.lang3.time.DurationFormatUtils -> org.apache.commons.lang3.time.DurationFormatUtils:
    java.lang.String ISO_EXTENDED_FORMAT_PATTERN -> ISO_EXTENDED_FORMAT_PATTERN
    java.lang.Object y -> y
    java.lang.Object M -> M
    java.lang.Object d -> d
    java.lang.Object H -> H
    java.lang.Object m -> m
    java.lang.Object s -> s
    java.lang.Object S -> S
    java.lang.String formatDurationHMS(long) -> formatDurationHMS
    java.lang.String formatDurationISO(long) -> formatDurationISO
    java.lang.String formatDuration(long,java.lang.String) -> formatDuration
    java.lang.String formatDuration(long,java.lang.String,boolean) -> formatDuration
    java.lang.String formatDurationWords(long,boolean,boolean) -> formatDurationWords
    java.lang.String formatPeriodISO(long,long) -> formatPeriodISO
    java.lang.String formatPeriod(long,long,java.lang.String) -> formatPeriod
    java.lang.String formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone) -> formatPeriod
    java.lang.String format(org.apache.commons.lang3.time.DurationFormatUtils$Token[],long,long,long,long,long,long,long,boolean) -> format
    java.lang.String paddedValue(long,boolean,int) -> paddedValue
    org.apache.commons.lang3.time.DurationFormatUtils$Token[] lexx(java.lang.String) -> lexx
org.apache.commons.lang3.time.DurationFormatUtils$Token -> org.apache.commons.lang3.time.DurationFormatUtils$Token:
    java.lang.Object value -> value
    int count -> count
    boolean containsTokenWithValue(org.apache.commons.lang3.time.DurationFormatUtils$Token[],java.lang.Object) -> containsTokenWithValue
    void increment() -> increment
    int getCount() -> getCount
    java.lang.Object getValue() -> getValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
org.apache.commons.lang3.time.FastDateFormat -> org.apache.commons.lang3.time.FastDateFormat:
    long serialVersionUID -> serialVersionUID
    int FULL -> FULL
    int LONG -> LONG
    int MEDIUM -> MEDIUM
    int SHORT -> SHORT
    org.apache.commons.lang3.time.FormatCache cache -> cache
    org.apache.commons.lang3.time.FastDatePrinter printer -> printer
    org.apache.commons.lang3.time.FastDateParser parser -> parser
    org.apache.commons.lang3.time.FastDateFormat getInstance() -> getInstance
    org.apache.commons.lang3.time.FastDateFormat getInstance(java.lang.String) -> getInstance
    org.apache.commons.lang3.time.FastDateFormat getInstance(java.lang.String,java.util.TimeZone) -> getInstance
    org.apache.commons.lang3.time.FastDateFormat getInstance(java.lang.String,java.util.Locale) -> getInstance
    org.apache.commons.lang3.time.FastDateFormat getInstance(java.lang.String,java.util.TimeZone,java.util.Locale) -> getInstance
    org.apache.commons.lang3.time.FastDateFormat getDateInstance(int) -> getDateInstance
    org.apache.commons.lang3.time.FastDateFormat getDateInstance(int,java.util.Locale) -> getDateInstance
    org.apache.commons.lang3.time.FastDateFormat getDateInstance(int,java.util.TimeZone) -> getDateInstance
    org.apache.commons.lang3.time.FastDateFormat getDateInstance(int,java.util.TimeZone,java.util.Locale) -> getDateInstance
    org.apache.commons.lang3.time.FastDateFormat getTimeInstance(int) -> getTimeInstance
    org.apache.commons.lang3.time.FastDateFormat getTimeInstance(int,java.util.Locale) -> getTimeInstance
    org.apache.commons.lang3.time.FastDateFormat getTimeInstance(int,java.util.TimeZone) -> getTimeInstance
    org.apache.commons.lang3.time.FastDateFormat getTimeInstance(int,java.util.TimeZone,java.util.Locale) -> getTimeInstance
    org.apache.commons.lang3.time.FastDateFormat getDateTimeInstance(int,int) -> getDateTimeInstance
    org.apache.commons.lang3.time.FastDateFormat getDateTimeInstance(int,int,java.util.Locale) -> getDateTimeInstance
    org.apache.commons.lang3.time.FastDateFormat getDateTimeInstance(int,int,java.util.TimeZone) -> getDateTimeInstance
    org.apache.commons.lang3.time.FastDateFormat getDateTimeInstance(int,int,java.util.TimeZone,java.util.Locale) -> getDateTimeInstance
    java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition) -> format
    java.lang.String format(long) -> format
    java.lang.String format(java.util.Date) -> format
    java.lang.String format(java.util.Calendar) -> format
    java.lang.StringBuffer format(long,java.lang.StringBuffer) -> format
    java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer) -> format
    java.lang.StringBuffer format(java.util.Calendar,java.lang.StringBuffer) -> format
    java.util.Date parse(java.lang.String) -> parse
    java.util.Date parse(java.lang.String,java.text.ParsePosition) -> parse
    java.lang.Object parseObject(java.lang.String,java.text.ParsePosition) -> parseObject
    java.lang.String getPattern() -> getPattern
    java.util.TimeZone getTimeZone() -> getTimeZone
    java.util.Locale getLocale() -> getLocale
    int getMaxLengthEstimate() -> getMaxLengthEstimate
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.StringBuffer applyRules(java.util.Calendar,java.lang.StringBuffer) -> applyRules
org.apache.commons.lang3.time.FastDateFormat$1 -> org.apache.commons.lang3.time.FastDateFormat$1:
    org.apache.commons.lang3.time.FastDateFormat createInstance(java.lang.String,java.util.TimeZone,java.util.Locale) -> createInstance
    java.text.Format createInstance(java.lang.String,java.util.TimeZone,java.util.Locale) -> createInstance
org.apache.commons.lang3.time.FastDateParser -> org.apache.commons.lang3.time.FastDateParser:
    long serialVersionUID -> serialVersionUID
    java.util.Locale JAPANESE_IMPERIAL -> JAPANESE_IMPERIAL
    java.lang.String pattern -> pattern
    java.util.TimeZone timeZone -> timeZone
    java.util.Locale locale -> locale
    int century -> century
    int startYear -> startYear
    java.util.regex.Pattern parsePattern -> parsePattern
    org.apache.commons.lang3.time.FastDateParser$Strategy[] strategies -> strategies
    java.lang.String currentFormatField -> currentFormatField
    org.apache.commons.lang3.time.FastDateParser$Strategy nextStrategy -> nextStrategy
    java.util.regex.Pattern formatPattern -> formatPattern
    java.util.concurrent.ConcurrentMap[] caches -> caches
    org.apache.commons.lang3.time.FastDateParser$Strategy ABBREVIATED_YEAR_STRATEGY -> ABBREVIATED_YEAR_STRATEGY
    org.apache.commons.lang3.time.FastDateParser$Strategy NUMBER_MONTH_STRATEGY -> NUMBER_MONTH_STRATEGY
    org.apache.commons.lang3.time.FastDateParser$Strategy LITERAL_YEAR_STRATEGY -> LITERAL_YEAR_STRATEGY
    org.apache.commons.lang3.time.FastDateParser$Strategy WEEK_OF_YEAR_STRATEGY -> WEEK_OF_YEAR_STRATEGY
    org.apache.commons.lang3.time.FastDateParser$Strategy WEEK_OF_MONTH_STRATEGY -> WEEK_OF_MONTH_STRATEGY
    org.apache.commons.lang3.time.FastDateParser$Strategy DAY_OF_YEAR_STRATEGY -> DAY_OF_YEAR_STRATEGY
    org.apache.commons.lang3.time.FastDateParser$Strategy DAY_OF_MONTH_STRATEGY -> DAY_OF_MONTH_STRATEGY
    org.apache.commons.lang3.time.FastDateParser$Strategy DAY_OF_WEEK_IN_MONTH_STRATEGY -> DAY_OF_WEEK_IN_MONTH_STRATEGY
    org.apache.commons.lang3.time.FastDateParser$Strategy HOUR_OF_DAY_STRATEGY -> HOUR_OF_DAY_STRATEGY
    org.apache.commons.lang3.time.FastDateParser$Strategy MODULO_HOUR_OF_DAY_STRATEGY -> MODULO_HOUR_OF_DAY_STRATEGY
    org.apache.commons.lang3.time.FastDateParser$Strategy MODULO_HOUR_STRATEGY -> MODULO_HOUR_STRATEGY
    org.apache.commons.lang3.time.FastDateParser$Strategy HOUR_STRATEGY -> HOUR_STRATEGY
    org.apache.commons.lang3.time.FastDateParser$Strategy MINUTE_STRATEGY -> MINUTE_STRATEGY
    org.apache.commons.lang3.time.FastDateParser$Strategy SECOND_STRATEGY -> SECOND_STRATEGY
    org.apache.commons.lang3.time.FastDateParser$Strategy MILLISECOND_STRATEGY -> MILLISECOND_STRATEGY
    void init(java.util.Calendar) -> init
    java.lang.String getPattern() -> getPattern
    java.util.TimeZone getTimeZone() -> getTimeZone
    java.util.Locale getLocale() -> getLocale
    java.util.regex.Pattern getParsePattern() -> getParsePattern
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    void readObject(java.io.ObjectInputStream) -> readObject
    java.lang.Object parseObject(java.lang.String) -> parseObject
    java.util.Date parse(java.lang.String) -> parse
    java.lang.Object parseObject(java.lang.String,java.text.ParsePosition) -> parseObject
    java.util.Date parse(java.lang.String,java.text.ParsePosition) -> parse
    java.lang.StringBuilder escapeRegex(java.lang.StringBuilder,java.lang.String,boolean) -> escapeRegex
    java.util.Map getDisplayNames(int,java.util.Calendar,java.util.Locale) -> getDisplayNames
    int adjustYear(int) -> adjustYear
    boolean isNextNumber() -> isNextNumber
    int getFieldWidth() -> getFieldWidth
    org.apache.commons.lang3.time.FastDateParser$Strategy getStrategy(java.lang.String,java.util.Calendar) -> getStrategy
    java.util.concurrent.ConcurrentMap getCache(int) -> getCache
    org.apache.commons.lang3.time.FastDateParser$Strategy getLocaleSpecificStrategy(int,java.util.Calendar) -> getLocaleSpecificStrategy
    java.lang.StringBuilder access$100(java.lang.StringBuilder,java.lang.String,boolean) -> access$100
    java.util.Map access$200(int,java.util.Calendar,java.util.Locale) -> access$200
    int access$300(org.apache.commons.lang3.time.FastDateParser,int) -> access$300
org.apache.commons.lang3.time.FastDateParser$1 -> org.apache.commons.lang3.time.FastDateParser$1:
    void setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String) -> setCalendar
org.apache.commons.lang3.time.FastDateParser$2 -> org.apache.commons.lang3.time.FastDateParser$2:
    int modify(int) -> modify
org.apache.commons.lang3.time.FastDateParser$3 -> org.apache.commons.lang3.time.FastDateParser$3:
    int modify(int) -> modify
org.apache.commons.lang3.time.FastDateParser$4 -> org.apache.commons.lang3.time.FastDateParser$4:
    int modify(int) -> modify
org.apache.commons.lang3.time.FastDateParser$CopyQuotedStrategy -> org.apache.commons.lang3.time.FastDateParser$CopyQuotedStrategy:
    java.lang.String formatField -> formatField
    boolean isNumber() -> isNumber
    boolean addRegex(org.apache.commons.lang3.time.FastDateParser,java.lang.StringBuilder) -> addRegex
org.apache.commons.lang3.time.FastDateParser$NumberStrategy -> org.apache.commons.lang3.time.FastDateParser$NumberStrategy:
    int field -> field
    boolean isNumber() -> isNumber
    boolean addRegex(org.apache.commons.lang3.time.FastDateParser,java.lang.StringBuilder) -> addRegex
    void setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String) -> setCalendar
    int modify(int) -> modify
org.apache.commons.lang3.time.FastDateParser$Strategy -> org.apache.commons.lang3.time.FastDateParser$Strategy:
    boolean isNumber() -> isNumber
    void setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String) -> setCalendar
    boolean addRegex(org.apache.commons.lang3.time.FastDateParser,java.lang.StringBuilder) -> addRegex
org.apache.commons.lang3.time.FastDateParser$TextStrategy -> org.apache.commons.lang3.time.FastDateParser$TextStrategy:
    int field -> field
    java.util.Map keyValues -> keyValues
    boolean addRegex(org.apache.commons.lang3.time.FastDateParser,java.lang.StringBuilder) -> addRegex
    void setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String) -> setCalendar
org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy -> org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy:
    java.lang.String validTimeZoneChars -> validTimeZoneChars
    java.util.SortedMap tzNames -> tzNames
    int ID -> ID
    int LONG_STD -> LONG_STD
    int SHORT_STD -> SHORT_STD
    int LONG_DST -> LONG_DST
    int SHORT_DST -> SHORT_DST
    boolean addRegex(org.apache.commons.lang3.time.FastDateParser,java.lang.StringBuilder) -> addRegex
    void setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String) -> setCalendar
org.apache.commons.lang3.time.FastDatePrinter -> org.apache.commons.lang3.time.FastDatePrinter:
    long serialVersionUID -> serialVersionUID
    int FULL -> FULL
    int LONG -> LONG
    int MEDIUM -> MEDIUM
    int SHORT -> SHORT
    java.lang.String mPattern -> mPattern
    java.util.TimeZone mTimeZone -> mTimeZone
    java.util.Locale mLocale -> mLocale
    org.apache.commons.lang3.time.FastDatePrinter$Rule[] mRules -> mRules
    int mMaxLengthEstimate -> mMaxLengthEstimate
    java.util.concurrent.ConcurrentMap cTimeZoneDisplayCache -> cTimeZoneDisplayCache
    void init() -> init
    java.util.List parsePattern() -> parsePattern
    java.lang.String parseToken(java.lang.String,int[]) -> parseToken
    org.apache.commons.lang3.time.FastDatePrinter$NumberRule selectNumberRule(int,int) -> selectNumberRule
    java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition) -> format
    java.lang.String format(long) -> format
    java.lang.String applyRulesToString(java.util.Calendar) -> applyRulesToString
    java.util.GregorianCalendar newCalendar() -> newCalendar
    java.lang.String format(java.util.Date) -> format
    java.lang.String format(java.util.Calendar) -> format
    java.lang.StringBuffer format(long,java.lang.StringBuffer) -> format
    java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer) -> format
    java.lang.StringBuffer format(java.util.Calendar,java.lang.StringBuffer) -> format
    java.lang.StringBuffer applyRules(java.util.Calendar,java.lang.StringBuffer) -> applyRules
    java.lang.String getPattern() -> getPattern
    java.util.TimeZone getTimeZone() -> getTimeZone
    java.util.Locale getLocale() -> getLocale
    int getMaxLengthEstimate() -> getMaxLengthEstimate
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    void readObject(java.io.ObjectInputStream) -> readObject
    java.lang.String getTimeZoneDisplay(java.util.TimeZone,boolean,int,java.util.Locale) -> getTimeZoneDisplay
org.apache.commons.lang3.time.FastDatePrinter$CharacterLiteral -> org.apache.commons.lang3.time.FastDatePrinter$CharacterLiteral:
    char mValue -> mValue
    int estimateLength() -> estimateLength
    void appendTo(java.lang.StringBuffer,java.util.Calendar) -> appendTo
org.apache.commons.lang3.time.FastDatePrinter$NumberRule -> org.apache.commons.lang3.time.FastDatePrinter$NumberRule:
    void appendTo(java.lang.StringBuffer,int) -> appendTo
org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField -> org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField:
    int mField -> mField
    int mSize -> mSize
    int estimateLength() -> estimateLength
    void appendTo(java.lang.StringBuffer,java.util.Calendar) -> appendTo
    void appendTo(java.lang.StringBuffer,int) -> appendTo
org.apache.commons.lang3.time.FastDatePrinter$Rule -> org.apache.commons.lang3.time.FastDatePrinter$Rule:
    int estimateLength() -> estimateLength
    void appendTo(java.lang.StringBuffer,java.util.Calendar) -> appendTo
org.apache.commons.lang3.time.FastDatePrinter$StringLiteral -> org.apache.commons.lang3.time.FastDatePrinter$StringLiteral:
    java.lang.String mValue -> mValue
    int estimateLength() -> estimateLength
    void appendTo(java.lang.StringBuffer,java.util.Calendar) -> appendTo
org.apache.commons.lang3.time.FastDatePrinter$TextField -> org.apache.commons.lang3.time.FastDatePrinter$TextField:
    int mField -> mField
    java.lang.String[] mValues -> mValues
    int estimateLength() -> estimateLength
    void appendTo(java.lang.StringBuffer,java.util.Calendar) -> appendTo
org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey -> org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey:
    java.util.TimeZone mTimeZone -> mTimeZone
    int mStyle -> mStyle
    java.util.Locale mLocale -> mLocale
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule -> org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule:
    java.util.Locale mLocale -> mLocale
    int mStyle -> mStyle
    java.lang.String mStandard -> mStandard
    java.lang.String mDaylight -> mDaylight
    int estimateLength() -> estimateLength
    void appendTo(java.lang.StringBuffer,java.util.Calendar) -> appendTo
org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule -> org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule:
    org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule INSTANCE_COLON -> INSTANCE_COLON
    org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule INSTANCE_NO_COLON -> INSTANCE_NO_COLON
    boolean mColon -> mColon
    int estimateLength() -> estimateLength
    void appendTo(java.lang.StringBuffer,java.util.Calendar) -> appendTo
org.apache.commons.lang3.time.FastDatePrinter$TwelveHourField -> org.apache.commons.lang3.time.FastDatePrinter$TwelveHourField:
    org.apache.commons.lang3.time.FastDatePrinter$NumberRule mRule -> mRule
    int estimateLength() -> estimateLength
    void appendTo(java.lang.StringBuffer,java.util.Calendar) -> appendTo
    void appendTo(java.lang.StringBuffer,int) -> appendTo
org.apache.commons.lang3.time.FastDatePrinter$TwentyFourHourField -> org.apache.commons.lang3.time.FastDatePrinter$TwentyFourHourField:
    org.apache.commons.lang3.time.FastDatePrinter$NumberRule mRule -> mRule
    int estimateLength() -> estimateLength
    void appendTo(java.lang.StringBuffer,java.util.Calendar) -> appendTo
    void appendTo(java.lang.StringBuffer,int) -> appendTo
org.apache.commons.lang3.time.FastDatePrinter$TwoDigitMonthField -> org.apache.commons.lang3.time.FastDatePrinter$TwoDigitMonthField:
    org.apache.commons.lang3.time.FastDatePrinter$TwoDigitMonthField INSTANCE -> INSTANCE
    int estimateLength() -> estimateLength
    void appendTo(java.lang.StringBuffer,java.util.Calendar) -> appendTo
    void appendTo(java.lang.StringBuffer,int) -> appendTo
org.apache.commons.lang3.time.FastDatePrinter$TwoDigitNumberField -> org.apache.commons.lang3.time.FastDatePrinter$TwoDigitNumberField:
    int mField -> mField
    int estimateLength() -> estimateLength
    void appendTo(java.lang.StringBuffer,java.util.Calendar) -> appendTo
    void appendTo(java.lang.StringBuffer,int) -> appendTo
org.apache.commons.lang3.time.FastDatePrinter$TwoDigitYearField -> org.apache.commons.lang3.time.FastDatePrinter$TwoDigitYearField:
    org.apache.commons.lang3.time.FastDatePrinter$TwoDigitYearField INSTANCE -> INSTANCE
    int estimateLength() -> estimateLength
    void appendTo(java.lang.StringBuffer,java.util.Calendar) -> appendTo
    void appendTo(java.lang.StringBuffer,int) -> appendTo
org.apache.commons.lang3.time.FastDatePrinter$UnpaddedMonthField -> org.apache.commons.lang3.time.FastDatePrinter$UnpaddedMonthField:
    org.apache.commons.lang3.time.FastDatePrinter$UnpaddedMonthField INSTANCE -> INSTANCE
    int estimateLength() -> estimateLength
    void appendTo(java.lang.StringBuffer,java.util.Calendar) -> appendTo
    void appendTo(java.lang.StringBuffer,int) -> appendTo
org.apache.commons.lang3.time.FastDatePrinter$UnpaddedNumberField -> org.apache.commons.lang3.time.FastDatePrinter$UnpaddedNumberField:
    int mField -> mField
    int estimateLength() -> estimateLength
    void appendTo(java.lang.StringBuffer,java.util.Calendar) -> appendTo
    void appendTo(java.lang.StringBuffer,int) -> appendTo
org.apache.commons.lang3.time.FormatCache -> org.apache.commons.lang3.time.FormatCache:
    int NONE -> NONE
    java.util.concurrent.ConcurrentMap cInstanceCache -> cInstanceCache
    java.util.concurrent.ConcurrentMap cDateTimeInstanceCache -> cDateTimeInstanceCache
    java.text.Format getInstance() -> getInstance
    java.text.Format getInstance(java.lang.String,java.util.TimeZone,java.util.Locale) -> getInstance
    java.text.Format createInstance(java.lang.String,java.util.TimeZone,java.util.Locale) -> createInstance
    java.text.Format getDateTimeInstance(java.lang.Integer,java.lang.Integer,java.util.TimeZone,java.util.Locale) -> getDateTimeInstance
    java.text.Format getDateTimeInstance(int,int,java.util.TimeZone,java.util.Locale) -> getDateTimeInstance
    java.text.Format getDateInstance(int,java.util.TimeZone,java.util.Locale) -> getDateInstance
    java.text.Format getTimeInstance(int,java.util.TimeZone,java.util.Locale) -> getTimeInstance
    java.lang.String getPatternForStyle(java.lang.Integer,java.lang.Integer,java.util.Locale) -> getPatternForStyle
org.apache.commons.lang3.time.FormatCache$MultipartKey -> org.apache.commons.lang3.time.FormatCache$MultipartKey:
    java.lang.Object[] keys -> keys
    int hashCode -> hashCode
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.apache.commons.lang3.time.StopWatch -> org.apache.commons.lang3.time.StopWatch:
    long NANO_2_MILLIS -> NANO_2_MILLIS
    org.apache.commons.lang3.time.StopWatch$State runningState -> runningState
    org.apache.commons.lang3.time.StopWatch$SplitState splitState -> splitState
    long startTime -> startTime
    long startTimeMillis -> startTimeMillis
    long stopTime -> stopTime
    void start() -> start
    void stop() -> stop
    void reset() -> reset
    void split() -> split
    void unsplit() -> unsplit
    void suspend() -> suspend
    void resume() -> resume
    long getTime() -> getTime
    long getNanoTime() -> getNanoTime
    long getSplitTime() -> getSplitTime
    long getSplitNanoTime() -> getSplitNanoTime
    long getStartTime() -> getStartTime
    java.lang.String toString() -> toString
    java.lang.String toSplitString() -> toSplitString
    boolean isStarted() -> isStarted
    boolean isSuspended() -> isSuspended
    boolean isStopped() -> isStopped
org.apache.commons.lang3.time.StopWatch$1 -> org.apache.commons.lang3.time.StopWatch$1:
org.apache.commons.lang3.time.StopWatch$SplitState -> org.apache.commons.lang3.time.StopWatch$SplitState:
    org.apache.commons.lang3.time.StopWatch$SplitState SPLIT -> SPLIT
    org.apache.commons.lang3.time.StopWatch$SplitState UNSPLIT -> UNSPLIT
    org.apache.commons.lang3.time.StopWatch$SplitState[] $VALUES -> $VALUES
    org.apache.commons.lang3.time.StopWatch$SplitState[] values() -> values
    org.apache.commons.lang3.time.StopWatch$SplitState valueOf(java.lang.String) -> valueOf
org.apache.commons.lang3.time.StopWatch$State -> org.apache.commons.lang3.time.StopWatch$State:
    org.apache.commons.lang3.time.StopWatch$State UNSTARTED -> UNSTARTED
    org.apache.commons.lang3.time.StopWatch$State RUNNING -> RUNNING
    org.apache.commons.lang3.time.StopWatch$State STOPPED -> STOPPED
    org.apache.commons.lang3.time.StopWatch$State SUSPENDED -> SUSPENDED
    org.apache.commons.lang3.time.StopWatch$State[] $VALUES -> $VALUES
    org.apache.commons.lang3.time.StopWatch$State[] values() -> values
    org.apache.commons.lang3.time.StopWatch$State valueOf(java.lang.String) -> valueOf
    boolean isStarted() -> isStarted
    boolean isStopped() -> isStopped
    boolean isSuspended() -> isSuspended
org.apache.commons.lang3.time.StopWatch$State$1 -> org.apache.commons.lang3.time.StopWatch$State$1:
    boolean isStarted() -> isStarted
    boolean isStopped() -> isStopped
    boolean isSuspended() -> isSuspended
org.apache.commons.lang3.time.StopWatch$State$2 -> org.apache.commons.lang3.time.StopWatch$State$2:
    boolean isStarted() -> isStarted
    boolean isStopped() -> isStopped
    boolean isSuspended() -> isSuspended
org.apache.commons.lang3.time.StopWatch$State$3 -> org.apache.commons.lang3.time.StopWatch$State$3:
    boolean isStarted() -> isStarted
    boolean isStopped() -> isStopped
    boolean isSuspended() -> isSuspended
org.apache.commons.lang3.time.StopWatch$State$4 -> org.apache.commons.lang3.time.StopWatch$State$4:
    boolean isStarted() -> isStarted
    boolean isStopped() -> isStopped
    boolean isSuspended() -> isSuspended
org.apache.commons.lang3.tuple.ImmutablePair -> org.apache.commons.lang3.tuple.ImmutablePair:
    long serialVersionUID -> serialVersionUID
    java.lang.Object left -> left
    java.lang.Object right -> right
    org.apache.commons.lang3.tuple.ImmutablePair of(java.lang.Object,java.lang.Object) -> of
    java.lang.Object getLeft() -> getLeft
    java.lang.Object getRight() -> getRight
    java.lang.Object setValue(java.lang.Object) -> setValue
org.apache.commons.lang3.tuple.ImmutableTriple -> org.apache.commons.lang3.tuple.ImmutableTriple:
    long serialVersionUID -> serialVersionUID
    java.lang.Object left -> left
    java.lang.Object middle -> middle
    java.lang.Object right -> right
    org.apache.commons.lang3.tuple.ImmutableTriple of(java.lang.Object,java.lang.Object,java.lang.Object) -> of
    java.lang.Object getLeft() -> getLeft
    java.lang.Object getMiddle() -> getMiddle
    java.lang.Object getRight() -> getRight
org.apache.commons.lang3.tuple.MutablePair -> org.apache.commons.lang3.tuple.MutablePair:
    long serialVersionUID -> serialVersionUID
    java.lang.Object left -> left
    java.lang.Object right -> right
    org.apache.commons.lang3.tuple.MutablePair of(java.lang.Object,java.lang.Object) -> of
    java.lang.Object getLeft() -> getLeft
    void setLeft(java.lang.Object) -> setLeft
    java.lang.Object getRight() -> getRight
    void setRight(java.lang.Object) -> setRight
    java.lang.Object setValue(java.lang.Object) -> setValue
org.apache.commons.lang3.tuple.MutableTriple -> org.apache.commons.lang3.tuple.MutableTriple:
    long serialVersionUID -> serialVersionUID
    java.lang.Object left -> left
    java.lang.Object middle -> middle
    java.lang.Object right -> right
    org.apache.commons.lang3.tuple.MutableTriple of(java.lang.Object,java.lang.Object,java.lang.Object) -> of
    java.lang.Object getLeft() -> getLeft
    void setLeft(java.lang.Object) -> setLeft
    java.lang.Object getMiddle() -> getMiddle
    void setMiddle(java.lang.Object) -> setMiddle
    java.lang.Object getRight() -> getRight
    void setRight(java.lang.Object) -> setRight
org.apache.commons.lang3.tuple.Pair -> org.apache.commons.lang3.tuple.Pair:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.lang3.tuple.Pair of(java.lang.Object,java.lang.Object) -> of
    java.lang.Object getLeft() -> getLeft
    java.lang.Object getRight() -> getRight
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    int compareTo(org.apache.commons.lang3.tuple.Pair) -> compareTo
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.String toString(java.lang.String) -> toString
    int compareTo(java.lang.Object) -> compareTo
org.apache.commons.lang3.tuple.Triple -> org.apache.commons.lang3.tuple.Triple:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.lang3.tuple.Triple of(java.lang.Object,java.lang.Object,java.lang.Object) -> of
    java.lang.Object getLeft() -> getLeft
    java.lang.Object getMiddle() -> getMiddle
    java.lang.Object getRight() -> getRight
    int compareTo(org.apache.commons.lang3.tuple.Triple) -> compareTo
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.String toString(java.lang.String) -> toString
    int compareTo(java.lang.Object) -> compareTo
org.apache.http.entity.mime.FormBodyPart -> org.apache.http.entity.mime.FormBodyPart:
    java.lang.String name -> name
    org.apache.http.entity.mime.Header header -> header
    org.apache.http.entity.mime.content.ContentBody body -> body
    java.lang.String getName() -> getName
    org.apache.http.entity.mime.content.ContentBody getBody() -> getBody
    org.apache.http.entity.mime.Header getHeader() -> getHeader
    void addField(java.lang.String,java.lang.String) -> addField
    void generateContentDisp(org.apache.http.entity.mime.content.ContentBody) -> generateContentDisp
    void generateContentType(org.apache.http.entity.mime.content.ContentBody) -> generateContentType
    void generateTransferEncoding(org.apache.http.entity.mime.content.ContentBody) -> generateTransferEncoding
org.apache.http.entity.mime.Header -> org.apache.http.entity.mime.Header:
    java.util.List fields -> fields
    java.util.Map fieldMap -> fieldMap
    void addField(org.apache.http.entity.mime.MinimalField) -> addField
    java.util.List getFields() -> getFields
    org.apache.http.entity.mime.MinimalField getField(java.lang.String) -> getField
    java.util.List getFields(java.lang.String) -> getFields
    int removeFields(java.lang.String) -> removeFields
    void setField(org.apache.http.entity.mime.MinimalField) -> setField
    java.util.Iterator iterator() -> iterator
    java.lang.String toString() -> toString
org.apache.http.entity.mime.HttpMultipart -> org.apache.http.entity.mime.HttpMultipart:
    org.apache.http.util.ByteArrayBuffer FIELD_SEP -> FIELD_SEP
    org.apache.http.util.ByteArrayBuffer CR_LF -> CR_LF
    org.apache.http.util.ByteArrayBuffer TWO_DASHES -> TWO_DASHES
    java.lang.String subType -> subType
    java.nio.charset.Charset charset -> charset
    java.lang.String boundary -> boundary
    java.util.List parts -> parts
    org.apache.http.entity.mime.HttpMultipartMode mode -> mode
    org.apache.http.util.ByteArrayBuffer encode(java.nio.charset.Charset,java.lang.String) -> encode
    void writeBytes(org.apache.http.util.ByteArrayBuffer,java.io.OutputStream) -> writeBytes
    void writeBytes(java.lang.String,java.nio.charset.Charset,java.io.OutputStream) -> writeBytes
    void writeBytes(java.lang.String,java.io.OutputStream) -> writeBytes
    void writeField(org.apache.http.entity.mime.MinimalField,java.io.OutputStream) -> writeField
    void writeField(org.apache.http.entity.mime.MinimalField,java.nio.charset.Charset,java.io.OutputStream) -> writeField
    java.lang.String getSubType() -> getSubType
    java.nio.charset.Charset getCharset() -> getCharset
    org.apache.http.entity.mime.HttpMultipartMode getMode() -> getMode
    java.util.List getBodyParts() -> getBodyParts
    void addBodyPart(org.apache.http.entity.mime.FormBodyPart) -> addBodyPart
    java.lang.String getBoundary() -> getBoundary
    void doWriteTo(org.apache.http.entity.mime.HttpMultipartMode,java.io.OutputStream,boolean) -> doWriteTo
    void writeTo(java.io.OutputStream) -> writeTo
    long getTotalLength() -> getTotalLength
org.apache.http.entity.mime.HttpMultipart$1 -> org.apache.http.entity.mime.HttpMultipart$1:
    int[] $SwitchMap$org$apache$http$entity$mime$HttpMultipartMode -> $SwitchMap$org$apache$http$entity$mime$HttpMultipartMode
org.apache.http.entity.mime.HttpMultipartMode -> org.apache.http.entity.mime.HttpMultipartMode:
    org.apache.http.entity.mime.HttpMultipartMode STRICT -> STRICT
    org.apache.http.entity.mime.HttpMultipartMode BROWSER_COMPATIBLE -> BROWSER_COMPATIBLE
    org.apache.http.entity.mime.HttpMultipartMode[] $VALUES -> $VALUES
    org.apache.http.entity.mime.HttpMultipartMode[] values() -> values
    org.apache.http.entity.mime.HttpMultipartMode valueOf(java.lang.String) -> valueOf
org.apache.http.entity.mime.MIME -> org.apache.http.entity.mime.MIME:
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    java.lang.String CONTENT_TRANSFER_ENC -> CONTENT_TRANSFER_ENC
    java.lang.String CONTENT_DISPOSITION -> CONTENT_DISPOSITION
    java.lang.String ENC_8BIT -> ENC_8BIT
    java.lang.String ENC_BINARY -> ENC_BINARY
    java.nio.charset.Charset DEFAULT_CHARSET -> DEFAULT_CHARSET
org.apache.http.entity.mime.MinimalField -> org.apache.http.entity.mime.MinimalField:
    java.lang.String name -> name
    java.lang.String value -> value
    java.lang.String getName() -> getName
    java.lang.String getBody() -> getBody
    java.lang.String toString() -> toString
org.apache.http.entity.mime.MultipartEntity -> org.apache.http.entity.mime.MultipartEntity:
    char[] MULTIPART_CHARS -> MULTIPART_CHARS
    org.apache.http.entity.mime.HttpMultipart multipart -> multipart
    org.apache.http.Header contentType -> contentType
    long length -> length
    boolean dirty -> dirty
    java.lang.String generateContentType(java.lang.String,java.nio.charset.Charset) -> generateContentType
    java.lang.String generateBoundary() -> generateBoundary
    void addPart(org.apache.http.entity.mime.FormBodyPart) -> addPart
    void addPart(java.lang.String,org.apache.http.entity.mime.content.ContentBody) -> addPart
    boolean isRepeatable() -> isRepeatable
    boolean isChunked() -> isChunked
    boolean isStreaming() -> isStreaming
    long getContentLength() -> getContentLength
    org.apache.http.Header getContentType() -> getContentType
    org.apache.http.Header getContentEncoding() -> getContentEncoding
    void consumeContent() -> consumeContent
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
org.apache.http.entity.mime.content.AbstractContentBody -> org.apache.http.entity.mime.content.AbstractContentBody:
    java.lang.String mimeType -> mimeType
    java.lang.String mediaType -> mediaType
    java.lang.String subType -> subType
    java.lang.String getMimeType() -> getMimeType
    java.lang.String getMediaType() -> getMediaType
    java.lang.String getSubType() -> getSubType
org.apache.http.entity.mime.content.ByteArrayBody -> org.apache.http.entity.mime.content.ByteArrayBody:
    byte[] data -> data
    java.lang.String filename -> filename
    java.lang.String getFilename() -> getFilename
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getCharset() -> getCharset
    java.lang.String getTransferEncoding() -> getTransferEncoding
    long getContentLength() -> getContentLength
org.apache.http.entity.mime.content.ContentBody -> org.apache.http.entity.mime.content.ContentBody:
    java.lang.String getFilename() -> getFilename
    void writeTo(java.io.OutputStream) -> writeTo
org.apache.http.entity.mime.content.ContentDescriptor -> org.apache.http.entity.mime.content.ContentDescriptor:
    java.lang.String getMimeType() -> getMimeType
    java.lang.String getMediaType() -> getMediaType
    java.lang.String getSubType() -> getSubType
    java.lang.String getCharset() -> getCharset
    java.lang.String getTransferEncoding() -> getTransferEncoding
    long getContentLength() -> getContentLength
org.apache.http.entity.mime.content.FileBody -> org.apache.http.entity.mime.content.FileBody:
    java.io.File file -> file
    java.lang.String filename -> filename
    java.lang.String charset -> charset
    java.io.InputStream getInputStream() -> getInputStream
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getTransferEncoding() -> getTransferEncoding
    java.lang.String getCharset() -> getCharset
    long getContentLength() -> getContentLength
    java.lang.String getFilename() -> getFilename
    java.io.File getFile() -> getFile
org.apache.http.entity.mime.content.InputStreamBody -> org.apache.http.entity.mime.content.InputStreamBody:
    java.io.InputStream in -> in
    java.lang.String filename -> filename
    java.io.InputStream getInputStream() -> getInputStream
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getTransferEncoding() -> getTransferEncoding
    java.lang.String getCharset() -> getCharset
    long getContentLength() -> getContentLength
    java.lang.String getFilename() -> getFilename
org.apache.http.entity.mime.content.StringBody -> org.apache.http.entity.mime.content.StringBody:
    byte[] content -> content
    java.nio.charset.Charset charset -> charset
    org.apache.http.entity.mime.content.StringBody create(java.lang.String,java.lang.String,java.nio.charset.Charset) -> create
    org.apache.http.entity.mime.content.StringBody create(java.lang.String,java.nio.charset.Charset) -> create
    org.apache.http.entity.mime.content.StringBody create(java.lang.String) -> create
    java.io.Reader getReader() -> getReader
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getTransferEncoding() -> getTransferEncoding
    java.lang.String getCharset() -> getCharset
    long getContentLength() -> getContentLength
    java.lang.String getFilename() -> getFilename
org.czy.download.Download -> org.a.a.a:
    android.content.Context activity -> b
    android.app.NotificationManager mNm -> c
    android.app.Notification mNotification -> d
    org.czy.download.Download download -> e
    java.util.List urls -> f
    com.github.snowdream.android.app.downloader.DownloadListener l -> a
    org.czy.download.Download getInstance(android.content.Context) -> a
    void download(java.lang.String,int,java.lang.String) -> a
    void installUpdate(android.content.Context,java.lang.String) -> a
    android.app.Notification access$0(org.czy.download.Download) -> a
    android.app.NotificationManager access$1(org.czy.download.Download) -> b
    java.util.List access$2(org.czy.download.Download) -> c
    android.content.Context access$3(org.czy.download.Download) -> d
    void access$4(org.czy.download.Download,android.content.Context,java.lang.String) -> a
org.czy.download.Download$1 -> org.a.a.b:
    int notifyCount -> b
    org.czy.download.Download this$0 -> a
    void onAdd(com.github.snowdream.android.app.downloader.DownloadTask) -> a
    void onDelete(com.github.snowdream.android.app.downloader.DownloadTask) -> b
    void onStop(com.github.snowdream.android.app.downloader.DownloadTask) -> c
    void onCancelled() -> onCancelled
    void onError(java.lang.Throwable) -> onError
    void onFinish() -> onFinish
    void onProgressUpdate(java.lang.Integer[]) -> a
    void onStart() -> onStart
    void onSuccess(com.github.snowdream.android.app.downloader.DownloadTask) -> d
    void onDelete(java.lang.Object) -> onDelete
    void onAdd(java.lang.Object) -> onAdd
    void onStop(java.lang.Object) -> onStop
    void onSuccess(java.lang.Object) -> onSuccess
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
org.czy.log.Logger -> org.a.b.a:
    void d(java.lang.String) -> a
    void e(java.lang.String) -> b
org.osgi.service.jpa.EntityManagerFactoryBuilder -> org.osgi.service.jpa.EntityManagerFactoryBuilder:
    java.lang.String JPA_UNIT_NAME -> JPA_UNIT_NAME
    java.lang.String JPA_UNIT_VERSION -> JPA_UNIT_VERSION
    java.lang.String JPA_UNIT_PROVIDER -> JPA_UNIT_PROVIDER
    javax.persistence.EntityManagerFactory createEntityManagerFactory(java.util.Map) -> createEntityManagerFactory
